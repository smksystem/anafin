2019-08-27 18:14:29,524,524 INFO [plugin_fivesteps.py:13] Initialize of plugin_fivesteps
2019-08-27 18:14:29,527,527 INFO [packsel.py:19] Running Mode = xdebug
2019-08-27 18:14:29,527,527 INFO [packsel_model.py:11] Initialize log of packsel_model
2019-08-27 18:14:29,527,527 INFO [monitor.py:56] Initialize Pinkybot
2019-08-27 18:14:29,598,598 DEBUG [plugin_fivesteps.py:24] {'planname': <tkinter.StringVar object at 0x03C51690>, 'rangeselect': <tkinter.StringVar object at 0x03C519B0>, 'monitorstock': <tkinter.StringVar object at 0x03C51AF0>, 'initinvest': <tkinter.StringVar object at 0x03C51B90>, 'volumestep': <tkinter.StringVar object at 0x03C51B50>, 'profitstep': <tkinter.StringVar object at 0x03C516B0>, 'topvaluebuy': <tkinter.StringVar object at 0x03C516F0>, 'startvaluebuy': <tkinter.StringVar object at 0x03D73FD0>, 'stopvaluebuy': <tkinter.StringVar object at 0x03D73E50>, 'floorvaluebuy': <tkinter.StringVar object at 0x03D7D5B0>, 'firstbuyflag': <tkinter.StringVar object at 0x03D7D630>, 'pluginfile': <tkinter.StringVar object at 0x03D7D230>, 'currentuseId': <tkinter.StringVar object at 0x03D7D190>, 'floorvaluerange': <tkinter.StringVar object at 0x03D7D0B0>, 'topvaluerange': <tkinter.StringVar object at 0x03D7D510>, 'commonvaluestep': <tkinter.StringVar object at 0x03D7D0F0>, 'runningmode': <tkinter.StringVar object at 0x03D7D7B0>, 'totalcostbuy': <tkinter.StringVar object at 0x03D7D670>, 'totalvolumebuy': <tkinter.StringVar object at 0x03D7D750>, 'stockpin': <tkinter.StringVar object at 0x03D7D6B0>, 'remaininvest': <tkinter.StringVar object at 0x03D7D8F0>}
2019-08-27 18:14:29,598,598 DEBUG [plugin_fivesteps.py:32] def setparameter print initial All monitorstock Parameter
2019-08-27 18:14:29,598,598 DEBUG [plugin_fivesteps.py:33] {'planname': <tkinter.StringVar object at 0x03C51690>, 'rangeselect': <tkinter.StringVar object at 0x03C519B0>, 'monitorstock': <tkinter.StringVar object at 0x03C51AF0>, 'initinvest': <tkinter.StringVar object at 0x03C51B90>, 'volumestep': <tkinter.StringVar object at 0x03C51B50>, 'profitstep': <tkinter.StringVar object at 0x03C516B0>, 'topvaluebuy': <tkinter.StringVar object at 0x03C516F0>, 'startvaluebuy': <tkinter.StringVar object at 0x03D73FD0>, 'stopvaluebuy': <tkinter.StringVar object at 0x03D73E50>, 'floorvaluebuy': <tkinter.StringVar object at 0x03D7D5B0>, 'firstbuyflag': <tkinter.StringVar object at 0x03D7D630>, 'pluginfile': <tkinter.StringVar object at 0x03D7D230>, 'currentuseId': <tkinter.StringVar object at 0x03D7D190>, 'floorvaluerange': <tkinter.StringVar object at 0x03D7D0B0>, 'topvaluerange': <tkinter.StringVar object at 0x03D7D510>, 'commonvaluestep': <tkinter.StringVar object at 0x03D7D0F0>, 'runningmode': <tkinter.StringVar object at 0x03D7D7B0>, 'totalcostbuy': <tkinter.StringVar object at 0x03D7D670>, 'totalvolumebuy': <tkinter.StringVar object at 0x03D7D750>, 'stockpin': <tkinter.StringVar object at 0x03D7D6B0>, 'remaininvest': <tkinter.StringVar object at 0x03D7D8F0>}
2019-08-27 18:14:29,601,601 DEBUG [plugin_fivesteps.py:91] Print stock pin value
2019-08-27 18:14:29,601,601 DEBUG [plugin_fivesteps.py:92] 
2019-08-27 18:14:29,650,650 DEBUG [plugin_fivesteps.py:247] Finish Prepare
2019-08-27 18:14:32,266,266 INFO [tkconsole.py:802] Execute Login
2019-08-27 18:14:32,267,267 INFO [monitor.py:118] Start Login
2019-08-27 18:14:42,799,799 DEBUG [packsel.py:195] Web load success
2019-08-27 18:14:47,906,906 INFO [monitor.py:163] Login seem to be succeeded , start to refresh all data from database with refresh all condition
2019-08-27 18:14:53,694,694 DEBUG [packsel.py:578] Print tablerow before loop
2019-08-27 18:14:53,694,694 DEBUG [packsel.py:579] []
2019-08-27 18:14:53,694,694 INFO [packsel.py:590] Number rows of Table Track = 0
2019-08-27 18:14:53,694,694 DEBUG [packsel.py:605] raw data for mytable before update to database in def refreshbtn
2019-08-27 18:14:53,694,694 DEBUG [packsel.py:607] []
2019-08-27 18:14:53,694,694 DEBUG [plugin_fivesteps.py:450] print price_change from checkprocess2order to order next plugin_fivesteps.py line 239
2019-08-27 18:14:53,694,694 DEBUG [plugin_fivesteps.py:451] 4.72
2019-08-27 18:14:53,694,694 DEBUG [plugin_fivesteps.py:456] Print rt_table this value should be empty for first time buy
2019-08-27 18:14:53,694,694 DEBUG [plugin_fivesteps.py:457] []
2019-08-27 18:14:53,695,695 DEBUG [plugin_fivesteps.py:459] Print configval from def checkprocess2order before fist buy order
2019-08-27 18:14:53,695,695 DEBUG [plugin_fivesteps.py:460] {'planname': <tkinter.StringVar object at 0x03C51690>, 'rangeselect': <tkinter.StringVar object at 0x03C519B0>, 'monitorstock': <tkinter.StringVar object at 0x03C51AF0>, 'initinvest': <tkinter.StringVar object at 0x03C51B90>, 'volumestep': <tkinter.StringVar object at 0x03C51B50>, 'profitstep': <tkinter.StringVar object at 0x03C516B0>, 'topvaluebuy': <tkinter.StringVar object at 0x03C516F0>, 'startvaluebuy': <tkinter.StringVar object at 0x03D73FD0>, 'stopvaluebuy': <tkinter.StringVar object at 0x03D73E50>, 'floorvaluebuy': <tkinter.StringVar object at 0x03D7D5B0>, 'firstbuyflag': <tkinter.StringVar object at 0x03D7D630>, 'pluginfile': <tkinter.StringVar object at 0x03D7D230>, 'currentuseId': <tkinter.StringVar object at 0x03D7D190>, 'floorvaluerange': <tkinter.StringVar object at 0x03D7D0B0>, 'topvaluerange': <tkinter.StringVar object at 0x03D7D510>, 'commonvaluestep': <tkinter.StringVar object at 0x03D7D0F0>, 'runningmode': <tkinter.StringVar object at 0x03D7D7B0>, 'totalcostbuy': <tkinter.StringVar object at 0x03D7D670>, 'totalvolumebuy': <tkinter.StringVar object at 0x03D7D750>, 'stockpin': <tkinter.StringVar object at 0x03D7D6B0>, 'remaininvest': <tkinter.StringVar object at 0x03D7D8F0>}
2019-08-27 18:14:53,702,702 DEBUG [plugin_fivesteps.py:479] Update first time to planname below ###
2019-08-27 18:14:53,702,702 DEBUG [plugin_fivesteps.py:480] 1
2019-08-27 18:14:53,702,702 DEBUG [plugin_fivesteps.py:344] ===== def order =====
2019-08-27 18:14:53,702,702 DEBUG [plugin_fivesteps.py:345] {'ordermode': 'buybybot', 'firstbuy': 'yes'}
2019-08-27 18:14:53,702,702 DEBUG [plugin_fivesteps.py:346] auto
2019-08-27 18:14:53,702,702 DEBUG [plugin_fivesteps.py:366] def order: First volume to buy orderdetail in def order
2019-08-27 18:14:53,702,702 DEBUG [plugin_fivesteps.py:368] {'monitorstock': 'WHA', 'volume': '1000', 'price': '4.72', 'stockpin': '44444444', 'order': 'buy'}
2019-08-27 18:14:53,702,702 DEBUG [packsel.py:433] Order params def order
2019-08-27 18:14:53,702,702 DEBUG [packsel.py:434] {'monitorstock': 'WHA', 'volume': '1000', 'price': '4.72', 'stockpin': '44444444', 'order': 'buy'}
2019-08-27 18:14:54,175,175 DEBUG [tkconsole.py:884] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-27 18:14:54,175,175 DEBUG [tkconsole.py:885] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-08-27 18:15:09,611,611 DEBUG [packsel.py:578] Print tablerow before loop
2019-08-27 18:15:09,611,611 DEBUG [packsel.py:579] [<selenium.webdriver.remote.webelement.WebElement (session="271d781ef7175a863bd98c621e89ab28", element="3e622922-018b-41f5-9716-82b5da2afbb6")>]
2019-08-27 18:15:09,627,627 DEBUG [packsel.py:584]   291785 18:15:04 WHA B 4.72 1000 0 0 0 Pending(S)
2019-08-27 18:15:09,649,649 INFO [packsel.py:590] Number rows of Table Track = 1
2019-08-27 18:15:09,649,649 DEBUG [packsel.py:605] raw data for mytable before update to database in def refreshbtn
2019-08-27 18:15:09,649,649 DEBUG [packsel.py:607] [['291785', '18:15:04', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Pending(S)']]
2019-08-27 18:15:09,649,649 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-08-27 18:15:09,650,650 DEBUG [packsel_model.py:370] <QuerySet []>
2019-08-27 18:15:09,697,697 DEBUG [plugin_fivesteps.py:376] [{'orderno': '291785', 'time': '18:15:04', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': 'None'}]
2019-08-27 18:15:09,697,697 DEBUG [plugin_fivesteps.py:377] {'orderno': '291785', 'time': '18:15:04', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': 'None'}
2019-08-27 18:15:09,701,701 DEBUG [plugin_fivesteps.py:263] !!! Now Monitoring before data in def putordermonitoring
2019-08-27 18:15:09,701,701 DEBUG [plugin_fivesteps.py:264] []
2019-08-27 18:15:09,701,701 DEBUG [plugin_fivesteps.py:265] [{'orderno': '291785', 'time': '18:15:04', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': 'None'}]
2019-08-27 18:15:09,701,701 ERROR [monitor.py:174] Exception occurred
Traceback (most recent call last):
  File "D:\workspace\anafin\pinkybot\monitor.py", line 172, in mypinkylogin
    self.monitoring(mydriver,return_login)
  File "D:\workspace\anafin\pinkybot\packsel.py", line 324, in monitoring
    resultvaluemonitor=self.myplugins.checkprocess2order(resultvaluechange,stockvalue,self.order)
  File "D:\workspace\anafin\pinkybot\plugin_fivesteps.py", line 483, in checkprocess2order
    self.txtout(resultbuy)
  File "D:\workspace\anafin\pinkybot\tkconsole.py", line 763, in txtout
    self.output.insert(tk.END,self.timenow.strftime("%H:%M:%S ") + str(txtmsg + "\n"))
TypeError: unsupported operand type(s) for +: 'NoneType' and 'str'
2019-08-27 18:15:10,188,188 DEBUG [tkconsole.py:884] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-27 18:15:10,189,189 DEBUG [tkconsole.py:885] {'qrefresh': 'refreshtk', 'doupdatetk': [{'orderno': '291785', 'time': '18:15:04', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': 'None'}]}
2019-08-27 18:15:10,189,189 DEBUG [tkconsole.py:908] print repeatidx case of price == 0
2019-08-27 18:15:10,189,189 DEBUG [tkconsole.py:909] 0
