2019-08-16 08:44:59,293,293 INFO [plugin_fivesteps.py:13] Initialize of plugin_fivesteps
2019-08-16 08:44:59,296,296 INFO [packsel_model.py:11] Initialize log of packsel_model
2019-08-16 08:44:59,378,378 DEBUG [plugin_fivesteps.py:32] def setparameter print initial All monitorstock Parameter
2019-08-16 08:44:59,378,378 DEBUG [plugin_fivesteps.py:33] {'planname': <tkinter.StringVar object at 0x03C2E410>, 'rangeselect': <tkinter.StringVar object at 0x03C2E730>, 'monitorstock': <tkinter.StringVar object at 0x03C2E870>, 'initinvest': <tkinter.StringVar object at 0x03C2E910>, 'volumestep': <tkinter.StringVar object at 0x03C2E8D0>, 'profitstep': <tkinter.StringVar object at 0x03C2E430>, 'topvaluebuy': <tkinter.StringVar object at 0x03C2E470>, 'startvaluebuy': <tkinter.StringVar object at 0x03C59DB0>, 'stopvaluebuy': <tkinter.StringVar object at 0x03C59D10>, 'floorvaluebuy': <tkinter.StringVar object at 0x03C59E10>, 'firstbuyflag': <tkinter.StringVar object at 0x03C59FF0>, 'pluginfile': <tkinter.StringVar object at 0x03C59CD0>, 'currentuseId': <tkinter.StringVar object at 0x03C59F10>, 'floorvaluerange': <tkinter.StringVar object at 0x03C59D50>, 'topvaluerange': <tkinter.StringVar object at 0x03C59CF0>, 'commonvaluestep': <tkinter.StringVar object at 0x03C59F50>, 'runningmode': <tkinter.StringVar object at 0x03D52530>, 'totalcostbuy': <tkinter.StringVar object at 0x03D52070>, 'totalvolumebuy': <tkinter.StringVar object at 0x03D524D0>, 'stockpin': <tkinter.StringVar object at 0x03D52130>, 'remaininvest': <tkinter.StringVar object at 0x03D52670>}
2019-08-16 08:44:59,387,387 DEBUG [plugin_fivesteps.py:91] Print stock pin value
2019-08-16 08:44:59,387,387 DEBUG [plugin_fivesteps.py:92] 
2019-08-16 08:45:10,589,589 INFO [tkconsole.py:797] Execute Login
2019-08-16 08:45:10,589,589 INFO [monitor.py:118] Start Login
2019-08-16 08:45:22,030,30 INFO [monitor.py:163] Login seem to be succeeded , start to refresh all data from database with refresh all condition
2019-08-16 08:45:22,031,31 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:22,032,32 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'all'}
2019-08-16 08:45:22,037,37 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:22,037,37 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'all'}
2019-08-16 08:45:22,042,42 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:22,042,42 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'all'}
2019-08-16 08:45:23,002,2 DEBUG [packsel.py:615] Do full update refresh all with below data in var mytable
2019-08-16 08:45:23,003,3 DEBUG [packsel.py:616] [['978331', '08:43:48', 'WHA', 'S', '4.98', '100', '0', '0', '0', 'Pending(S)'], ['598415', '08:43:47', 'WHA', 'S', '4.96', '100', '0', '0', '0', 'Pending(S)'], ['287780', '08:43:46', 'WHA', 'S', '4.94', '100', '0', '0', '0', 'Pending(S)'], ['347228', '08:43:45', 'WHA', 'S', '4.92', '100', '0', '0', '0', 'Pending(S)'], ['664364', '08:43:43', 'WHA', 'S', '4.90', '100', '0', '0', '0', 'Pending(S)'], ['219284', '08:43:42', 'WHA', 'S', '4.88', '100', '0', '0', '0', 'Pending(S)'], ['762565', '08:43:41', 'WHA', 'S', '4.86', '100', '0', '0', '0', 'Pending(S)'], ['638419', '08:43:40', 'WHA', 'S', '4.84', '100', '0', '0', '0', 'Pending(S)'], ['253197', '08:43:39', 'WHA', 'S', '4.82', '100', '0', '0', '0', 'Pending(S)'], ['708429', '08:43:38', 'WHA', 'S', '4.80', '100', '0', '0', '0', 'Pending(S)'], ['515530', '08:43:37', 'WHA', 'S', '4.78', '100', '0', '0', '0', 'Pending(S)'], ['557478', '08:43:36', 'WHA', 'S', '4.76', '100', '0', '0', '0', 'Pending(S)'], ['750509', '08:43:35', 'WHA', 'S', '4.74', '100', '0', '0', '0', 'Pending(S)'], ['963608', '08:43:17', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Matched(M)']]
2019-08-16 08:45:23,003,3 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:23,004,4 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:23,036,36 DEBUG [packsel_model.py:390] Refresh each row case chkorderno already existing in database and status
2019-08-16 08:45:23,036,36 DEBUG [packsel_model.py:391] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:23,038,38 DEBUG [packsel_model.py:392] Pending(S)
2019-08-16 08:45:23,039,39 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:23,039,39 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:23,040,40 DEBUG [packsel_model.py:390] Refresh each row case chkorderno already existing in database and status
2019-08-16 08:45:23,040,40 DEBUG [packsel_model.py:391] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:23,042,42 DEBUG [packsel_model.py:392] Pending(S)
2019-08-16 08:45:23,043,43 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:23,043,43 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:23,044,44 DEBUG [packsel_model.py:390] Refresh each row case chkorderno already existing in database and status
2019-08-16 08:45:23,045,45 DEBUG [packsel_model.py:391] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:23,046,46 DEBUG [packsel_model.py:392] Pending(S)
2019-08-16 08:45:23,047,47 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:23,047,47 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:23,048,48 DEBUG [packsel_model.py:390] Refresh each row case chkorderno already existing in database and status
2019-08-16 08:45:23,049,49 DEBUG [packsel_model.py:391] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:23,050,50 DEBUG [packsel_model.py:392] Pending(S)
2019-08-16 08:45:23,051,51 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:23,051,51 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:23,053,53 DEBUG [packsel_model.py:390] Refresh each row case chkorderno already existing in database and status
2019-08-16 08:45:23,053,53 DEBUG [packsel_model.py:391] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:23,054,54 DEBUG [packsel_model.py:392] Pending(S)
2019-08-16 08:45:23,055,55 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:23,055,55 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:23,057,57 DEBUG [packsel_model.py:390] Refresh each row case chkorderno already existing in database and status
2019-08-16 08:45:23,057,57 DEBUG [packsel_model.py:391] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:23,058,58 DEBUG [packsel_model.py:392] Pending(S)
2019-08-16 08:45:23,059,59 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:23,059,59 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:23,060,60 DEBUG [packsel_model.py:390] Refresh each row case chkorderno already existing in database and status
2019-08-16 08:45:23,060,60 DEBUG [packsel_model.py:391] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:23,062,62 DEBUG [packsel_model.py:392] Pending(S)
2019-08-16 08:45:23,062,62 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:23,063,63 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:23,064,64 DEBUG [packsel_model.py:390] Refresh each row case chkorderno already existing in database and status
2019-08-16 08:45:23,064,64 DEBUG [packsel_model.py:391] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:23,066,66 DEBUG [packsel_model.py:392] Pending(S)
2019-08-16 08:45:23,066,66 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:23,067,67 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:23,068,68 DEBUG [packsel_model.py:390] Refresh each row case chkorderno already existing in database and status
2019-08-16 08:45:23,068,68 DEBUG [packsel_model.py:391] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:23,070,70 DEBUG [packsel_model.py:392] Pending(S)
2019-08-16 08:45:23,070,70 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:23,071,71 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:23,072,72 DEBUG [packsel_model.py:390] Refresh each row case chkorderno already existing in database and status
2019-08-16 08:45:23,072,72 DEBUG [packsel_model.py:391] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:23,073,73 DEBUG [packsel_model.py:392] Pending(S)
2019-08-16 08:45:23,074,74 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:23,075,75 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:23,076,76 DEBUG [packsel_model.py:390] Refresh each row case chkorderno already existing in database and status
2019-08-16 08:45:23,076,76 DEBUG [packsel_model.py:391] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:23,077,77 DEBUG [packsel_model.py:392] Pending(S)
2019-08-16 08:45:23,078,78 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:23,078,78 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:23,080,80 DEBUG [packsel_model.py:390] Refresh each row case chkorderno already existing in database and status
2019-08-16 08:45:23,080,80 DEBUG [packsel_model.py:391] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:23,081,81 DEBUG [packsel_model.py:392] Pending(S)
2019-08-16 08:45:23,082,82 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:23,082,82 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:23,084,84 DEBUG [packsel_model.py:390] Refresh each row case chkorderno already existing in database and status
2019-08-16 08:45:23,084,84 DEBUG [packsel_model.py:391] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:23,086,86 DEBUG [packsel_model.py:392] Pending(S)
2019-08-16 08:45:23,086,86 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:23,087,87 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:45:23,088,88 DEBUG [packsel_model.py:390] Refresh each row case chkorderno already existing in database and status
2019-08-16 08:45:23,088,88 DEBUG [packsel_model.py:391] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:45:23,090,90 DEBUG [packsel_model.py:392] Matched(M)
2019-08-16 08:45:23,092,92 DEBUG [packsel.py:622] Get all data from database in var rowupdaterefresh
2019-08-16 08:45:23,092,92 DEBUG [packsel.py:623] [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]
2019-08-16 08:45:23,092,92 DEBUG [plugin_fivesteps.py:476] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:45:23,092,92 DEBUG [plugin_fivesteps.py:477] [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]
2019-08-16 08:45:23,092,92 DEBUG [plugin_fivesteps.py:478] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:45:23,092,92 DEBUG [plugin_fivesteps.py:479] [{'orderno': '978331', 'price': '4.98', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '598415', 'price': '4.96', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '287780', 'price': '4.94', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '347228', 'price': '4.92', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '664364', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '219284', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '762565', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '638419', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '253197', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '708429', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '515530', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '557478', 'price': '4.76', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '750509', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '963608'}]
2019-08-16 08:45:23,093,93 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:45:23,094,94 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}, {'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]}
2019-08-16 08:45:23,094,94 DEBUG [tkconsole.py:901] print repeatidx case of price == 0
2019-08-16 08:45:23,094,94 DEBUG [tkconsole.py:902] 0
2019-08-16 08:45:23,110,110 DEBUG [tkconsole.py:901] print repeatidx case of price == 0
2019-08-16 08:45:23,111,111 DEBUG [tkconsole.py:902] 0
2019-08-16 08:45:23,117,117 DEBUG [tkconsole.py:901] print repeatidx case of price == 0
2019-08-16 08:45:23,117,117 DEBUG [tkconsole.py:902] 0
2019-08-16 08:45:23,123,123 DEBUG [tkconsole.py:901] print repeatidx case of price == 0
2019-08-16 08:45:23,123,123 DEBUG [tkconsole.py:902] 0
2019-08-16 08:45:23,129,129 DEBUG [tkconsole.py:901] print repeatidx case of price == 0
2019-08-16 08:45:23,129,129 DEBUG [tkconsole.py:902] 0
2019-08-16 08:45:23,136,136 DEBUG [tkconsole.py:901] print repeatidx case of price == 0
2019-08-16 08:45:23,136,136 DEBUG [tkconsole.py:902] 0
2019-08-16 08:45:23,141,141 DEBUG [tkconsole.py:901] print repeatidx case of price == 0
2019-08-16 08:45:23,141,141 DEBUG [tkconsole.py:902] 0
2019-08-16 08:45:23,145,145 DEBUG [tkconsole.py:901] print repeatidx case of price == 0
2019-08-16 08:45:23,145,145 DEBUG [tkconsole.py:902] 0
2019-08-16 08:45:23,149,149 DEBUG [tkconsole.py:901] print repeatidx case of price == 0
2019-08-16 08:45:23,149,149 DEBUG [tkconsole.py:902] 0
2019-08-16 08:45:23,154,154 DEBUG [tkconsole.py:901] print repeatidx case of price == 0
2019-08-16 08:45:23,154,154 DEBUG [tkconsole.py:902] 0
2019-08-16 08:45:23,158,158 DEBUG [tkconsole.py:901] print repeatidx case of price == 0
2019-08-16 08:45:23,158,158 DEBUG [tkconsole.py:902] 0
2019-08-16 08:45:23,162,162 DEBUG [tkconsole.py:901] print repeatidx case of price == 0
2019-08-16 08:45:23,162,162 DEBUG [tkconsole.py:902] 0
2019-08-16 08:45:23,166,166 DEBUG [tkconsole.py:901] print repeatidx case of price == 0
2019-08-16 08:45:23,167,167 DEBUG [tkconsole.py:902] 0
2019-08-16 08:45:23,171,171 DEBUG [tkconsole.py:901] print repeatidx case of price == 0
2019-08-16 08:45:23,171,171 DEBUG [tkconsole.py:902] 0
2019-08-16 08:45:27,947,947 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:27,947,947 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:27,951,951 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:27,951,951 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:27,954,954 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:27,954,954 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:27,957,957 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:27,957,957 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:27,960,960 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:27,960,960 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:27,963,963 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:27,963,963 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:27,966,966 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:27,966,966 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:27,969,969 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:27,969,969 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:27,972,972 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:27,972,972 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:27,975,975 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:27,975,975 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:27,978,978 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:27,978,978 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:27,981,981 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:27,981,981 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:27,984,984 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:27,984,984 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:27,987,987 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:27,987,987 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:45:27,990,990 DEBUG [plugin_fivesteps.py:434] print price_change from checkprocess2order to order next plugin_fivesteps.py line 239
2019-08-16 08:45:27,990,990 DEBUG [plugin_fivesteps.py:435] 4.72
2019-08-16 08:45:27,990,990 DEBUG [plugin_fivesteps.py:440] Print rt_table this value should be empty for first time buy
2019-08-16 08:45:27,990,990 DEBUG [plugin_fivesteps.py:441] []
2019-08-16 08:45:27,990,990 DEBUG [plugin_fivesteps.py:443] Print configval from def checkprocess2order before fist buy order
2019-08-16 08:45:27,990,990 DEBUG [plugin_fivesteps.py:444] {'planname': <tkinter.StringVar object at 0x03C2E410>, 'rangeselect': <tkinter.StringVar object at 0x03C2E730>, 'monitorstock': <tkinter.StringVar object at 0x03C2E870>, 'initinvest': <tkinter.StringVar object at 0x03C2E910>, 'volumestep': <tkinter.StringVar object at 0x03C2E8D0>, 'profitstep': <tkinter.StringVar object at 0x03C2E430>, 'topvaluebuy': <tkinter.StringVar object at 0x03C2E470>, 'startvaluebuy': <tkinter.StringVar object at 0x03C59DB0>, 'stopvaluebuy': <tkinter.StringVar object at 0x03C59D10>, 'floorvaluebuy': <tkinter.StringVar object at 0x03C59E10>, 'firstbuyflag': <tkinter.StringVar object at 0x03C59FF0>, 'pluginfile': <tkinter.StringVar object at 0x03C59CD0>, 'currentuseId': <tkinter.StringVar object at 0x03C59F10>, 'floorvaluerange': <tkinter.StringVar object at 0x03C59D50>, 'topvaluerange': <tkinter.StringVar object at 0x03C59CF0>, 'commonvaluestep': <tkinter.StringVar object at 0x03C59F50>, 'runningmode': <tkinter.StringVar object at 0x03D52530>, 'totalcostbuy': <tkinter.StringVar object at 0x03D52070>, 'totalvolumebuy': <tkinter.StringVar object at 0x03D524D0>, 'stockpin': <tkinter.StringVar object at 0x03D52130>, 'remaininvest': <tkinter.StringVar object at 0x03D52670>}
2019-08-16 08:45:27,993,993 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:45:27,994,994 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-08-16 08:45:30,990,990 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:30,990,990 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:30,993,993 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:30,993,993 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:30,995,995 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:30,996,996 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:30,998,998 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:30,999,999 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:31,002,2 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:31,002,2 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:31,005,5 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:31,005,5 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:31,007,7 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:31,008,8 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:31,010,10 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:31,010,10 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:31,013,13 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:31,013,13 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:31,015,15 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:31,016,16 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:31,018,18 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:31,018,18 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:31,021,21 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:31,021,21 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:31,023,23 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:31,023,23 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:31,026,26 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:31,026,26 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:45:31,028,28 DEBUG [plugin_fivesteps.py:476] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:45:31,028,28 DEBUG [plugin_fivesteps.py:477] []
2019-08-16 08:45:31,028,28 DEBUG [plugin_fivesteps.py:478] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:45:31,028,28 DEBUG [plugin_fivesteps.py:479] [{'orderno': '978331', 'price': '4.98', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '598415', 'price': '4.96', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '287780', 'price': '4.94', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '347228', 'price': '4.92', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '664364', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '219284', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '762565', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '638419', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '253197', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '708429', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '515530', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '557478', 'price': '4.76', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '750509', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '963608'}]
2019-08-16 08:45:31,045,45 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:45:31,045,45 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-08-16 08:45:33,110,110 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:33,110,110 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:34,027,27 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:34,027,27 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:34,030,30 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:34,030,30 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:34,033,33 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:34,033,33 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:34,036,36 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:34,036,36 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:34,038,38 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:34,039,39 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:34,041,41 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:34,041,41 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:34,044,44 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:34,044,44 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:34,046,46 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:34,047,47 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:34,049,49 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:34,049,49 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:34,052,52 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:34,052,52 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:34,054,54 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:34,055,55 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:34,057,57 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:34,057,57 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:34,060,60 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:34,060,60 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:34,062,62 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:34,063,63 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:45:34,065,65 DEBUG [plugin_fivesteps.py:476] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:45:34,065,65 DEBUG [plugin_fivesteps.py:477] []
2019-08-16 08:45:34,065,65 DEBUG [plugin_fivesteps.py:478] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:45:34,065,65 DEBUG [plugin_fivesteps.py:479] [{'orderno': '978331', 'price': '4.98', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '598415', 'price': '4.96', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '287780', 'price': '4.94', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '347228', 'price': '4.92', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '664364', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '219284', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '762565', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '638419', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '253197', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '708429', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '515530', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '557478', 'price': '4.76', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '750509', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '963608'}]
2019-08-16 08:45:34,068,68 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:45:34,068,68 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-08-16 08:45:36,118,118 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:36,119,119 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:36,997,997 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:36,998,998 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:37,001,1 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:37,001,1 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:37,005,5 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:37,005,5 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:37,008,8 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:37,008,8 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:37,011,11 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:37,011,11 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:37,015,15 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:37,015,15 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:37,018,18 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:37,018,18 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:37,022,22 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:37,022,22 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:37,025,25 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:37,025,25 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:37,028,28 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:37,028,28 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:37,032,32 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:37,032,32 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:37,035,35 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:37,035,35 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:37,038,38 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:37,039,39 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:37,042,42 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:37,042,42 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:45:37,045,45 DEBUG [plugin_fivesteps.py:476] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:45:37,045,45 DEBUG [plugin_fivesteps.py:477] []
2019-08-16 08:45:37,045,45 DEBUG [plugin_fivesteps.py:478] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:45:37,045,45 DEBUG [plugin_fivesteps.py:479] [{'orderno': '978331', 'price': '4.98', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '598415', 'price': '4.96', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '287780', 'price': '4.94', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '347228', 'price': '4.92', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '664364', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '219284', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '762565', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '638419', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '253197', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '708429', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '515530', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '557478', 'price': '4.76', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '750509', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '963608'}]
2019-08-16 08:45:37,061,61 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:45:37,061,61 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-08-16 08:45:39,254,254 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:39,254,254 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:39,260,260 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:39,260,260 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:40,184,184 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:40,184,184 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:40,187,187 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:40,187,187 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:40,190,190 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:40,190,190 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:40,192,192 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:40,193,193 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:40,195,195 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:40,195,195 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:40,198,198 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:40,198,198 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:40,201,201 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:40,201,201 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:40,203,203 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:40,204,204 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:40,206,206 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:40,206,206 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:40,209,209 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:40,209,209 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:40,212,212 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:40,212,212 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:40,214,214 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:40,214,214 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:40,217,217 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:40,217,217 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:40,219,219 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:40,220,220 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:45:40,222,222 DEBUG [plugin_fivesteps.py:476] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:45:40,222,222 DEBUG [plugin_fivesteps.py:477] []
2019-08-16 08:45:40,222,222 DEBUG [plugin_fivesteps.py:478] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:45:40,222,222 DEBUG [plugin_fivesteps.py:479] [{'orderno': '978331', 'price': '4.98', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '598415', 'price': '4.96', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '287780', 'price': '4.94', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '347228', 'price': '4.92', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '664364', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '219284', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '762565', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '638419', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '253197', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '708429', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '515530', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '557478', 'price': '4.76', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '750509', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '963608'}]
2019-08-16 08:45:40,225,225 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:45:40,225,225 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-08-16 08:45:42,365,365 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:42,365,365 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:43,294,294 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:43,295,295 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:43,297,297 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:43,298,298 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:43,300,300 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:43,300,300 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:43,303,303 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:43,303,303 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:43,306,306 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:43,307,307 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:43,309,309 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:43,310,310 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:43,312,312 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:43,312,312 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:43,315,315 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:43,316,316 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:43,319,319 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:43,319,319 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:43,322,322 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:43,322,322 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:43,325,325 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:43,325,325 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:43,328,328 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:43,328,328 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:43,330,330 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:43,331,331 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:43,334,334 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:43,334,334 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:45:43,336,336 DEBUG [plugin_fivesteps.py:476] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:45:43,337,337 DEBUG [plugin_fivesteps.py:477] []
2019-08-16 08:45:43,337,337 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:45:43,337,337 DEBUG [plugin_fivesteps.py:478] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:45:43,337,337 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-08-16 08:45:43,337,337 DEBUG [plugin_fivesteps.py:479] [{'orderno': '978331', 'price': '4.98', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '598415', 'price': '4.96', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '287780', 'price': '4.94', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '347228', 'price': '4.92', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '664364', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '219284', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '762565', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '638419', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '253197', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '708429', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '515530', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '557478', 'price': '4.76', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '750509', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '963608'}]
2019-08-16 08:45:45,445,445 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:45,445,445 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:46,365,365 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:46,365,365 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:46,368,368 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:46,369,369 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:46,371,371 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:46,371,371 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:46,374,374 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:46,374,374 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:46,376,376 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:46,377,377 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:46,379,379 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:46,379,379 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:46,382,382 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:46,382,382 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:46,385,385 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:46,385,385 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:46,387,387 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:46,388,388 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:46,390,390 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:46,390,390 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:46,393,393 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:46,393,393 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:46,395,395 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:46,395,395 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:46,398,398 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:46,398,398 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:46,400,400 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:46,401,401 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:45:46,403,403 DEBUG [plugin_fivesteps.py:476] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:45:46,403,403 DEBUG [plugin_fivesteps.py:477] []
2019-08-16 08:45:46,403,403 DEBUG [plugin_fivesteps.py:478] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:45:46,403,403 DEBUG [plugin_fivesteps.py:479] [{'orderno': '978331', 'price': '4.98', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '598415', 'price': '4.96', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '287780', 'price': '4.94', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '347228', 'price': '4.92', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '664364', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '219284', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '762565', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '638419', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '253197', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '708429', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '515530', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '557478', 'price': '4.76', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '750509', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '963608'}]
2019-08-16 08:45:46,404,404 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:45:46,404,404 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-08-16 08:45:48,449,449 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:48,449,449 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:48,454,454 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:48,454,454 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:49,380,380 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:49,380,380 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:49,383,383 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:49,384,384 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:49,386,386 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:49,387,387 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:49,389,389 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:49,389,389 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:49,392,392 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:49,392,392 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:49,394,394 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:49,395,395 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:49,397,397 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:49,397,397 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:49,400,400 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:49,400,400 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:49,403,403 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:49,403,403 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:49,406,406 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:49,406,406 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:49,409,409 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:49,409,409 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:49,412,412 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:49,412,412 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:49,414,414 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:49,415,415 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:49,523,523 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:49,523,523 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:45:49,526,526 DEBUG [plugin_fivesteps.py:476] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:45:49,526,526 DEBUG [plugin_fivesteps.py:477] [{'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'matchedtime': 'matchtime', 'referorderno': 'None'}]
2019-08-16 08:45:49,526,526 DEBUG [plugin_fivesteps.py:478] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:45:49,526,526 DEBUG [plugin_fivesteps.py:479] [{'orderno': '978331', 'price': '4.98', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '598415', 'price': '4.96', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '287780', 'price': '4.94', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '347228', 'price': '4.92', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '664364', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '219284', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '762565', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '638419', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '253197', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '708429', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '515530', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '557478', 'price': '4.76', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '750509', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '963608'}]
2019-08-16 08:45:49,529,529 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:45:49,529,529 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': [{'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'matchedtime': 'matchtime', 'referorderno': 'None'}]}
2019-08-16 08:45:49,563,563 DEBUG [plugin_fivesteps.py:515] Match found do remove matchedordermonitor below data
2019-08-16 08:45:49,563,563 DEBUG [plugin_fivesteps.py:516] [{'orderno': '978331', 'price': '4.98', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '598415', 'price': '4.96', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '287780', 'price': '4.94', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '347228', 'price': '4.92', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '664364', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '219284', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '762565', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '638419', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '253197', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '708429', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '515530', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '557478', 'price': '4.76', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '750509', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '963608'}]
2019-08-16 08:45:49,563,563 DEBUG [plugin_fivesteps.py:520] Set commonvaluestep from def checkprocess2matchstatus
2019-08-16 08:45:49,564,564 DEBUG [plugin_fivesteps.py:521] 0.02
2019-08-16 08:45:49,564,564 DEBUG [plugin_fivesteps.py:683] Bot price to order sell
2019-08-16 08:45:49,564,564 DEBUG [plugin_fivesteps.py:684] 4.72
2019-08-16 08:45:49,564,564 DEBUG [plugin_fivesteps.py:337] ===== def order =====
2019-08-16 08:45:49,564,564 DEBUG [plugin_fivesteps.py:338] {'ordermode': 'buybybot', 'firstbuy': 'no'}
2019-08-16 08:45:49,564,564 DEBUG [packsel.py:432] Order params def order
2019-08-16 08:45:49,564,564 DEBUG [packsel.py:433] {'price': '4.72', 'volume': '100', 'order': 'buy', 'monitorstock': 'WHA', 'referorderno': '750509', 'stockpin': '44444444'}
2019-08-16 08:45:49,567,567 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:45:49,567,567 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': [{'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'matchedtime': '08:45:49', 'referorderno': 'None', 'matcheddate': '2019-08-16'}]}
2019-08-16 08:45:50,878,878 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:50,878,878 DEBUG [packsel_model.py:368] <QuerySet []>
2019-08-16 08:45:50,962,962 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:50,962,962 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:50,965,965 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:50,965,965 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:50,968,968 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:50,968,968 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:50,971,971 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:50,972,972 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:50,974,974 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:50,975,975 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:50,977,977 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:50,977,977 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:50,980,980 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:50,980,980 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:50,983,983 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:50,983,983 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:50,986,986 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:50,986,986 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:50,989,989 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:50,989,989 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:50,992,992 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:50,992,992 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:50,995,995 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:50,995,995 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:50,998,998 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:50,998,998 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:45:49', 'referorderno': '963608'}]>
2019-08-16 08:45:51,001,1 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:51,001,1 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:45:51,007,7 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:45:51,007,7 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': [{'orderno': '320019', 'time': '08:45:49', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '750509'}]}
2019-08-16 08:45:51,007,7 DEBUG [tkconsole.py:924] print repeatidx case of ignoreadd == False
2019-08-16 08:45:51,007,7 DEBUG [tkconsole.py:925] 1
2019-08-16 08:45:51,029,29 DEBUG [tkconsole.py:931] Check myvarasso in ignoreadd==FALSE
2019-08-16 08:45:51,029,29 DEBUG [tkconsole.py:932] [{'orderno': <tkinter.StringVar object at 0x042C5F70>, 'startordertime': <tkinter.StringVar object at 0x042C5C10>, 'matchordertime': <tkinter.StringVar object at 0x042C5D30>, 'targetvalue': <tkinter.StringVar object at 0x042C5BF0>, 'symbole': <tkinter.StringVar object at 0x042C5D70>, 'referorderno': <tkinter.StringVar object at 0x042C5BB0>, 'orderside': <tkinter.StringVar object at 0x042C5FB0>, 'volume': <tkinter.StringVar object at 0x042C5B70>, 'profit': <tkinter.StringVar object at 0x042C5B10>, 'state': <tkinter.StringVar object at 0x042C5BD0>}, {'orderno': <tkinter.StringVar object at 0x042E23D0>, 'startordertime': <tkinter.StringVar object at 0x042E2DF0>, 'matchordertime': <tkinter.StringVar object at 0x042E2150>, 'targetvalue': <tkinter.StringVar object at 0x042E2370>, 'symbole': <tkinter.StringVar object at 0x042E2390>, 'referorderno': <tkinter.StringVar object at 0x042E21F0>, 'orderside': <tkinter.StringVar object at 0x042E2170>, 'volume': <tkinter.StringVar object at 0x042E2930>, 'profit': <tkinter.StringVar object at 0x042E20B0>, 'state': <tkinter.StringVar object at 0x042E2130>}]
2019-08-16 08:45:51,459,459 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:51,459,459 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:51,465,465 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:51,465,465 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:51,470,470 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:51,470,470 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:51,476,476 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:51,476,476 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:52,435,435 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:52,436,436 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2850, 'orderno': '320019', 'time': '08:45:49', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '750509'}]>
2019-08-16 08:45:52,438,438 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:52,438,438 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:52,441,441 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:52,441,441 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:52,444,444 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:52,444,444 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:52,447,447 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:52,447,447 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:52,450,450 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:52,450,450 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:52,453,453 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:52,453,453 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:52,455,455 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:52,456,456 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:52,458,458 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:52,458,458 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:52,461,461 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:52,462,462 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:52,464,464 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:52,464,464 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:52,467,467 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:52,467,467 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:52,470,470 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:52,470,470 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:52,472,472 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:52,472,472 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:45:49', 'referorderno': '963608'}]>
2019-08-16 08:45:52,475,475 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:52,475,475 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:45:52,477,477 DEBUG [plugin_fivesteps.py:476] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:45:52,477,477 DEBUG [plugin_fivesteps.py:477] []
2019-08-16 08:45:52,477,477 DEBUG [plugin_fivesteps.py:478] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:45:52,477,477 DEBUG [plugin_fivesteps.py:479] [{'orderno': '978331', 'price': '4.98', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '598415', 'price': '4.96', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '287780', 'price': '4.94', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '347228', 'price': '4.92', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '664364', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '219284', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '762565', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '638419', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '253197', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '708429', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '515530', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '557478', 'price': '4.76', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '320019', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': '750509'}]
2019-08-16 08:45:52,481,481 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:45:52,481,481 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-08-16 08:45:53,488,488 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:53,488,488 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2850, 'orderno': '320019', 'time': '08:45:49', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '750509'}]>
2019-08-16 08:45:53,491,491 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:53,491,491 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:53,494,494 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:53,494,494 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:53,496,496 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:53,497,497 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:53,499,499 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:53,499,499 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:53,502,502 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:53,502,502 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:53,505,505 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:53,505,505 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:53,508,508 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:53,508,508 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:53,511,511 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:53,511,511 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:53,514,514 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:53,514,514 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:53,517,517 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:53,517,517 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:53,520,520 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:53,520,520 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:53,523,523 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:53,523,523 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:53,526,526 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:53,526,526 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:45:49', 'referorderno': '963608'}]>
2019-08-16 08:45:53,529,529 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:53,529,529 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:45:53,532,532 DEBUG [plugin_fivesteps.py:434] print price_change from checkprocess2order to order next plugin_fivesteps.py line 239
2019-08-16 08:45:53,533,533 DEBUG [plugin_fivesteps.py:435] 4.74
2019-08-16 08:45:53,533,533 DEBUG [plugin_fivesteps.py:440] Print rt_table this value should be empty for first time buy
2019-08-16 08:45:53,533,533 DEBUG [plugin_fivesteps.py:441] []
2019-08-16 08:45:53,533,533 DEBUG [plugin_fivesteps.py:443] Print configval from def checkprocess2order before fist buy order
2019-08-16 08:45:53,533,533 DEBUG [plugin_fivesteps.py:444] {'planname': <tkinter.StringVar object at 0x03C2E410>, 'rangeselect': <tkinter.StringVar object at 0x03C2E730>, 'monitorstock': <tkinter.StringVar object at 0x03C2E870>, 'initinvest': <tkinter.StringVar object at 0x03C2E910>, 'volumestep': <tkinter.StringVar object at 0x03C2E8D0>, 'profitstep': <tkinter.StringVar object at 0x03C2E430>, 'topvaluebuy': <tkinter.StringVar object at 0x03C2E470>, 'startvaluebuy': <tkinter.StringVar object at 0x03C59DB0>, 'stopvaluebuy': <tkinter.StringVar object at 0x03C59D10>, 'floorvaluebuy': <tkinter.StringVar object at 0x03C59E10>, 'firstbuyflag': <tkinter.StringVar object at 0x03C59FF0>, 'pluginfile': <tkinter.StringVar object at 0x03C59CD0>, 'currentuseId': <tkinter.StringVar object at 0x03C59F10>, 'floorvaluerange': <tkinter.StringVar object at 0x03C59D50>, 'topvaluerange': <tkinter.StringVar object at 0x03C59CF0>, 'commonvaluestep': <tkinter.StringVar object at 0x03C59F50>, 'runningmode': <tkinter.StringVar object at 0x03D52530>, 'totalcostbuy': <tkinter.StringVar object at 0x03D52070>, 'totalvolumebuy': <tkinter.StringVar object at 0x03D524D0>, 'stockpin': <tkinter.StringVar object at 0x03D52130>, 'remaininvest': <tkinter.StringVar object at 0x03D52670>}
2019-08-16 08:45:53,537,537 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:45:53,537,537 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-08-16 08:45:55,873,873 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:55,873,873 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:55,878,878 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:55,878,878 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:55,883,883 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:55,884,884 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:55,889,889 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:55,889,889 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:55,894,894 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:55,894,894 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:55,899,899 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:55,900,900 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:55,905,905 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:55,905,905 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:55,910,910 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:55,911,911 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:55,916,916 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:55,916,916 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:55,921,921 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:55,922,922 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:55,927,927 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:55,927,927 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:55,932,932 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:55,933,933 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:55,938,938 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:55,938,938 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:55,943,943 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:55,944,944 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:55,949,949 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:55,949,949 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:55,954,954 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:55,954,954 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:55,959,959 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:55,960,960 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:55,965,965 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:55,965,965 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:55,970,970 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:55,970,970 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:55,975,975 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:55,976,976 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:55,981,981 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:55,981,981 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:55,986,986 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:55,986,986 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:55,991,991 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:55,991,991 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:55,997,997 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:55,997,997 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,002,2 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,002,2 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,007,7 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,007,7 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,012,12 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,013,13 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,018,18 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,018,18 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,023,23 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,023,23 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,028,28 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,028,28 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,034,34 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,034,34 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,039,39 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,039,39 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,044,44 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,044,44 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,050,50 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,050,50 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,055,55 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,055,55 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,060,60 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,060,60 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,066,66 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,066,66 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,071,71 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,071,71 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,076,76 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,076,76 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,082,82 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,082,82 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,087,87 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,087,87 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,092,92 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,092,92 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,098,98 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,098,98 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,103,103 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,103,103 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,108,108 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,108,108 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,114,114 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,114,114 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,119,119 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,119,119 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,124,124 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,124,124 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,129,129 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,130,130 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,135,135 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,135,135 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,140,140 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,140,140 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,145,145 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,145,145 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,151,151 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,151,151 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,156,156 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,156,156 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,161,161 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,161,161 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,166,166 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,166,166 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,172,172 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,172,172 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,177,177 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,177,177 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,182,182 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,182,182 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,187,187 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,188,188 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,193,193 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,193,193 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,198,198 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,198,198 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,203,203 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,203,203 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,209,209 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,209,209 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,214,214 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,214,214 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,219,219 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,219,219 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,224,224 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,225,225 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,230,230 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,230,230 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,235,235 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,235,235 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,240,240 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,241,241 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,246,246 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,246,246 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,251,251 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,251,251 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,256,256 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,257,257 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,262,262 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,262,262 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,268,268 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,268,268 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,273,273 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,273,273 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,279,279 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,279,279 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,284,284 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,284,284 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,290,290 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,290,290 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,295,295 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,295,295 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,300,300 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,301,301 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,306,306 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,306,306 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,311,311 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,311,311 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,317,317 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,317,317 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,322,322 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,322,322 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,327,327 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,328,328 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,333,333 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,333,333 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,338,338 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,338,338 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,343,343 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,343,343 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,348,348 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,349,349 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,354,354 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,354,354 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,359,359 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,359,359 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,364,364 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,364,364 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,370,370 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,370,370 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,375,375 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,375,375 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,380,380 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,380,380 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,386,386 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,386,386 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,391,391 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,392,392 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,397,397 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,397,397 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,402,402 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,403,403 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,408,408 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,408,408 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,413,413 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,414,414 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,419,419 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,419,419 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,424,424 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,425,425 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,430,430 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,430,430 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,436,436 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,436,436 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,441,441 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,441,441 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,447,447 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,447,447 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,452,452 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,452,452 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,458,458 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,458,458 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,463,463 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,463,463 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,469,469 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,469,469 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,474,474 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,474,474 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,480,480 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,480,480 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,485,485 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,485,485 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,491,491 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,491,491 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,496,496 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,496,496 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,502,502 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,502,502 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,508,508 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,508,508 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,513,513 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,513,513 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,519,519 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,519,519 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,524,524 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,524,524 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,530,530 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,530,530 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,535,535 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,536,536 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,541,541 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,541,541 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,546,546 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,547,547 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,552,552 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,552,552 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,557,557 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,557,557 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,562,562 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,562,562 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,568,568 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,568,568 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,573,573 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,573,573 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,578,578 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,578,578 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,583,583 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,584,584 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,589,589 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,589,589 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,594,594 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,594,594 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,599,599 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,599,599 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,605,605 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,605,605 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,610,610 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,610,610 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,615,615 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,615,615 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,621,621 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,621,621 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,626,626 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,626,626 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,631,631 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,631,631 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,636,636 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,637,637 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,642,642 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,642,642 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,647,647 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,647,647 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,652,652 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,652,652 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,658,658 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,658,658 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,663,663 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,663,663 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,669,669 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,669,669 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,674,674 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,675,675 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,680,680 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,680,680 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,685,685 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,686,686 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,691,691 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,691,691 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,696,696 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,697,697 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,702,702 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,702,702 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,707,707 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,708,708 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,713,713 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,713,713 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,718,718 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,719,719 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,724,724 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,724,724 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,730,730 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,730,730 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,735,735 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,735,735 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,741,741 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,741,741 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,746,746 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,746,746 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,752,752 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,752,752 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,757,757 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,757,757 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,763,763 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,763,763 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,768,768 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,768,768 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,774,774 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,774,774 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,779,779 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,779,779 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,785,785 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,785,785 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,790,790 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,790,790 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,795,795 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,796,796 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,801,801 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,801,801 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,806,806 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,806,806 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,811,811 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,812,812 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,817,817 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,817,817 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,822,822 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,822,822 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,827,827 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,827,827 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,833,833 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,833,833 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,838,838 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,838,838 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,843,843 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,843,843 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,848,848 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,849,849 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,854,854 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,854,854 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,859,859 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,859,859 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,865,865 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,865,865 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,870,870 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,870,870 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,875,875 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,876,876 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,896,896 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,896,896 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,908,908 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,908,908 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,928,928 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,928,928 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,942,942 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,942,942 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,962,962 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,962,962 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,972,972 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,972,972 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:56,992,992 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:56,992,992 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:57,002,2 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:57,002,2 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:57,018,18 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:57,018,18 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:57,038,38 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:57,038,38 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:57,052,52 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:57,052,52 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:57,062,62 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:57,062,62 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:57,082,82 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:57,082,82 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:57,102,102 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:57,102,102 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:57,109,109 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:57,109,109 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:57,129,129 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:57,129,129 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:57,149,149 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:57,149,149 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:57,161,161 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:57,161,161 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:57,171,171 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:57,171,171 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:57,191,191 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:57,191,191 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:57,207,207 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:57,207,207 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:58,165,165 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:58,165,165 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2850, 'orderno': '320019', 'time': '08:45:49', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '750509'}]>
2019-08-16 08:45:58,168,168 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:58,168,168 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:58,171,171 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:58,171,171 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:58,174,174 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:58,174,174 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:58,176,176 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:58,176,176 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:58,179,179 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:58,179,179 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:58,181,181 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:58,181,181 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:58,184,184 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:58,184,184 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:58,186,186 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:58,187,187 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:58,189,189 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:58,189,189 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:58,192,192 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:58,192,192 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:58,194,194 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:58,194,194 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:58,197,197 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:58,197,197 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:58,199,199 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:58,199,199 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:45:49', 'referorderno': '963608'}]>
2019-08-16 08:45:58,202,202 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:58,202,202 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:45:58,204,204 DEBUG [plugin_fivesteps.py:476] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:45:58,204,204 DEBUG [plugin_fivesteps.py:477] []
2019-08-16 08:45:58,204,204 DEBUG [plugin_fivesteps.py:478] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:45:58,204,204 DEBUG [plugin_fivesteps.py:479] [{'orderno': '978331', 'price': '4.98', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '598415', 'price': '4.96', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '287780', 'price': '4.94', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '347228', 'price': '4.92', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '664364', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '219284', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '762565', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '638419', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '253197', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '708429', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '515530', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '557478', 'price': '4.76', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '320019', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': '750509'}]
2019-08-16 08:45:58,221,221 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:45:58,221,221 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-08-16 08:45:58,948,948 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:45:58,948,948 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:45:59,879,879 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:59,879,879 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2850, 'orderno': '320019', 'time': '08:45:49', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '750509'}]>
2019-08-16 08:45:59,882,882 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:59,882,882 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:59,885,885 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:59,885,885 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:59,888,888 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:59,888,888 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:59,890,890 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:59,891,891 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:59,893,893 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:59,893,893 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:59,896,896 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:59,896,896 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:59,899,899 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:59,899,899 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:59,902,902 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:59,902,902 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:59,905,905 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:59,905,905 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:59,908,908 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:59,908,908 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:59,911,911 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:59,911,911 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:59,913,913 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:59,914,914 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:45:59,916,916 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:59,917,917 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:45:49', 'referorderno': '963608'}]>
2019-08-16 08:45:59,919,919 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:45:59,920,920 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:45:59,922,922 DEBUG [plugin_fivesteps.py:476] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:45:59,923,923 DEBUG [plugin_fivesteps.py:477] []
2019-08-16 08:45:59,923,923 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:45:59,923,923 DEBUG [plugin_fivesteps.py:478] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:45:59,923,923 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-08-16 08:45:59,923,923 DEBUG [plugin_fivesteps.py:479] [{'orderno': '978331', 'price': '4.98', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '598415', 'price': '4.96', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '287780', 'price': '4.94', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '347228', 'price': '4.92', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '664364', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '219284', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '762565', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '638419', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '253197', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '708429', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '515530', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '557478', 'price': '4.76', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '320019', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': '750509'}]
2019-08-16 08:46:01,959,959 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:46:01,959,959 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:46:02,884,884 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:02,884,884 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:02,887,887 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:02,887,887 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:02,889,889 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:02,890,890 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:02,892,892 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:02,892,892 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:02,895,895 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:02,895,895 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:02,898,898 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:02,898,898 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:02,901,901 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:02,901,901 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:02,903,903 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:02,904,904 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:02,906,906 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:02,906,906 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:02,909,909 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:02,909,909 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:02,912,912 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:02,912,912 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:02,915,915 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:02,915,915 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:02,988,988 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:02,988,988 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:45:49', 'referorderno': '963608'}]>
2019-08-16 08:46:02,991,991 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:02,991,991 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:46:02,994,994 DEBUG [plugin_fivesteps.py:476] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:46:02,994,994 DEBUG [plugin_fivesteps.py:477] [{'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'matchedtime': 'matchtime', 'referorderno': 'None'}]
2019-08-16 08:46:02,994,994 DEBUG [plugin_fivesteps.py:478] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:46:02,994,994 DEBUG [plugin_fivesteps.py:479] [{'orderno': '978331', 'price': '4.98', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '598415', 'price': '4.96', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '287780', 'price': '4.94', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '347228', 'price': '4.92', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '664364', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '219284', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '762565', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '638419', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '253197', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '708429', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '515530', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '557478', 'price': '4.76', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '320019', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': '750509'}]
2019-08-16 08:46:02,998,998 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:46:02,998,998 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': [{'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'matchedtime': 'matchtime', 'referorderno': 'None'}]}
2019-08-16 08:46:03,016,16 DEBUG [plugin_fivesteps.py:515] Match found do remove matchedordermonitor below data
2019-08-16 08:46:03,016,16 DEBUG [plugin_fivesteps.py:516] [{'orderno': '978331', 'price': '4.98', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '598415', 'price': '4.96', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '287780', 'price': '4.94', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '347228', 'price': '4.92', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '664364', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '219284', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '762565', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '638419', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '253197', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '708429', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '515530', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '557478', 'price': '4.76', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '320019', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': '750509'}]
2019-08-16 08:46:03,016,16 DEBUG [plugin_fivesteps.py:520] Set commonvaluestep from def checkprocess2matchstatus
2019-08-16 08:46:03,016,16 DEBUG [plugin_fivesteps.py:521] 0.02
2019-08-16 08:46:03,017,17 DEBUG [plugin_fivesteps.py:683] Bot price to order sell
2019-08-16 08:46:03,017,17 DEBUG [plugin_fivesteps.py:684] 4.74
2019-08-16 08:46:03,017,17 DEBUG [plugin_fivesteps.py:337] ===== def order =====
2019-08-16 08:46:03,017,17 DEBUG [plugin_fivesteps.py:338] {'ordermode': 'buybybot', 'firstbuy': 'no'}
2019-08-16 08:46:03,017,17 DEBUG [packsel.py:432] Order params def order
2019-08-16 08:46:03,017,17 DEBUG [packsel.py:433] {'price': '4.74', 'volume': '100', 'order': 'buy', 'monitorstock': 'WHA', 'referorderno': '557478', 'stockpin': '44444444'}
2019-08-16 08:46:03,019,19 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:46:03,019,19 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': [{'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'matchedtime': '08:46:02', 'referorderno': 'None', 'matcheddate': '2019-08-16'}]}
2019-08-16 08:46:04,339,339 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:04,339,339 DEBUG [packsel_model.py:368] <QuerySet []>
2019-08-16 08:46:04,530,530 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:04,530,530 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:04,533,533 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:04,533,533 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:04,536,536 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:04,536,536 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:04,539,539 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:04,539,539 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:04,541,541 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:04,542,542 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:04,544,544 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:04,544,544 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:04,547,547 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:04,547,547 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:04,549,549 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:04,549,549 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:04,552,552 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:04,552,552 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:04,555,555 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:04,555,555 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:04,557,557 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:04,557,557 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:04,560,560 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:04,560,560 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:46:02', 'referorderno': '963608'}]>
2019-08-16 08:46:04,563,563 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:04,563,563 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:45:49', 'referorderno': '963608'}]>
2019-08-16 08:46:04,566,566 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:04,566,566 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:46:04,569,569 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:46:04,569,569 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': [{'orderno': '308221', 'time': '08:46:03', 'symbole': 'WHA', 'side': 'B', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '557478'}]}
2019-08-16 08:46:04,569,569 DEBUG [tkconsole.py:924] print repeatidx case of ignoreadd == False
2019-08-16 08:46:04,569,569 DEBUG [tkconsole.py:925] 1
2019-08-16 08:46:04,582,582 DEBUG [tkconsole.py:931] Check myvarasso in ignoreadd==FALSE
2019-08-16 08:46:04,582,582 DEBUG [tkconsole.py:932] [{'orderno': <tkinter.StringVar object at 0x042C5D10>, 'startordertime': <tkinter.StringVar object at 0x042C5410>, 'matchordertime': <tkinter.StringVar object at 0x042C58D0>, 'targetvalue': <tkinter.StringVar object at 0x042C5970>, 'symbole': <tkinter.StringVar object at 0x042C5950>, 'referorderno': <tkinter.StringVar object at 0x042C5830>, 'orderside': <tkinter.StringVar object at 0x042C5D50>, 'volume': <tkinter.StringVar object at 0x042C58F0>, 'profit': <tkinter.StringVar object at 0x042C5930>, 'state': <tkinter.StringVar object at 0x042C5910>}, {'orderno': <tkinter.StringVar object at 0x0464E270>, 'startordertime': <tkinter.StringVar object at 0x0464EDF0>, 'matchordertime': <tkinter.StringVar object at 0x042D03D0>, 'targetvalue': <tkinter.StringVar object at 0x04658F30>, 'symbole': <tkinter.StringVar object at 0x042FDF90>, 'referorderno': <tkinter.StringVar object at 0x042D0050>, 'orderside': <tkinter.StringVar object at 0x042D0A70>, 'volume': <tkinter.StringVar object at 0x042D0E30>, 'profit': <tkinter.StringVar object at 0x04658A90>, 'state': <tkinter.StringVar object at 0x046588F0>}]
2019-08-16 08:46:04,965,965 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:46:04,965,965 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:46:05,922,922 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:05,922,922 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2851, 'orderno': '308221', 'time': '08:46:03', 'symbole': 'WHA', 'side': 'B', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '557478'}]>
2019-08-16 08:46:05,925,925 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:05,925,925 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:05,927,927 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:05,927,927 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:05,930,930 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:05,930,930 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:05,932,932 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:05,933,933 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:05,935,935 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:05,935,935 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:05,938,938 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:05,938,938 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:05,940,940 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:05,941,941 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:05,943,943 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:05,943,943 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:05,946,946 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:05,946,946 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:05,948,948 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:05,949,949 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:05,951,951 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:05,951,951 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:05,954,954 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:05,954,954 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:46:02', 'referorderno': '963608'}]>
2019-08-16 08:46:05,957,957 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:05,957,957 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:45:49', 'referorderno': '963608'}]>
2019-08-16 08:46:05,960,960 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:05,960,960 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:46:05,962,962 DEBUG [plugin_fivesteps.py:476] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:46:05,962,962 DEBUG [plugin_fivesteps.py:477] []
2019-08-16 08:46:05,963,963 DEBUG [plugin_fivesteps.py:478] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:46:05,963,963 DEBUG [plugin_fivesteps.py:479] [{'orderno': '978331', 'price': '4.98', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '598415', 'price': '4.96', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '287780', 'price': '4.94', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '347228', 'price': '4.92', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '664364', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '219284', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '762565', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '638419', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '253197', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '708429', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '515530', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '320019', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': '750509'}, {'orderno': '308221', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '557478'}]
2019-08-16 08:46:05,974,974 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:46:05,974,974 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-08-16 08:46:08,046,46 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:46:08,046,46 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:46:08,051,51 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:46:08,051,51 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:46:09,007,7 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:09,007,7 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2851, 'orderno': '308221', 'time': '08:46:03', 'symbole': 'WHA', 'side': 'B', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '557478'}]>
2019-08-16 08:46:09,010,10 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:09,010,10 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:09,013,13 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:09,013,13 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:09,016,16 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:09,016,16 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:09,019,19 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:09,019,19 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:09,021,21 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:09,021,21 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:09,024,24 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:09,024,24 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:09,027,27 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:09,027,27 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:09,029,29 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:09,029,29 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:09,032,32 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:09,032,32 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:09,034,34 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:09,035,35 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:09,037,37 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:09,037,37 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:09,040,40 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:09,040,40 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:46:02', 'referorderno': '963608'}]>
2019-08-16 08:46:09,042,42 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:09,043,43 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:45:49', 'referorderno': '963608'}]>
2019-08-16 08:46:09,045,45 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:09,045,45 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:46:09,048,48 DEBUG [plugin_fivesteps.py:476] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:46:09,048,48 DEBUG [plugin_fivesteps.py:477] []
2019-08-16 08:46:09,048,48 DEBUG [plugin_fivesteps.py:478] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:46:09,048,48 DEBUG [plugin_fivesteps.py:479] [{'orderno': '978331', 'price': '4.98', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '598415', 'price': '4.96', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '287780', 'price': '4.94', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '347228', 'price': '4.92', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '664364', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '219284', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '762565', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '638419', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '253197', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '708429', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '515530', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '320019', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': '750509'}, {'orderno': '308221', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '557478'}]
2019-08-16 08:46:09,051,51 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:46:09,051,51 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-08-16 08:46:11,054,54 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:46:11,054,54 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:46:12,010,10 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:12,010,10 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2851, 'orderno': '308221', 'time': '08:46:03', 'symbole': 'WHA', 'side': 'B', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '557478'}]>
2019-08-16 08:46:12,014,14 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:12,014,14 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:12,017,17 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:12,017,17 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:12,020,20 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:12,020,20 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:12,022,22 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:12,023,23 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:12,025,25 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:12,025,25 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:12,028,28 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:12,028,28 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:12,030,30 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:12,030,30 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:12,033,33 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:12,033,33 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:12,035,35 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:12,036,36 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:12,038,38 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:12,038,38 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:12,041,41 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:12,041,41 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:12,043,43 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:12,044,44 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:46:02', 'referorderno': '963608'}]>
2019-08-16 08:46:12,046,46 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:12,046,46 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:45:49', 'referorderno': '963608'}]>
2019-08-16 08:46:12,049,49 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:12,049,49 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:46:12,052,52 DEBUG [plugin_fivesteps.py:476] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:46:12,052,52 DEBUG [plugin_fivesteps.py:477] []
2019-08-16 08:46:12,052,52 DEBUG [plugin_fivesteps.py:478] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:46:12,052,52 DEBUG [plugin_fivesteps.py:479] [{'orderno': '978331', 'price': '4.98', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '598415', 'price': '4.96', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '287780', 'price': '4.94', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '347228', 'price': '4.92', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '664364', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '219284', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '762565', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '638419', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '253197', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '708429', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '515530', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '320019', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': '750509'}, {'orderno': '308221', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '557478'}]
2019-08-16 08:46:12,056,56 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:46:12,056,56 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-08-16 08:46:14,131,131 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:46:14,131,131 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:46:14,136,136 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:46:14,137,137 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:46:15,074,74 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:15,075,75 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2851, 'orderno': '308221', 'time': '08:46:03', 'symbole': 'WHA', 'side': 'B', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '557478'}]>
2019-08-16 08:46:15,078,78 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:15,078,78 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:15,081,81 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:15,081,81 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:15,084,84 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:15,084,84 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:15,087,87 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:15,087,87 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:15,090,90 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:15,090,90 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:15,093,93 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:15,093,93 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:15,096,96 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:15,096,96 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:15,099,99 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:15,099,99 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:15,102,102 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:15,102,102 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:15,104,104 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:15,105,105 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:15,107,107 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:15,107,107 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:15,110,110 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:15,110,110 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:46:02', 'referorderno': '963608'}]>
2019-08-16 08:46:15,113,113 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:15,113,113 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:45:49', 'referorderno': '963608'}]>
2019-08-16 08:46:15,116,116 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:15,116,116 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:46:15,119,119 DEBUG [plugin_fivesteps.py:476] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:46:15,119,119 DEBUG [plugin_fivesteps.py:477] []
2019-08-16 08:46:15,119,119 DEBUG [plugin_fivesteps.py:478] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:46:15,119,119 DEBUG [plugin_fivesteps.py:479] [{'orderno': '978331', 'price': '4.98', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '598415', 'price': '4.96', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '287780', 'price': '4.94', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '347228', 'price': '4.92', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '664364', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '219284', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '762565', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '638419', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '253197', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '708429', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '515530', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '320019', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': '750509'}, {'orderno': '308221', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '557478'}]
2019-08-16 08:46:15,119,119 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:46:15,119,119 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-08-16 08:46:18,098,98 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:18,099,99 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2851, 'orderno': '308221', 'time': '08:46:03', 'symbole': 'WHA', 'side': 'B', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '557478'}]>
2019-08-16 08:46:18,102,102 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:18,102,102 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:18,104,104 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:18,105,105 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:18,107,107 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:18,107,107 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:18,110,110 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:18,110,110 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:18,112,112 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:18,113,113 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:18,115,115 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:18,115,115 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:18,118,118 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:18,118,118 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:18,121,121 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:18,121,121 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:18,123,123 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:18,124,124 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:18,126,126 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:18,126,126 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:18,129,129 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:18,129,129 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:18,131,131 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:18,132,132 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:46:02', 'referorderno': '963608'}]>
2019-08-16 08:46:18,134,134 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:18,135,135 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:45:49', 'referorderno': '963608'}]>
2019-08-16 08:46:18,137,137 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:18,137,137 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:46:18,140,140 DEBUG [plugin_fivesteps.py:476] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:46:18,140,140 DEBUG [plugin_fivesteps.py:477] []
2019-08-16 08:46:18,140,140 DEBUG [plugin_fivesteps.py:478] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:46:18,140,140 DEBUG [plugin_fivesteps.py:479] [{'orderno': '978331', 'price': '4.98', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '598415', 'price': '4.96', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '287780', 'price': '4.94', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '347228', 'price': '4.92', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '664364', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '219284', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '762565', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '638419', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '253197', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '708429', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '515530', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '320019', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': '750509'}, {'orderno': '308221', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '557478'}]
2019-08-16 08:46:18,145,145 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:46:18,145,145 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-08-16 08:46:20,150,150 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:46:20,150,150 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:46:21,105,105 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:21,105,105 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2851, 'orderno': '308221', 'time': '08:46:03', 'symbole': 'WHA', 'side': 'B', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '557478'}]>
2019-08-16 08:46:21,108,108 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:21,108,108 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:21,111,111 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:21,111,111 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:21,114,114 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:21,114,114 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:21,116,116 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:21,117,117 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:21,119,119 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:21,119,119 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:21,122,122 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:21,122,122 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:21,124,124 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:21,125,125 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:21,127,127 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:21,127,127 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:21,130,130 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:21,130,130 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:21,132,132 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:21,133,133 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:21,135,135 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:21,135,135 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:21,138,138 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:21,138,138 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:46:02', 'referorderno': '963608'}]>
2019-08-16 08:46:21,140,140 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:21,141,141 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:45:49', 'referorderno': '963608'}]>
2019-08-16 08:46:21,143,143 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:21,143,143 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:46:21,146,146 DEBUG [plugin_fivesteps.py:476] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:46:21,146,146 DEBUG [plugin_fivesteps.py:477] []
2019-08-16 08:46:21,146,146 DEBUG [plugin_fivesteps.py:478] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:46:21,146,146 DEBUG [plugin_fivesteps.py:479] [{'orderno': '978331', 'price': '4.98', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '598415', 'price': '4.96', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '287780', 'price': '4.94', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '347228', 'price': '4.92', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '664364', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '219284', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '762565', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '638419', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '253197', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '708429', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '515530', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '320019', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': '750509'}, {'orderno': '308221', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '557478'}]
2019-08-16 08:46:21,146,146 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:46:21,146,146 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-08-16 08:46:24,116,116 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:24,116,116 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2851, 'orderno': '308221', 'time': '08:46:03', 'symbole': 'WHA', 'side': 'B', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '557478'}]>
2019-08-16 08:46:24,120,120 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:24,120,120 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:24,123,123 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:24,123,123 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:24,126,126 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:24,126,126 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:24,130,130 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:24,130,130 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:24,133,133 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:24,133,133 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:24,136,136 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:24,136,136 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:24,139,139 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:24,139,139 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:24,141,141 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:24,141,141 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:24,144,144 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:24,144,144 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:24,147,147 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:24,147,147 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:24,150,150 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:24,150,150 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:24,153,153 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:24,154,154 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:46:02', 'referorderno': '963608'}]>
2019-08-16 08:46:24,156,156 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:24,157,157 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:45:49', 'referorderno': '963608'}]>
2019-08-16 08:46:24,160,160 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:24,160,160 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:46:24,162,162 DEBUG [plugin_fivesteps.py:476] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:46:24,163,163 DEBUG [plugin_fivesteps.py:477] []
2019-08-16 08:46:24,163,163 DEBUG [plugin_fivesteps.py:478] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:46:24,163,163 DEBUG [plugin_fivesteps.py:479] [{'orderno': '978331', 'price': '4.98', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '598415', 'price': '4.96', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '287780', 'price': '4.94', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '347228', 'price': '4.92', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '664364', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '219284', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '762565', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '638419', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '253197', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '708429', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '515530', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '320019', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': '750509'}, {'orderno': '308221', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '557478'}]
2019-08-16 08:46:24,167,167 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:46:24,167,167 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-08-16 08:46:26,292,292 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:46:26,293,293 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:46:27,227,227 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:27,227,227 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2851, 'orderno': '308221', 'time': '08:46:03', 'symbole': 'WHA', 'side': 'B', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '557478'}]>
2019-08-16 08:46:27,230,230 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:27,230,230 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:27,233,233 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:27,233,233 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:27,235,235 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:27,236,236 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:27,238,238 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:27,238,238 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:27,241,241 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:27,241,241 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:27,243,243 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:27,243,243 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:27,246,246 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:27,246,246 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:27,248,248 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:27,249,249 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:27,251,251 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:27,251,251 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:27,254,254 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:27,254,254 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:27,256,256 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:27,256,256 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:27,259,259 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:27,259,259 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:46:02', 'referorderno': '963608'}]>
2019-08-16 08:46:27,261,261 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:27,261,261 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:45:49', 'referorderno': '963608'}]>
2019-08-16 08:46:27,264,264 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:27,264,264 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:46:27,266,266 DEBUG [plugin_fivesteps.py:476] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:46:27,267,267 DEBUG [plugin_fivesteps.py:477] []
2019-08-16 08:46:27,267,267 DEBUG [plugin_fivesteps.py:478] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:46:27,267,267 DEBUG [plugin_fivesteps.py:479] [{'orderno': '978331', 'price': '4.98', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '598415', 'price': '4.96', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '287780', 'price': '4.94', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '347228', 'price': '4.92', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '664364', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '219284', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '762565', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '638419', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '253197', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '708429', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '515530', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '320019', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': '750509'}, {'orderno': '308221', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '557478'}]
2019-08-16 08:46:27,267,267 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:46:27,267,267 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-08-16 08:46:29,299,299 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:46:29,299,299 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:46:30,259,259 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:30,260,260 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2851, 'orderno': '308221', 'time': '08:46:03', 'symbole': 'WHA', 'side': 'B', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '557478'}]>
2019-08-16 08:46:30,263,263 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:30,263,263 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:30,265,265 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:30,266,266 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:30,269,269 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:30,269,269 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:30,271,271 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:30,272,272 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:30,274,274 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:30,274,274 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:30,277,277 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:30,277,277 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:30,280,280 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:30,280,280 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:30,283,283 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:30,283,283 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:30,286,286 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:30,286,286 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:30,289,289 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:30,289,289 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:30,292,292 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:30,292,292 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:30,295,295 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:30,295,295 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:46:02', 'referorderno': '963608'}]>
2019-08-16 08:46:30,297,297 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:30,298,298 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:45:49', 'referorderno': '963608'}]>
2019-08-16 08:46:30,300,300 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:30,301,301 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:46:30,303,303 DEBUG [plugin_fivesteps.py:476] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:46:30,303,303 DEBUG [plugin_fivesteps.py:477] []
2019-08-16 08:46:30,304,304 DEBUG [plugin_fivesteps.py:478] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:46:30,304,304 DEBUG [plugin_fivesteps.py:479] [{'orderno': '978331', 'price': '4.98', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '598415', 'price': '4.96', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '287780', 'price': '4.94', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '347228', 'price': '4.92', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '664364', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '219284', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '762565', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '638419', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '253197', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '708429', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '515530', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '320019', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': '750509'}, {'orderno': '308221', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '557478'}]
2019-08-16 08:46:30,307,307 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:46:30,307,307 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-08-16 08:46:32,340,340 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:46:32,340,340 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:46:33,267,267 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:33,267,267 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2851, 'orderno': '308221', 'time': '08:46:03', 'symbole': 'WHA', 'side': 'B', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '557478'}]>
2019-08-16 08:46:33,271,271 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:33,271,271 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:33,274,274 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:33,274,274 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:33,276,276 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:33,277,277 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:33,279,279 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:33,279,279 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:33,282,282 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:33,282,282 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:33,285,285 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:33,285,285 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:33,288,288 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:33,288,288 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:33,290,290 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:33,291,291 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:33,293,293 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:33,293,293 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:33,296,296 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:33,296,296 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:33,299,299 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:33,299,299 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:33,302,302 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:33,302,302 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:46:02', 'referorderno': '963608'}]>
2019-08-16 08:46:33,304,304 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:33,305,305 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:45:49', 'referorderno': '963608'}]>
2019-08-16 08:46:33,307,307 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:33,307,307 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:46:33,309,309 DEBUG [plugin_fivesteps.py:476] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:46:33,310,310 DEBUG [plugin_fivesteps.py:477] []
2019-08-16 08:46:33,310,310 DEBUG [plugin_fivesteps.py:478] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:46:33,310,310 DEBUG [plugin_fivesteps.py:479] [{'orderno': '978331', 'price': '4.98', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '598415', 'price': '4.96', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '287780', 'price': '4.94', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '347228', 'price': '4.92', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '664364', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '219284', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '762565', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '638419', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '253197', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '708429', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '515530', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '320019', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': '750509'}, {'orderno': '308221', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '557478'}]
2019-08-16 08:46:33,321,321 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:46:33,321,321 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-08-16 08:46:35,469,469 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:46:35,469,469 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:46:36,451,451 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:36,451,451 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2851, 'orderno': '308221', 'time': '08:46:03', 'symbole': 'WHA', 'side': 'B', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '557478'}]>
2019-08-16 08:46:36,454,454 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:36,454,454 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:36,457,457 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:36,457,457 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:36,460,460 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:36,460,460 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:36,462,462 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:36,463,463 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:36,465,465 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:36,465,465 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:36,468,468 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:36,468,468 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:36,471,471 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:36,471,471 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:36,473,473 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:36,474,474 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:36,476,476 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:36,476,476 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:36,479,479 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:36,479,479 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:36,482,482 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:36,482,482 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:36,484,484 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:36,485,485 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:46:02', 'referorderno': '963608'}]>
2019-08-16 08:46:36,487,487 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:36,487,487 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:45:49', 'referorderno': '963608'}]>
2019-08-16 08:46:36,490,490 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:36,490,490 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:46:36,492,492 DEBUG [plugin_fivesteps.py:476] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:46:36,492,492 DEBUG [plugin_fivesteps.py:477] []
2019-08-16 08:46:36,492,492 DEBUG [plugin_fivesteps.py:478] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:46:36,493,493 DEBUG [plugin_fivesteps.py:479] [{'orderno': '978331', 'price': '4.98', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '598415', 'price': '4.96', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '287780', 'price': '4.94', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '347228', 'price': '4.92', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '664364', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '219284', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '762565', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '638419', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '253197', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '708429', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '515530', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '320019', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': '750509'}, {'orderno': '308221', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '557478'}]
2019-08-16 08:46:36,503,503 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:46:36,503,503 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-08-16 08:46:38,596,596 DEBUG [tkconsole.py:991] If not tk GUI do update back refresh DB according to queue with qrefresh qrefresh=refreshdb
2019-08-16 08:46:38,596,596 DEBUG [tkconsole.py:992] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-08-16 08:46:39,540,540 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:39,540,540 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2851, 'orderno': '308221', 'time': '08:46:03', 'symbole': 'WHA', 'side': 'B', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '557478'}]>
2019-08-16 08:46:39,543,543 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:39,543,543 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2849, 'orderno': '978331', 'time': '08:43:48', 'symbole': 'WHA', 'side': 'S', 'price': '4.98', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:39,545,545 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:39,546,546 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2848, 'orderno': '598415', 'time': '08:43:47', 'symbole': 'WHA', 'side': 'S', 'price': '4.96', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:39,548,548 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:39,548,548 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2847, 'orderno': '287780', 'time': '08:43:46', 'symbole': 'WHA', 'side': 'S', 'price': '4.94', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:39,551,551 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:39,551,551 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2846, 'orderno': '347228', 'time': '08:43:45', 'symbole': 'WHA', 'side': 'S', 'price': '4.92', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:39,553,553 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:39,553,553 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2845, 'orderno': '664364', 'time': '08:43:43', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:39,556,556 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:39,556,556 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2844, 'orderno': '219284', 'time': '08:43:42', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:39,558,558 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:39,559,559 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2843, 'orderno': '762565', 'time': '08:43:41', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:39,561,561 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:39,561,561 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2842, 'orderno': '638419', 'time': '08:43:40', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:39,564,564 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:39,564,564 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2841, 'orderno': '253197', 'time': '08:43:39', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:39,567,567 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:39,567,567 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2840, 'orderno': '708429', 'time': '08:43:38', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:39,569,569 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:39,569,569 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2839, 'orderno': '515530', 'time': '08:43:37', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 8, 16), 'matchedtime': 'matchtime', 'referorderno': '963608'}]>
2019-08-16 08:46:39,572,572 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:39,572,572 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2838, 'orderno': '557478', 'time': '08:43:36', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:46:02', 'referorderno': '963608'}]>
2019-08-16 08:46:39,574,574 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:39,574,574 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2837, 'orderno': '750509', 'time': '08:43:35', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:45:49', 'referorderno': '963608'}]>
2019-08-16 08:46:39,577,577 DEBUG [packsel_model.py:367] Result from query database filter by orderno
2019-08-16 08:46:39,577,577 DEBUG [packsel_model.py:368] <QuerySet [{'id': 2836, 'orderno': '963608', 'time': '08:43:17', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 8, 16), 'matchedtime': '08:43:35', 'referorderno': 'None'}]>
2019-08-16 08:46:39,579,579 DEBUG [plugin_fivesteps.py:476] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:46:39,579,579 DEBUG [plugin_fivesteps.py:477] []
2019-08-16 08:46:39,579,579 DEBUG [plugin_fivesteps.py:478] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-08-16 08:46:39,580,580 DEBUG [plugin_fivesteps.py:479] [{'orderno': '978331', 'price': '4.98', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '598415', 'price': '4.96', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '287780', 'price': '4.94', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '347228', 'price': '4.92', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '664364', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '219284', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '762565', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '638419', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '253197', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '708429', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '515530', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '963608'}, {'orderno': '320019', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': '750509'}, {'orderno': '308221', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '557478'}]
2019-08-16 08:46:39,593,593 DEBUG [tkconsole.py:877] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-08-16 08:46:39,593,593 DEBUG [tkconsole.py:878] {'qrefresh': 'refreshtk', 'doupdatetk': []}
