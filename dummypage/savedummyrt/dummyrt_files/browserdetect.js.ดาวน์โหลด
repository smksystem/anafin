function getUserAgentValues() {
        var uaProduct = navigator.userAgent.split(" ")[0];
        var ua = uaProduct.length > 0 ? navigator.userAgent.replace(uaProduct, "") : navigator.userAgent;
        var mobileua = navigator.userAgent.toLowerCase();
        var clientUserAgent = {
            platform_type: undefined,
            platform_dist: undefined,
            platform_misc: undefined,
            platform_arch: undefined,
            browser_type: undefined,
			browser_name: undefined,
            browser_dist: undefined,
            browser_vers: undefined,
            browser_arch: undefined
        };

        var browserDistributionVersion = {
            distribution: undefined,
            version: undefined
        }

        init = function () {
            clientUserAgent.platform_type = getPlatformType();
            clientUserAgent.platform_dist = getPlatformDist();
            clientUserAgent.platform_arch = getPlatformArch();

            getBrowserDistributionVersion();
            clientUserAgent.browser_type = getBrowserType();
            clientUserAgent.browser_name = getBrowserName();			
            clientUserAgent.browser_dist = getBrowserDist();
            clientUserAgent.browser_vers = getBrowserVersion();
            clientUserAgent.browser_arch = getBrowserArch();
            clientUserAgent.platform_misc = getPlatformMisc();

        }

        getPlatformType = function () {
            if (ua.indexOf("Windows") >= 0)
                return "Windows";
            if (ua.indexOf("CrOS") >= 0)
                return "Chrome";
            if (ua.toLowerCase().indexOf("psp") >= 0 || mobileua.toLowerCase().indexOf("psp") >= 0)
                return "PSP";
            if (ua.toLowerCase().indexOf("playstation") >= 0 || mobileua.toLowerCase().indexOf("playstation") >= 0)
                return "Playstation";
            if (ua.indexOf("iPhone") >= 0 || mobileua.indexOf("iPhone") >= 0)
                return "iPhone";
            if (ua.indexOf("iPod") >= 0 || mobileua.indexOf("iPod") >= 0)
                return "iPod";
            if (ua.indexOf("iPad") >= 0 || mobileua.indexOf("iPad") >= 0)
                return "iPad";
            if (ua.indexOf("webOS") >= 0 && ua.indexOf("Pre/1.0") >= 0)
                return "PalmPre";
            if (ua.indexOf("Android 1.") >= 0 || mobileua.toLowerCase().indexOf("android 1.") >= 0)
                return "UnsupportedMobileDevice";
            if (ua.indexOf("Android 2.") >= 0 || mobileua.toLowerCase().indexOf("android 2.") >= 0)
                return "Android";
            if (ua.indexOf("Android 3.") >= 0 || mobileua.toLowerCase().indexOf("android 3.") >= 0)
                return "Android";
            if (ua.indexOf("Android") >= 0 || mobileua.toLowerCase().indexOf("android") >= 0)
                return "Android";
            if (ua.indexOf("Mac") >= 0)
                return "Macintosh";
            if (ua.indexOf("Linux") >= 0)
                return "Linux";
            if (ua.toLowerCase().indexOf("sunos") >= 0)
                return "Solaris";
            if (ua.indexOf("AIX") >= 0)
                return "AIX";
            if (ua.indexOf("HP-UX") >= 0)
                return "HP-UX";
            if (ua.toLowerCase().indexOf("googlebot") >= 0 || ua.toLowerCase().indexOf("msnbot") >= 0
				|| ua.toLowerCase().indexOf("slurp") >= 0
				|| ua.toLowerCase().indexOf("crawler") >= 0
				|| ua.toLowerCase().indexOf("seekbot") >= 0
				|| ua.toLowerCase().indexOf("linkwalker") >= 0
				|| ua.toLowerCase().indexOf("ia_archiver") >= 0
				|| ua.toLowerCase().indexOf("atomz") >= 0
				|| ua.toLowerCase().indexOf("gsa-crawler-www") >= 0)
                return "Spider";

            // otherwise, return nothing
            return "Unknown";
        };

        getPlatformDist = function (comment) {
            if (ua.indexOf("Windows NT 6.2") >= 0)
                return "Windows 8";
				
			if(ua.indexOf("Windows NT 6.3") >= 0)
				return "Windows 8.1";
				
			if(ua.indexOf("Windows NT 10.") >=0)
				return "Window 10";

            if (ua.indexOf("Windows NT 6.1") >= 0)
                return "Windows 7";

            if (ua.indexOf("Windows NT 6.0") >= 0)
                return "Vista";

            // look for XP 32bit OR XP 64bit
            if (ua.match("Windows NT (5\\.1|32)") !== null || (ua.indexOf("Windows NT 5.2") >= 0 && ua.indexOf("Win64") >= 0))
                return "XP";

            if (ua.indexOf("Windows NT 5.2") >= 0)
                return "2003";

            if (ua.match("Windows (NT 5\\.0|NT 5\\.01|2000)") !== null)
                return "2000";

            if (ua.match("Windows (98; Win 9x 4\\.90|ME)") !== null)
                return "ME";

            if (ua.indexOf("Windows NT") >= 0)
                return "NT";

            if (ua.match("Win(98|dows 98)") !== null)
                return "98";

            if (ua.indexOf("Windows CE") >= 0)
                return "CE";

            if (ua.toLowerCase().indexOf("mac os x") >= 0)
                return "OSX";

            if (ua.indexOf("Mac_PowerPC") >= 0)
                return "OS9";

            if (ua.indexOf("Windows 95") >= 0)
                return "95";

            if (ua.indexOf("Windows 3.1") >= 0)
                return "3.1";

            return "";

        };


        getPlatformArch = function () {
            if (ua.match("(Win64|IA64|AMD64|x64|x86_64|WOW64)") !== null)
                return "x86-64";

            if (ua.match("(PPC|Mac_PowerPC)") !== null)
                return "PPC";

            if (ua.match("sun4") !== null)
                return "SPARC";

            //The default arch should be assumed 32bit x86
            return "x86-32";
        }

		getBrowserName = function () {
            
			if(uaProduct.indexOf("Opera") >= 0 || ua.indexOf("Opera") >= 0 || uaProduct.indexOf("OPR") >= 0 || ua.indexOf("OPR") >= 0)
				return "Opera";
				
            if (ua.indexOf("MSIE") >= 0)
                return "Internet Explorer";
            
			if(ua.match("(Windows NT 6.3|Windows NT 6.2|Windows NT 6.1|Windows NT 10.)") !== null && ua.indexOf("Trident") >= 0)
				return "Internet Explorer";	    
				
			if(ua.indexOf("Edge") >=0)
				return "Edge";
				
            if (ua.indexOf("Firefox") >= 0)
                return "Firefox";
            
			if (ua.indexOf("Vivaldi") >= 0)
                return "Vivaldi";
			
            if (ua.indexOf("Chrome") >= 0)
                return "Google Chrome";

            if (ua.indexOf("Safari") >= 0)
                return "Safari";

            if (ua.indexOf("Gecko") >= 0)
                return "Gecko";

            if (ua.indexOf("Mozilla") >= 0)
                return "Netscape";

            return "";
			
		}
        getBrowserType = function () {
            if (uaProduct.indexOf("Opera") >= 0 || ua.indexOf("Opera") >= 0)
                return "Opera";

            if (ua.indexOf("MSIE") >= 0)
                return "MSIE";

			if(ua.match("(Windows NT 6.3|Windows NT 6.2|Windows NT 6.1|Windows NT 10.)") !== null && ua.indexOf("Trident") >= 0)
				return "MSIE";	            

            if (ua.indexOf("KHTML") >= 0)
                return "KHTML";

            if (ua.indexOf("Gecko") >= 0)
                return "Gecko";

            if (ua.indexOf("Mozilla") >= 0)
                return "Netscape";

            return "";
        }

        getBrowserDistributionVersion = function () {
            switch (getBrowserType()) {
                case "Opera":
                    browserDistributionVersion.distribution = "OEM";
                    var re = new RegExp("Opera/(\\d+)");
                    var m = re.exec(navigator.userAgent);
                    if (m !== null && m.length >= 3) {
                        browserDistributionVersion.version = m[1];
                    }
                    re = new RegExp("Version/(\\d+)");
                    m = re.exec(navigator.userAgent);
                    if (m !== null && m.length >= 3) {
                        browserDistributionVersion.version = m[1];
                    }
                    break;
                case "MSIE":
                    browserDistributionVersion.distribution = "OEM";
                    if (ua.match("(America Online Browser|AOL)") !== null) {
                        browserDistributionVersion.distribution = "AOL";
                    }

                    if (ua.indexOf("MSN") >= 0) {
                        browserDistributionVersion.distribution = "MSN";
                    }
                   /* var re = new RegExp("MSIE (\\d+)\\.\\d+");
                    var m = re.exec(ua);
                    if (m !== null) {
                        browserDistributionVersion.version = m[1];
                    }*/

                    var msie = ua.indexOf('MSIE ');
                    if (msie > 0) {
                        // IE 10 or older => return version number
                        browserDistributionVersion.version = parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);
                    }

                    var trident = ua.indexOf('Trident/');
                    if (trident > 0) {
                        // IE 11 => return version number
                        var rv = ua.indexOf('rv:');
                        browserDistributionVersion.version = parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);
                    }

                    var edge = ua.indexOf('Edge/');
                    if (edge > 0) {
                        // Edge (IE 12+) => return version number
                        browserDistributionVersion.version = parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);
                    }
                    break;
                case "KHTML":
                    var re = new RegExp("(GoogleTV)/([\\d\\.]*)");
                    var m = re.exec(ua);
                    if (m !== null) {
                        var distver = m[0].split("/");
                        browserDistributionVersion.distribution = distver[0];
                        browserDistributionVersion.version = distver[distver.length - 1];
                    }
                    else {
                        re = new RegExp("(Chrome|Safari|Konqueror)/([\\d\\.]*)");
                        m = re.exec(ua);
                        if (m !== null) {
                            var distver = m[0].split("/");
                            // get first
                            browserDistributionVersion.distribution = distver[0];
                            // get last
                            browserDistributionVersion.version = distver[distver.length - 1];
                            if (browserDistributionVersion.distribution.indexOf("Safari") >= 0) {
                                re = new RegExp("Version/(\\d+)");
                                m = re.exec(ua);
                                if (m !== null) {
                                    distver = m[0].split("/");
                                    browserDistributionVersion.version = distver[distver.length - 1];
                                }
                            }
                        }
                    }
                    break;
                case "Gecko":
                    var re = new RegExp("(Netscape|Firefox|Camino|SeaMonkey)/(\\d+)\\.?\\d+");
                    var m = re.exec(ua);
                    if (m !== null && m.length >= 3) {
                        browserDistributionVersion.distribution = m[1];
                        browserDistributionVersion.version = m[2];
                    }
                    break;
                case "Netscape":
                    browserDistributionVersion.distribution = "OEM";
                    var re = new RegExp("Mozilla/(\\d+)\\.\\d+");
                    var m = re.exec(uaProduct);
                    if (m !== null) {
                        browserDistributionVersion.version = m[1];
                    }
                    break;
            }
        }

        getBrowserDist = function () {
            return browserDistributionVersion.distribution;
        }

        getBrowserVersion = function () {
            return browserDistributionVersion.version;
        }

        getBrowserArch = function () {
            if (ua.match("(Win64|IA64|AMD64|x64|x86_64)") !== null)
                return "x86-64";

            return "x86-32";
        }
        getPlatformMisc = function () {
            var platformType = clientUserAgent.platform_type;
            var platformDist = clientUserAgent.platform_dist;
            var browserType = clientUserAgent.browser_type;
			var browserName = clientUserAgent.browser_name;
            var browserVersion = clientUserAgent.browser_vers;

            if (platformType === "Windows") {
                if (ua.indexOf("SV1") >= 0)
                    return "SP2";

                if (ua.indexOf("SV1") >= 0 && platformDist === "2003")
                    return "SP1";

                // MSIE 7 and 8 are only available for SP2 and greater
                // Firefox on XP does not send SP info so we should assume the user has SP2 or better
                if (platformDist === "XP" &&
						(browserType === "MSIE" &&
						(browserVersion === "7" || browserVersion === "8") ||
						(browserType === "Gecko")))
                    return "SP3";

            } else if (platformType === "Macintosh") {
                if (ua.match("10.7") !== null || ua.match("10_7") !== null) {
                    return "10.7.2";
                } else if (ua.match("10.8") !== null || ua.match("10_8") !== null) {
                    return "10.8.1";
                } else if (ua.match("10.6.8") !== null || ua.match("10_6_8") !== null) {
                    return "10.6.8";
                } else if (ua.match("10.6") !== null || ua.match("10_6") !== null) {
                    return "10.6.5";
                } else if (ua.match("10.5") !== null || ua.match("10_5") !== null) {
                    return "10.5.8";
                } else if (ua.match("10.4") !== null || ua.match("10_4") !== null) {
                    return "10.4.11";
                } else {
                    return "10.4.11";
                }
            }
        }

        init();
            
        return clientUserAgent;
}

function getPluginType(uc)
{	
	var activex = "activex";
	var plugin = "win_plugin";
	var macplugin = "mac_plugin";
	
//	platform_type: Windows or Macintosh etc
//	platform_dist: Version of OS
//	platform_misc: Not Used
//	platform_arch: Not Used
//	browser_type: Type of browser could be : Opera, MSIE, KHTML, Gecko, Netscape: 
//	browser_dist: Differentiate between different browser types : KTHML = Chrome or Safari
//	browser_vers: Not Used
//	browser_arch: Not Used

//We need to conclude whether users configureation maps to ActiveX, Plugin or MacPlugin

	if(uc.platform_type == "Macintosh")
			return macplugin;

	if(uc.browser_dist == "Chrome")
		return macplugin;

	if(uc.browser_dist == "MSIE")
		return activex;
		
	if(uc.platform_type == "Windows")
		return plugin;
	
	//Rest all cases are covered here.
	return plugin;			
}