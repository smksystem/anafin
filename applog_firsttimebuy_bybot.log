2019-09-07 03:29:22,607,607 INFO [plugin_fivesteps.py:13] Initialize of plugin_fivesteps
2019-09-07 03:29:22,609,609 INFO [packsel.py:24] Running Mode = xdebug
2019-09-07 03:29:22,609,609 INFO [packsel_model.py:11] Initialize log of packsel_model
2019-09-07 03:29:22,609,609 INFO [monitor.py:56] Initialize Pinkybot
2019-09-07 03:29:22,700,700 DEBUG [plugin_fivesteps.py:24] {'planname': <tkinter.StringVar object at 0x03C526B0>, 'rangeselect': <tkinter.StringVar object at 0x03C529D0>, 'monitorstock': <tkinter.StringVar object at 0x03C52B10>, 'initinvest': <tkinter.StringVar object at 0x03C52BB0>, 'volumestep': <tkinter.StringVar object at 0x03C52B70>, 'profitstep': <tkinter.StringVar object at 0x03C526D0>, 'topvaluebuy': <tkinter.StringVar object at 0x03C52710>, 'startvaluebuy': <tkinter.StringVar object at 0x04FE3FD0>, 'stopvaluebuy': <tkinter.StringVar object at 0x04FE3E70>, 'floorvaluebuy': <tkinter.StringVar object at 0x04FEC5D0>, 'firstbuyflag': <tkinter.StringVar object at 0x04FEC650>, 'pluginfile': <tkinter.StringVar object at 0x04FEC250>, 'currentuseId': <tkinter.StringVar object at 0x04FEC1B0>, 'floorvaluerange': <tkinter.StringVar object at 0x04FEC0F0>, 'topvaluerange': <tkinter.StringVar object at 0x04FEC530>, 'commonvaluestep': <tkinter.StringVar object at 0x04FEC110>, 'runningmode': <tkinter.StringVar object at 0x04FEC7D0>, 'totalcostbuy': <tkinter.StringVar object at 0x04FEC690>, 'totalvolumebuy': <tkinter.StringVar object at 0x04FEC770>, 'stockpin': <tkinter.StringVar object at 0x04FEC6D0>, 'remaininvest': <tkinter.StringVar object at 0x04FEC910>}
2019-09-07 03:29:22,700,700 DEBUG [plugin_fivesteps.py:32] def setparameter print initial All monitorstock Parameter
2019-09-07 03:29:22,700,700 DEBUG [plugin_fivesteps.py:33] {'planname': <tkinter.StringVar object at 0x03C526B0>, 'rangeselect': <tkinter.StringVar object at 0x03C529D0>, 'monitorstock': <tkinter.StringVar object at 0x03C52B10>, 'initinvest': <tkinter.StringVar object at 0x03C52BB0>, 'volumestep': <tkinter.StringVar object at 0x03C52B70>, 'profitstep': <tkinter.StringVar object at 0x03C526D0>, 'topvaluebuy': <tkinter.StringVar object at 0x03C52710>, 'startvaluebuy': <tkinter.StringVar object at 0x04FE3FD0>, 'stopvaluebuy': <tkinter.StringVar object at 0x04FE3E70>, 'floorvaluebuy': <tkinter.StringVar object at 0x04FEC5D0>, 'firstbuyflag': <tkinter.StringVar object at 0x04FEC650>, 'pluginfile': <tkinter.StringVar object at 0x04FEC250>, 'currentuseId': <tkinter.StringVar object at 0x04FEC1B0>, 'floorvaluerange': <tkinter.StringVar object at 0x04FEC0F0>, 'topvaluerange': <tkinter.StringVar object at 0x04FEC530>, 'commonvaluestep': <tkinter.StringVar object at 0x04FEC110>, 'runningmode': <tkinter.StringVar object at 0x04FEC7D0>, 'totalcostbuy': <tkinter.StringVar object at 0x04FEC690>, 'totalvolumebuy': <tkinter.StringVar object at 0x04FEC770>, 'stockpin': <tkinter.StringVar object at 0x04FEC6D0>, 'remaininvest': <tkinter.StringVar object at 0x04FEC910>}
2019-09-07 03:29:22,703,703 DEBUG [plugin_fivesteps.py:91] Print stock pin value
2019-09-07 03:29:22,704,704 DEBUG [plugin_fivesteps.py:92] 
2019-09-07 03:29:22,750,750 DEBUG [plugin_fivesteps.py:247] Finish Prepare in def setlabeldisplay
2019-09-07 03:29:25,788,788 INFO [tkconsole.py:808] Execute Login
2019-09-07 03:29:25,788,788 INFO [monitor.py:118] Start Login
2019-09-07 03:29:36,480,480 DEBUG [packsel.py:207] Web load success
2019-09-07 03:29:36,585,585 INFO [monitor.py:166] Login seem to be succeeded , start to refresh all data from database with refresh all condition
2019-09-07 03:29:37,900,900 DEBUG [packsel.py:603] Print tablerow before loop
2019-09-07 03:29:37,900,900 INFO [packsel.py:618] Number rows of Table Track = 0
2019-09-07 03:29:37,900,900 DEBUG [packsel.py:638] raw data for mytable before update to database in def refreshbtn
2019-09-07 03:29:37,900,900 DEBUG [packsel.py:639] []
2019-09-07 03:29:37,900,900 DEBUG [packsel.py:649] Do partial update refresh with below data in var mytable
2019-09-07 03:29:37,900,900 DEBUG [packsel.py:650] []
2019-09-07 03:29:37,900,900 DEBUG [plugin_fivesteps.py:454] print price_change from checkprocess2order to order next plugin_fivesteps.py line 239
2019-09-07 03:29:37,900,900 DEBUG [plugin_fivesteps.py:455] 4.72
2019-09-07 03:29:37,900,900 DEBUG [plugin_fivesteps.py:460] Print rt_table this value should be empty for first time buy
2019-09-07 03:29:37,900,900 DEBUG [plugin_fivesteps.py:461] []
2019-09-07 03:29:37,900,900 DEBUG [plugin_fivesteps.py:463] Print configval from def checkprocess2order before fist buy order
2019-09-07 03:29:37,900,900 DEBUG [plugin_fivesteps.py:464] {'planname': <tkinter.StringVar object at 0x03C526B0>, 'rangeselect': <tkinter.StringVar object at 0x03C529D0>, 'monitorstock': <tkinter.StringVar object at 0x03C52B10>, 'initinvest': <tkinter.StringVar object at 0x03C52BB0>, 'volumestep': <tkinter.StringVar object at 0x03C52B70>, 'profitstep': <tkinter.StringVar object at 0x03C526D0>, 'topvaluebuy': <tkinter.StringVar object at 0x03C52710>, 'startvaluebuy': <tkinter.StringVar object at 0x04FE3FD0>, 'stopvaluebuy': <tkinter.StringVar object at 0x04FE3E70>, 'floorvaluebuy': <tkinter.StringVar object at 0x04FEC5D0>, 'firstbuyflag': <tkinter.StringVar object at 0x04FEC650>, 'pluginfile': <tkinter.StringVar object at 0x04FEC250>, 'currentuseId': <tkinter.StringVar object at 0x04FEC1B0>, 'floorvaluerange': <tkinter.StringVar object at 0x04FEC0F0>, 'topvaluerange': <tkinter.StringVar object at 0x04FEC530>, 'commonvaluestep': <tkinter.StringVar object at 0x04FEC110>, 'runningmode': <tkinter.StringVar object at 0x04FEC7D0>, 'totalcostbuy': <tkinter.StringVar object at 0x04FEC690>, 'totalvolumebuy': <tkinter.StringVar object at 0x04FEC770>, 'stockpin': <tkinter.StringVar object at 0x04FEC6D0>, 'remaininvest': <tkinter.StringVar object at 0x04FEC910>}
2019-09-07 03:29:37,905,905 DEBUG [plugin_fivesteps.py:483] Update first time to planname below ###
2019-09-07 03:29:37,905,905 DEBUG [plugin_fivesteps.py:484] 1
2019-09-07 03:29:37,905,905 DEBUG [plugin_fivesteps.py:348] ===== def order =====
2019-09-07 03:29:37,905,905 DEBUG [plugin_fivesteps.py:349] {'ordermode': 'buybybot', 'firstbuy': 'yes'}
2019-09-07 03:29:37,906,906 DEBUG [plugin_fivesteps.py:350] auto
2019-09-07 03:29:37,906,906 DEBUG [plugin_fivesteps.py:370] def order: First volume to buy orderdetail in def order
2019-09-07 03:29:37,906,906 DEBUG [plugin_fivesteps.py:372] {'monitorstock': 'WHA', 'volume': '1000', 'price': '4.72', 'stockpin': '44444444', 'order': 'buy'}
2019-09-07 03:29:37,906,906 DEBUG [packsel.py:451] Order params def order
2019-09-07 03:29:37,906,906 DEBUG [packsel.py:452] {'monitorstock': 'WHA', 'volume': '1000', 'price': '4.72', 'stockpin': '44444444', 'order': 'buy'}
2019-09-07 03:29:38,286,286 DEBUG [tkconsole.py:890] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-09-07 03:29:38,286,286 DEBUG [tkconsole.py:891] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-09-07 03:29:39,499,499 DEBUG [packsel.py:603] Print tablerow before loop
2019-09-07 03:29:39,506,506 DEBUG [packsel.py:610]  	891474	03:29:38	WHA	B	4.72	1000	0	0	0	Pending(S)
2019-09-07 03:29:39,516,516 INFO [packsel.py:618] Number rows of Table Track = 1
2019-09-07 03:29:39,516,516 DEBUG [packsel.py:638] raw data for mytable before update to database in def refreshbtn
2019-09-07 03:29:39,516,516 DEBUG [packsel.py:639] [['891474', '03:29:38', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Pending(S)']]
2019-09-07 03:29:39,516,516 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:29:39,517,517 DEBUG [packsel_model.py:370] <QuerySet []>
2019-09-07 03:29:39,518,518 DEBUG [packsel_model.py:402] NO SQL Found Enter case checkorderno NOT existing and partial refresh
2019-09-07 03:29:39,724,724 DEBUG [packsel.py:649] Do partial update refresh with below data in var mytable
2019-09-07 03:29:39,724,724 DEBUG [packsel.py:650] [{'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': 'None'}]
2019-09-07 03:29:39,724,724 DEBUG [plugin_fivesteps.py:380] [{'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': 'None'}]
2019-09-07 03:29:39,724,724 DEBUG [plugin_fivesteps.py:271] Print result_order for def putordermonitoring before process function
2019-09-07 03:29:39,725,725 DEBUG [plugin_fivesteps.py:272] [{'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': 'None'}]
2019-09-07 03:29:39,725,725 DEBUG [plugin_fivesteps.py:337] !!! Now Monitor self.matchedordermonitor and print result_order in def putordermonitoring
2019-09-07 03:29:39,725,725 DEBUG [plugin_fivesteps.py:338] [{'orderno': '891474', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': 'None'}]
2019-09-07 03:29:39,913,913 DEBUG [packsel.py:341] *** result from value of resultvaluemonitor def monitoring
2019-09-07 03:29:39,913,913 DEBUG [packsel.py:342] [{'orderno': '891474', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': 'None'}]
2019-09-07 03:29:39,913,913 DEBUG [packsel.py:366] Qrefresh is not empty
2019-09-07 03:29:39,913,913 DEBUG [packsel.py:367] {'qrefresh': 'refreshtk', 'doupdatetk': [{'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': 'None'}]}
2019-09-07 03:29:40,009,9 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:29:40,290,290 DEBUG [tkconsole.py:890] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-09-07 03:29:40,290,290 DEBUG [tkconsole.py:891] {'qrefresh': 'refreshtk', 'doupdatetk': [{'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': 'None'}]}
2019-09-07 03:29:40,290,290 DEBUG [tkconsole.py:914] print repeatidx case of price == 0
2019-09-07 03:29:40,290,290 DEBUG [tkconsole.py:915] 0
2019-09-07 03:29:41,081,81 DEBUG [packsel.py:603] Print tablerow before loop
2019-09-07 03:29:41,086,86 DEBUG [packsel.py:610]  	891474	03:29:38	WHA	B	4.72	1000	0	0	0	Pending(S)
2019-09-07 03:29:41,096,96 INFO [packsel.py:618] Number rows of Table Track = 1
2019-09-07 03:29:41,096,96 DEBUG [packsel.py:638] raw data for mytable before update to database in def refreshbtn
2019-09-07 03:29:41,096,96 DEBUG [packsel.py:639] [['891474', '03:29:38', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Pending(S)']]
2019-09-07 03:29:41,096,96 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:29:41,096,96 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': 'None'}]>
2019-09-07 03:29:41,098,98 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:29:41,098,98 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': 'None'}]>
2019-09-07 03:29:41,099,99 DEBUG [packsel.py:649] Do partial update refresh with below data in var mytable
2019-09-07 03:29:41,099,99 DEBUG [packsel.py:650] []
2019-09-07 03:29:41,099,99 DEBUG [plugin_fivesteps.py:454] print price_change from checkprocess2order to order next plugin_fivesteps.py line 239
2019-09-07 03:29:41,100,100 DEBUG [plugin_fivesteps.py:455] 4.74
2019-09-07 03:29:41,100,100 DEBUG [plugin_fivesteps.py:460] Print rt_table this value should be empty for first time buy
2019-09-07 03:29:41,100,100 DEBUG [plugin_fivesteps.py:461] []
2019-09-07 03:29:41,100,100 DEBUG [plugin_fivesteps.py:463] Print configval from def checkprocess2order before fist buy order
2019-09-07 03:29:41,100,100 DEBUG [plugin_fivesteps.py:464] {'planname': <tkinter.StringVar object at 0x03C526B0>, 'rangeselect': <tkinter.StringVar object at 0x03C529D0>, 'monitorstock': <tkinter.StringVar object at 0x03C52B10>, 'initinvest': <tkinter.StringVar object at 0x03C52BB0>, 'volumestep': <tkinter.StringVar object at 0x03C52B70>, 'profitstep': <tkinter.StringVar object at 0x03C526D0>, 'topvaluebuy': <tkinter.StringVar object at 0x03C52710>, 'startvaluebuy': <tkinter.StringVar object at 0x04FE3FD0>, 'stopvaluebuy': <tkinter.StringVar object at 0x04FE3E70>, 'floorvaluebuy': <tkinter.StringVar object at 0x04FEC5D0>, 'firstbuyflag': <tkinter.StringVar object at 0x04FEC650>, 'pluginfile': <tkinter.StringVar object at 0x04FEC250>, 'currentuseId': <tkinter.StringVar object at 0x04FEC1B0>, 'floorvaluerange': <tkinter.StringVar object at 0x04FEC0F0>, 'topvaluerange': <tkinter.StringVar object at 0x04FEC530>, 'commonvaluestep': <tkinter.StringVar object at 0x04FEC110>, 'runningmode': <tkinter.StringVar object at 0x04FEC7D0>, 'totalcostbuy': <tkinter.StringVar object at 0x04FEC690>, 'totalvolumebuy': <tkinter.StringVar object at 0x04FEC770>, 'stockpin': <tkinter.StringVar object at 0x04FEC6D0>, 'remaininvest': <tkinter.StringVar object at 0x04FEC910>}
2019-09-07 03:29:41,106,106 DEBUG [packsel.py:341] *** result from value of resultvaluemonitor def monitoring
2019-09-07 03:29:41,107,107 DEBUG [packsel.py:342] [{'orderno': '891474', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': 'None'}]
2019-09-07 03:29:41,107,107 DEBUG [packsel.py:366] Qrefresh is not empty
2019-09-07 03:29:41,107,107 DEBUG [packsel.py:367] {'qrefresh': 'refreshdb', 'refreshtype': 'all'}
2019-09-07 03:29:41,211,211 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:29:41,548,548 DEBUG [tkconsole.py:890] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-09-07 03:29:41,548,548 DEBUG [tkconsole.py:891] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-09-07 03:29:42,212,212 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:29:42,292,292 DEBUG [packsel.py:603] Print tablerow before loop
2019-09-07 03:29:42,297,297 DEBUG [packsel.py:610]  	891474	03:29:38	WHA	B	4.72	1000	0	0	0	Pending(S)
2019-09-07 03:29:42,303,303 INFO [packsel.py:618] Number rows of Table Track = 1
2019-09-07 03:29:42,304,304 DEBUG [packsel.py:638] raw data for mytable before update to database in def refreshbtn
2019-09-07 03:29:42,304,304 DEBUG [packsel.py:639] [['891474', '03:29:38', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Pending(S)']]
2019-09-07 03:29:42,304,304 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:29:42,304,304 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': 'None'}]>
2019-09-07 03:29:42,306,306 DEBUG [packsel_model.py:392] Refresh each row case chkorderno already existing in database and status
2019-09-07 03:29:42,306,306 DEBUG [packsel_model.py:393] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': 'None'}]>
2019-09-07 03:29:42,307,307 DEBUG [packsel_model.py:394] Pending(S)
2019-09-07 03:29:42,308,308 DEBUG [packsel.py:657] Do ALL full update refresh ALL before putordermonitoring
2019-09-07 03:29:42,308,308 DEBUG [packsel.py:658] [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': 'None'}]
2019-09-07 03:29:42,308,308 DEBUG [plugin_fivesteps.py:271] Print result_order for def putordermonitoring before process function
2019-09-07 03:29:42,308,308 DEBUG [plugin_fivesteps.py:272] [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': 'None'}]
2019-09-07 03:29:42,308,308 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:29:42,308,308 DEBUG [plugin_fivesteps.py:292] 891474
2019-09-07 03:29:42,308,308 DEBUG [plugin_fivesteps.py:293] 891474
2019-09-07 03:29:42,308,308 DEBUG [plugin_fivesteps.py:337] !!! Now Monitor self.matchedordermonitor and print result_order in def putordermonitoring
2019-09-07 03:29:42,308,308 DEBUG [plugin_fivesteps.py:338] [{'orderno': '891474', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': 'None'}]
2019-09-07 03:29:42,308,308 DEBUG [plugin_fivesteps.py:504] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-09-07 03:29:42,308,308 DEBUG [plugin_fivesteps.py:505] [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': 'None'}]
2019-09-07 03:29:42,309,309 DEBUG [plugin_fivesteps.py:506] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-09-07 03:29:42,309,309 DEBUG [plugin_fivesteps.py:507] [{'orderno': '891474', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': 'None'}]
2019-09-07 03:29:42,309,309 DEBUG [plugin_fivesteps.py:762] +++ Case else with not match but order match def checkprocess2matchstatus
2019-09-07 03:29:42,309,309 DEBUG [plugin_fivesteps.py:763] [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': 'None'}]
2019-09-07 03:29:42,309,309 DEBUG [plugin_fivesteps.py:764] [{'orderno': '891474', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': 'None'}]
2019-09-07 03:29:43,300,300 DEBUG [tkconsole.py:890] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-09-07 03:29:43,300,300 DEBUG [tkconsole.py:891] {'qrefresh': 'refreshtk', 'doupdatetk': [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': 'None'}]}
2019-09-07 03:29:43,626,626 DEBUG [packsel.py:603] Print tablerow before loop
2019-09-07 03:29:43,630,630 DEBUG [packsel.py:610]  	891474	03:29:38	WHA	B	4.72	1000	0	0	0	Pending(S)
2019-09-07 03:29:43,637,637 INFO [packsel.py:618] Number rows of Table Track = 1
2019-09-07 03:29:43,637,637 DEBUG [packsel.py:638] raw data for mytable before update to database in def refreshbtn
2019-09-07 03:29:43,637,637 DEBUG [packsel.py:639] [['891474', '03:29:38', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Pending(S)']]
2019-09-07 03:29:43,637,637 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:29:43,637,637 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': 'None'}]>
2019-09-07 03:29:43,639,639 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:29:43,639,639 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': 'None'}]>
2019-09-07 03:29:43,640,640 DEBUG [packsel.py:649] Do partial update refresh with below data in var mytable
2019-09-07 03:29:43,640,640 DEBUG [packsel.py:650] []
2019-09-07 03:29:43,640,640 DEBUG [plugin_fivesteps.py:454] print price_change from checkprocess2order to order next plugin_fivesteps.py line 239
2019-09-07 03:29:43,641,641 DEBUG [plugin_fivesteps.py:455] 4.76
2019-09-07 03:29:43,641,641 DEBUG [plugin_fivesteps.py:460] Print rt_table this value should be empty for first time buy
2019-09-07 03:29:43,641,641 DEBUG [plugin_fivesteps.py:461] []
2019-09-07 03:29:43,641,641 DEBUG [plugin_fivesteps.py:463] Print configval from def checkprocess2order before fist buy order
2019-09-07 03:29:43,641,641 DEBUG [plugin_fivesteps.py:464] {'planname': <tkinter.StringVar object at 0x03C526B0>, 'rangeselect': <tkinter.StringVar object at 0x03C529D0>, 'monitorstock': <tkinter.StringVar object at 0x03C52B10>, 'initinvest': <tkinter.StringVar object at 0x03C52BB0>, 'volumestep': <tkinter.StringVar object at 0x03C52B70>, 'profitstep': <tkinter.StringVar object at 0x03C526D0>, 'topvaluebuy': <tkinter.StringVar object at 0x03C52710>, 'startvaluebuy': <tkinter.StringVar object at 0x04FE3FD0>, 'stopvaluebuy': <tkinter.StringVar object at 0x04FE3E70>, 'floorvaluebuy': <tkinter.StringVar object at 0x04FEC5D0>, 'firstbuyflag': <tkinter.StringVar object at 0x04FEC650>, 'pluginfile': <tkinter.StringVar object at 0x04FEC250>, 'currentuseId': <tkinter.StringVar object at 0x04FEC1B0>, 'floorvaluerange': <tkinter.StringVar object at 0x04FEC0F0>, 'topvaluerange': <tkinter.StringVar object at 0x04FEC530>, 'commonvaluestep': <tkinter.StringVar object at 0x04FEC110>, 'runningmode': <tkinter.StringVar object at 0x04FEC7D0>, 'totalcostbuy': <tkinter.StringVar object at 0x04FEC690>, 'totalvolumebuy': <tkinter.StringVar object at 0x04FEC770>, 'stockpin': <tkinter.StringVar object at 0x04FEC6D0>, 'remaininvest': <tkinter.StringVar object at 0x04FEC910>}
2019-09-07 03:29:43,645,645 DEBUG [packsel.py:341] *** result from value of resultvaluemonitor def monitoring
2019-09-07 03:29:43,646,646 DEBUG [packsel.py:342] [{'orderno': '891474', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': 'None'}]
2019-09-07 03:29:43,646,646 DEBUG [packsel.py:366] Qrefresh is not empty
2019-09-07 03:29:43,646,646 DEBUG [packsel.py:367] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-09-07 03:29:43,815,815 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:29:44,303,303 DEBUG [tkconsole.py:890] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-09-07 03:29:44,303,303 DEBUG [tkconsole.py:891] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-09-07 03:29:44,794,794 DEBUG [packsel.py:603] Print tablerow before loop
2019-09-07 03:29:44,799,799 DEBUG [packsel.py:610]  	891474	03:29:38	WHA	B	4.72	1000	0	0	0	Pending(S)
2019-09-07 03:29:44,807,807 INFO [packsel.py:618] Number rows of Table Track = 1
2019-09-07 03:29:44,807,807 DEBUG [packsel.py:638] raw data for mytable before update to database in def refreshbtn
2019-09-07 03:29:44,807,807 DEBUG [packsel.py:639] [['891474', '03:29:38', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Pending(S)']]
2019-09-07 03:29:44,807,807 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:29:44,807,807 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': 'None'}]>
2019-09-07 03:29:44,809,809 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:29:44,809,809 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': 'None'}]>
2019-09-07 03:29:44,810,810 DEBUG [packsel.py:649] Do partial update refresh with below data in var mytable
2019-09-07 03:29:44,810,810 DEBUG [packsel.py:650] []
2019-09-07 03:29:44,810,810 DEBUG [plugin_fivesteps.py:504] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-09-07 03:29:44,810,810 DEBUG [plugin_fivesteps.py:505] []
2019-09-07 03:29:44,810,810 DEBUG [plugin_fivesteps.py:506] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-09-07 03:29:44,811,811 DEBUG [plugin_fivesteps.py:507] [{'orderno': '891474', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': 'None'}]
2019-09-07 03:29:44,817,817 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:29:45,805,805 DEBUG [tkconsole.py:890] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-09-07 03:29:45,805,805 DEBUG [tkconsole.py:891] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-09-07 03:29:45,994,994 DEBUG [packsel.py:603] Print tablerow before loop
2019-09-07 03:29:45,999,999 DEBUG [packsel.py:610]  	891474	03:29:38	WHA	B	4.72	1000	0	0	0	Pending(S)
2019-09-07 03:29:46,006,6 INFO [packsel.py:618] Number rows of Table Track = 1
2019-09-07 03:29:46,006,6 DEBUG [packsel.py:638] raw data for mytable before update to database in def refreshbtn
2019-09-07 03:29:46,006,6 DEBUG [packsel.py:639] [['891474', '03:29:38', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Pending(S)']]
2019-09-07 03:29:46,006,6 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:29:46,006,6 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': 'None'}]>
2019-09-07 03:29:46,008,8 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:29:46,008,8 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': 'None'}]>
2019-09-07 03:29:46,009,9 DEBUG [packsel.py:649] Do partial update refresh with below data in var mytable
2019-09-07 03:29:46,009,9 DEBUG [packsel.py:650] []
2019-09-07 03:29:46,009,9 DEBUG [plugin_fivesteps.py:454] print price_change from checkprocess2order to order next plugin_fivesteps.py line 239
2019-09-07 03:29:46,009,9 DEBUG [plugin_fivesteps.py:455] 4.80
2019-09-07 03:29:46,009,9 DEBUG [plugin_fivesteps.py:460] Print rt_table this value should be empty for first time buy
2019-09-07 03:29:46,010,10 DEBUG [plugin_fivesteps.py:461] []
2019-09-07 03:29:46,010,10 DEBUG [plugin_fivesteps.py:463] Print configval from def checkprocess2order before fist buy order
2019-09-07 03:29:46,010,10 DEBUG [plugin_fivesteps.py:464] {'planname': <tkinter.StringVar object at 0x03C526B0>, 'rangeselect': <tkinter.StringVar object at 0x03C529D0>, 'monitorstock': <tkinter.StringVar object at 0x03C52B10>, 'initinvest': <tkinter.StringVar object at 0x03C52BB0>, 'volumestep': <tkinter.StringVar object at 0x03C52B70>, 'profitstep': <tkinter.StringVar object at 0x03C526D0>, 'topvaluebuy': <tkinter.StringVar object at 0x03C52710>, 'startvaluebuy': <tkinter.StringVar object at 0x04FE3FD0>, 'stopvaluebuy': <tkinter.StringVar object at 0x04FE3E70>, 'floorvaluebuy': <tkinter.StringVar object at 0x04FEC5D0>, 'firstbuyflag': <tkinter.StringVar object at 0x04FEC650>, 'pluginfile': <tkinter.StringVar object at 0x04FEC250>, 'currentuseId': <tkinter.StringVar object at 0x04FEC1B0>, 'floorvaluerange': <tkinter.StringVar object at 0x04FEC0F0>, 'topvaluerange': <tkinter.StringVar object at 0x04FEC530>, 'commonvaluestep': <tkinter.StringVar object at 0x04FEC110>, 'runningmode': <tkinter.StringVar object at 0x04FEC7D0>, 'totalcostbuy': <tkinter.StringVar object at 0x04FEC690>, 'totalvolumebuy': <tkinter.StringVar object at 0x04FEC770>, 'stockpin': <tkinter.StringVar object at 0x04FEC6D0>, 'remaininvest': <tkinter.StringVar object at 0x04FEC910>}
2019-09-07 03:29:46,014,14 DEBUG [packsel.py:341] *** result from value of resultvaluemonitor def monitoring
2019-09-07 03:29:46,014,14 DEBUG [packsel.py:342] [{'orderno': '891474', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': 'None'}]
2019-09-07 03:29:46,015,15 DEBUG [packsel.py:366] Qrefresh is not empty
2019-09-07 03:29:46,015,15 DEBUG [packsel.py:367] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-09-07 03:29:46,619,619 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:29:46,806,806 DEBUG [tkconsole.py:890] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-09-07 03:29:46,806,806 DEBUG [tkconsole.py:891] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-09-07 03:29:47,147,147 DEBUG [packsel.py:603] Print tablerow before loop
2019-09-07 03:29:47,152,152 DEBUG [packsel.py:610]  	891474	03:29:38	WHA	B	4.72	1000	0	0	0	Pending(S)
2019-09-07 03:29:47,158,158 INFO [packsel.py:618] Number rows of Table Track = 1
2019-09-07 03:29:47,158,158 DEBUG [packsel.py:638] raw data for mytable before update to database in def refreshbtn
2019-09-07 03:29:47,158,158 DEBUG [packsel.py:639] [['891474', '03:29:38', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Pending(S)']]
2019-09-07 03:29:47,158,158 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:29:47,159,159 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': 'None'}]>
2019-09-07 03:29:47,160,160 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:29:47,160,160 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': 'None'}]>
2019-09-07 03:29:47,161,161 DEBUG [packsel.py:649] Do partial update refresh with below data in var mytable
2019-09-07 03:29:47,161,161 DEBUG [packsel.py:650] []
2019-09-07 03:29:47,162,162 DEBUG [plugin_fivesteps.py:504] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-09-07 03:29:47,162,162 DEBUG [plugin_fivesteps.py:505] []
2019-09-07 03:29:47,162,162 DEBUG [plugin_fivesteps.py:506] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-09-07 03:29:47,162,162 DEBUG [plugin_fivesteps.py:507] [{'orderno': '891474', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': 'None'}]
2019-09-07 03:29:47,620,620 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:29:48,308,308 DEBUG [tkconsole.py:890] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-09-07 03:29:48,308,308 DEBUG [tkconsole.py:891] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-09-07 03:29:48,462,462 DEBUG [packsel.py:603] Print tablerow before loop
2019-09-07 03:29:48,467,467 DEBUG [packsel.py:610]  	891474	03:29:38	WHA	B	4.72	1000	0	0	0	Pending(S)
2019-09-07 03:29:48,473,473 INFO [packsel.py:618] Number rows of Table Track = 1
2019-09-07 03:29:48,474,474 DEBUG [packsel.py:638] raw data for mytable before update to database in def refreshbtn
2019-09-07 03:29:48,474,474 DEBUG [packsel.py:639] [['891474', '03:29:38', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Pending(S)']]
2019-09-07 03:29:48,474,474 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:29:48,474,474 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': 'None'}]>
2019-09-07 03:29:48,476,476 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:29:48,476,476 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': 'None'}]>
2019-09-07 03:29:48,477,477 DEBUG [packsel.py:649] Do partial update refresh with below data in var mytable
2019-09-07 03:29:48,477,477 DEBUG [packsel.py:650] []
2019-09-07 03:29:48,477,477 DEBUG [plugin_fivesteps.py:454] print price_change from checkprocess2order to order next plugin_fivesteps.py line 239
2019-09-07 03:29:48,477,477 DEBUG [plugin_fivesteps.py:455] 4.82
2019-09-07 03:29:48,477,477 DEBUG [plugin_fivesteps.py:460] Print rt_table this value should be empty for first time buy
2019-09-07 03:29:48,477,477 DEBUG [plugin_fivesteps.py:461] []
2019-09-07 03:29:48,477,477 DEBUG [plugin_fivesteps.py:463] Print configval from def checkprocess2order before fist buy order
2019-09-07 03:29:48,477,477 DEBUG [plugin_fivesteps.py:464] {'planname': <tkinter.StringVar object at 0x03C526B0>, 'rangeselect': <tkinter.StringVar object at 0x03C529D0>, 'monitorstock': <tkinter.StringVar object at 0x03C52B10>, 'initinvest': <tkinter.StringVar object at 0x03C52BB0>, 'volumestep': <tkinter.StringVar object at 0x03C52B70>, 'profitstep': <tkinter.StringVar object at 0x03C526D0>, 'topvaluebuy': <tkinter.StringVar object at 0x03C52710>, 'startvaluebuy': <tkinter.StringVar object at 0x04FE3FD0>, 'stopvaluebuy': <tkinter.StringVar object at 0x04FE3E70>, 'floorvaluebuy': <tkinter.StringVar object at 0x04FEC5D0>, 'firstbuyflag': <tkinter.StringVar object at 0x04FEC650>, 'pluginfile': <tkinter.StringVar object at 0x04FEC250>, 'currentuseId': <tkinter.StringVar object at 0x04FEC1B0>, 'floorvaluerange': <tkinter.StringVar object at 0x04FEC0F0>, 'topvaluerange': <tkinter.StringVar object at 0x04FEC530>, 'commonvaluestep': <tkinter.StringVar object at 0x04FEC110>, 'runningmode': <tkinter.StringVar object at 0x04FEC7D0>, 'totalcostbuy': <tkinter.StringVar object at 0x04FEC690>, 'totalvolumebuy': <tkinter.StringVar object at 0x04FEC770>, 'stockpin': <tkinter.StringVar object at 0x04FEC6D0>, 'remaininvest': <tkinter.StringVar object at 0x04FEC910>}
2019-09-07 03:29:48,482,482 DEBUG [packsel.py:341] *** result from value of resultvaluemonitor def monitoring
2019-09-07 03:29:48,482,482 DEBUG [packsel.py:342] [{'orderno': '891474', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': 'None'}]
2019-09-07 03:29:48,482,482 DEBUG [packsel.py:366] Qrefresh is not empty
2019-09-07 03:29:48,482,482 DEBUG [packsel.py:367] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-09-07 03:29:49,022,22 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:29:49,563,563 DEBUG [tkconsole.py:890] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-09-07 03:29:49,563,563 DEBUG [tkconsole.py:891] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-09-07 03:29:49,598,598 DEBUG [packsel.py:603] Print tablerow before loop
2019-09-07 03:29:49,603,603 DEBUG [packsel.py:610]  	891474	03:29:38	WHA	B	4.72	1000	0	0	0	Pending(S)
2019-09-07 03:29:49,610,610 INFO [packsel.py:618] Number rows of Table Track = 1
2019-09-07 03:29:49,610,610 DEBUG [packsel.py:638] raw data for mytable before update to database in def refreshbtn
2019-09-07 03:29:49,610,610 DEBUG [packsel.py:639] [['891474', '03:29:38', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Pending(S)']]
2019-09-07 03:29:49,610,610 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:29:49,610,610 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': 'None'}]>
2019-09-07 03:29:49,612,612 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:29:49,612,612 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': 'None'}]>
2019-09-07 03:29:49,613,613 DEBUG [packsel.py:649] Do partial update refresh with below data in var mytable
2019-09-07 03:29:49,613,613 DEBUG [packsel.py:650] []
2019-09-07 03:29:49,613,613 DEBUG [plugin_fivesteps.py:504] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-09-07 03:29:49,613,613 DEBUG [plugin_fivesteps.py:505] []
2019-09-07 03:29:49,614,614 DEBUG [plugin_fivesteps.py:506] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-09-07 03:29:49,614,614 DEBUG [plugin_fivesteps.py:507] [{'orderno': '891474', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': 'None'}]
2019-09-07 03:29:50,051,51 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:29:50,866,866 DEBUG [packsel.py:603] Print tablerow before loop
2019-09-07 03:29:50,871,871 DEBUG [packsel.py:610]  	891474	03:29:38	WHA	B	4.72	1000	0	0	0	Pending(S)
2019-09-07 03:29:50,878,878 INFO [packsel.py:618] Number rows of Table Track = 1
2019-09-07 03:29:50,878,878 DEBUG [packsel.py:638] raw data for mytable before update to database in def refreshbtn
2019-09-07 03:29:50,878,878 DEBUG [packsel.py:639] [['891474', '03:29:38', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Pending(S)']]
2019-09-07 03:29:50,878,878 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:29:50,878,878 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': 'None'}]>
2019-09-07 03:29:50,880,880 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:29:50,880,880 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': 'None'}]>
2019-09-07 03:29:50,881,881 DEBUG [packsel.py:649] Do partial update refresh with below data in var mytable
2019-09-07 03:29:50,881,881 DEBUG [packsel.py:650] []
2019-09-07 03:29:50,881,881 DEBUG [plugin_fivesteps.py:454] print price_change from checkprocess2order to order next plugin_fivesteps.py line 239
2019-09-07 03:29:50,881,881 DEBUG [plugin_fivesteps.py:455] 4.80
2019-09-07 03:29:50,881,881 DEBUG [plugin_fivesteps.py:460] Print rt_table this value should be empty for first time buy
2019-09-07 03:29:50,881,881 DEBUG [plugin_fivesteps.py:461] []
2019-09-07 03:29:50,881,881 DEBUG [plugin_fivesteps.py:463] Print configval from def checkprocess2order before fist buy order
2019-09-07 03:29:50,881,881 DEBUG [plugin_fivesteps.py:464] {'planname': <tkinter.StringVar object at 0x03C526B0>, 'rangeselect': <tkinter.StringVar object at 0x03C529D0>, 'monitorstock': <tkinter.StringVar object at 0x03C52B10>, 'initinvest': <tkinter.StringVar object at 0x03C52BB0>, 'volumestep': <tkinter.StringVar object at 0x03C52B70>, 'profitstep': <tkinter.StringVar object at 0x03C526D0>, 'topvaluebuy': <tkinter.StringVar object at 0x03C52710>, 'startvaluebuy': <tkinter.StringVar object at 0x04FE3FD0>, 'stopvaluebuy': <tkinter.StringVar object at 0x04FE3E70>, 'floorvaluebuy': <tkinter.StringVar object at 0x04FEC5D0>, 'firstbuyflag': <tkinter.StringVar object at 0x04FEC650>, 'pluginfile': <tkinter.StringVar object at 0x04FEC250>, 'currentuseId': <tkinter.StringVar object at 0x04FEC1B0>, 'floorvaluerange': <tkinter.StringVar object at 0x04FEC0F0>, 'topvaluerange': <tkinter.StringVar object at 0x04FEC530>, 'commonvaluestep': <tkinter.StringVar object at 0x04FEC110>, 'runningmode': <tkinter.StringVar object at 0x04FEC7D0>, 'totalcostbuy': <tkinter.StringVar object at 0x04FEC690>, 'totalvolumebuy': <tkinter.StringVar object at 0x04FEC770>, 'stockpin': <tkinter.StringVar object at 0x04FEC6D0>, 'remaininvest': <tkinter.StringVar object at 0x04FEC910>}
2019-09-07 03:29:50,886,886 DEBUG [packsel.py:341] *** result from value of resultvaluemonitor def monitoring
2019-09-07 03:29:50,886,886 DEBUG [packsel.py:342] [{'orderno': '891474', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': 'None'}]
2019-09-07 03:29:50,887,887 DEBUG [packsel.py:366] Qrefresh is not empty
2019-09-07 03:29:50,887,887 DEBUG [packsel.py:367] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-09-07 03:29:51,683,683 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:29:52,031,31 DEBUG [packsel.py:603] Print tablerow before loop
2019-09-07 03:29:52,036,36 DEBUG [packsel.py:610]  	891474	03:29:38	WHA	B	4.72	1000	0	0	0	Pending(S)
2019-09-07 03:29:52,042,42 INFO [packsel.py:618] Number rows of Table Track = 1
2019-09-07 03:29:52,042,42 DEBUG [packsel.py:638] raw data for mytable before update to database in def refreshbtn
2019-09-07 03:29:52,042,42 DEBUG [packsel.py:639] [['891474', '03:29:38', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Pending(S)']]
2019-09-07 03:29:52,043,43 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:29:52,043,43 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': 'None'}]>
2019-09-07 03:29:52,044,44 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:29:52,044,44 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': 'None'}]>
2019-09-07 03:29:52,046,46 DEBUG [packsel.py:649] Do partial update refresh with below data in var mytable
2019-09-07 03:29:52,046,46 DEBUG [packsel.py:650] []
2019-09-07 03:29:52,046,46 DEBUG [plugin_fivesteps.py:454] print price_change from checkprocess2order to order next plugin_fivesteps.py line 239
2019-09-07 03:29:52,046,46 DEBUG [plugin_fivesteps.py:455] 4.78
2019-09-07 03:29:52,046,46 DEBUG [plugin_fivesteps.py:460] Print rt_table this value should be empty for first time buy
2019-09-07 03:29:52,046,46 DEBUG [plugin_fivesteps.py:461] []
2019-09-07 03:29:52,046,46 DEBUG [plugin_fivesteps.py:463] Print configval from def checkprocess2order before fist buy order
2019-09-07 03:29:52,046,46 DEBUG [plugin_fivesteps.py:464] {'planname': <tkinter.StringVar object at 0x03C526B0>, 'rangeselect': <tkinter.StringVar object at 0x03C529D0>, 'monitorstock': <tkinter.StringVar object at 0x03C52B10>, 'initinvest': <tkinter.StringVar object at 0x03C52BB0>, 'volumestep': <tkinter.StringVar object at 0x03C52B70>, 'profitstep': <tkinter.StringVar object at 0x03C526D0>, 'topvaluebuy': <tkinter.StringVar object at 0x03C52710>, 'startvaluebuy': <tkinter.StringVar object at 0x04FE3FD0>, 'stopvaluebuy': <tkinter.StringVar object at 0x04FE3E70>, 'floorvaluebuy': <tkinter.StringVar object at 0x04FEC5D0>, 'firstbuyflag': <tkinter.StringVar object at 0x04FEC650>, 'pluginfile': <tkinter.StringVar object at 0x04FEC250>, 'currentuseId': <tkinter.StringVar object at 0x04FEC1B0>, 'floorvaluerange': <tkinter.StringVar object at 0x04FEC0F0>, 'topvaluerange': <tkinter.StringVar object at 0x04FEC530>, 'commonvaluestep': <tkinter.StringVar object at 0x04FEC110>, 'runningmode': <tkinter.StringVar object at 0x04FEC7D0>, 'totalcostbuy': <tkinter.StringVar object at 0x04FEC690>, 'totalvolumebuy': <tkinter.StringVar object at 0x04FEC770>, 'stockpin': <tkinter.StringVar object at 0x04FEC6D0>, 'remaininvest': <tkinter.StringVar object at 0x04FEC910>}
2019-09-07 03:29:52,050,50 DEBUG [packsel.py:341] *** result from value of resultvaluemonitor def monitoring
2019-09-07 03:29:52,051,51 DEBUG [packsel.py:342] [{'orderno': '891474', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': 'None'}]
2019-09-07 03:29:52,051,51 DEBUG [packsel.py:366] Qrefresh is not empty
2019-09-07 03:29:52,051,51 DEBUG [packsel.py:367] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-09-07 03:29:52,363,363 DEBUG [tkconsole.py:890] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-09-07 03:29:52,364,364 DEBUG [tkconsole.py:891] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-09-07 03:29:52,614,614 DEBUG [tkconsole.py:890] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-09-07 03:29:52,614,614 DEBUG [tkconsole.py:891] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-09-07 03:29:53,199,199 DEBUG [packsel.py:603] Print tablerow before loop
2019-09-07 03:29:53,204,204 DEBUG [packsel.py:610]  	891474	03:29:38	WHA	B	4.72	1000	0	0	0	Matched(M)
2019-09-07 03:29:53,211,211 INFO [packsel.py:618] Number rows of Table Track = 1
2019-09-07 03:29:53,211,211 DEBUG [packsel.py:638] raw data for mytable before update to database in def refreshbtn
2019-09-07 03:29:53,211,211 DEBUG [packsel.py:639] [['891474', '03:29:38', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Matched(M)']]
2019-09-07 03:29:53,211,211 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:29:53,211,211 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': 'None'}]>
2019-09-07 03:29:53,213,213 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:29:53,213,213 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': 'None'}]>
2019-09-07 03:29:53,214,214 DEBUG [packsel_model.py:432] SQL Update below column into updaterefresh table
2019-09-07 03:29:53,214,214 DEBUG [packsel_model.py:433] {'status': 'Matched(M)'}
2019-09-07 03:29:53,286,286 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:29:53,423,423 DEBUG [packsel.py:649] Do partial update refresh with below data in var mytable
2019-09-07 03:29:53,423,423 DEBUG [packsel.py:650] [{'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'matchedtime': 'matchtime', 'referorderno': 'None'}]
2019-09-07 03:29:53,423,423 DEBUG [plugin_fivesteps.py:504] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-09-07 03:29:53,423,423 DEBUG [plugin_fivesteps.py:505] [{'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'matchedtime': 'matchtime', 'referorderno': 'None'}]
2019-09-07 03:29:53,423,423 DEBUG [plugin_fivesteps.py:506] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-09-07 03:29:53,423,423 DEBUG [plugin_fivesteps.py:507] [{'orderno': '891474', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': 'None'}]
2019-09-07 03:29:53,451,451 DEBUG [plugin_fivesteps.py:549] Match found do remove matchedordermonitor below data
2019-09-07 03:29:53,451,451 DEBUG [plugin_fivesteps.py:550] [{'orderno': '891474', 'price': '4.72', 'status': 'Pending(S)', 'referorderno': 'None'}]
2019-09-07 03:29:53,451,451 DEBUG [plugin_fivesteps.py:554] Set commonvaluestep from def checkprocess2matchstatus
2019-09-07 03:29:53,451,451 DEBUG [plugin_fivesteps.py:555] 0.02
2019-09-07 03:29:53,452,452 DEBUG [plugin_fivesteps.py:574] ---Print difvaluerange for topvaluerange - floorvaluerange in def checkprocess2matchstatus
2019-09-07 03:29:53,452,452 DEBUG [plugin_fivesteps.py:575] 2.9
2019-09-07 03:29:53,452,452 DEBUG [plugin_fivesteps.py:600] ---Print allvalueidx in case of alvol >100 for step value with difvaluerange/commonvaluestep def checkprocess2matchstatus
2019-09-07 03:29:53,452,452 DEBUG [plugin_fivesteps.py:601] 146
2019-09-07 03:29:53,452,452 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:29:53,452,452 DEBUG [plugin_fivesteps.py:607] 1000
2019-09-07 03:29:53,452,452 DEBUG [plugin_fivesteps.py:630] --- summary sell price runvolidx,sellprice,buyprice,allvol,strprice
2019-09-07 03:29:53,452,452 DEBUG [plugin_fivesteps.py:631] 0
2019-09-07 03:29:53,452,452 DEBUG [plugin_fivesteps.py:632] 4.74
2019-09-07 03:29:53,452,452 DEBUG [plugin_fivesteps.py:633] 4.72
2019-09-07 03:29:53,452,452 DEBUG [plugin_fivesteps.py:634] 900
2019-09-07 03:29:53,452,452 DEBUG [plugin_fivesteps.py:635] 4.74
2019-09-07 03:29:53,453,453 DEBUG [plugin_fivesteps.py:348] ===== def order =====
2019-09-07 03:29:53,453,453 DEBUG [plugin_fivesteps.py:349] {'ordermode': 'sellbybot', 'firstbuy': 'no'}
2019-09-07 03:29:53,453,453 DEBUG [plugin_fivesteps.py:350] auto
2019-09-07 03:29:53,453,453 DEBUG [plugin_fivesteps.py:425] !!! print of orderdetail case sellbybot firstbuy==no before for order idx in def order 
2019-09-07 03:29:53,453,453 DEBUG [plugin_fivesteps.py:426] [{'price': '4.74', 'volume': '100', 'order': 'sell', 'monitorstock': 'WHA', 'referorderno': '891474', 'stockpin': '44444444'}]
2019-09-07 03:29:53,453,453 DEBUG [packsel.py:451] Order params def order
2019-09-07 03:29:53,453,453 DEBUG [packsel.py:452] {'price': '4.74', 'volume': '100', 'order': 'sell', 'monitorstock': 'WHA', 'referorderno': '891474', 'stockpin': '44444444'}
2019-09-07 03:29:54,116,116 DEBUG [tkconsole.py:890] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-09-07 03:29:54,116,116 DEBUG [tkconsole.py:891] {'qrefresh': 'refreshtk', 'doupdatetk': []}
2019-09-07 03:29:54,287,287 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:29:54,965,965 DEBUG [packsel.py:603] Print tablerow before loop
2019-09-07 03:29:54,970,970 DEBUG [packsel.py:610]  	586266	03:29:53	WHA	S	4.74	100	0	0	0	Pending(S)
2019-09-07 03:29:54,981,981 DEBUG [packsel.py:610]  	891474	03:29:38	WHA	B	4.72	1000	0	0	0	Matched(M)
2019-09-07 03:29:54,987,987 INFO [packsel.py:618] Number rows of Table Track = 2
2019-09-07 03:29:54,987,987 DEBUG [packsel.py:638] raw data for mytable before update to database in def refreshbtn
2019-09-07 03:29:54,987,987 DEBUG [packsel.py:639] [['586266', '03:29:53', 'WHA', 'S', '4.74', '100', '0', '0', '0', 'Pending(S)'], ['891474', '03:29:38', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Matched(M)']]
2019-09-07 03:29:54,987,987 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:29:54,988,988 DEBUG [packsel_model.py:370] <QuerySet []>
2019-09-07 03:29:54,989,989 DEBUG [packsel_model.py:402] NO SQL Found Enter case checkorderno NOT existing and partial refresh
2019-09-07 03:29:55,059,59 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:29:55,060,60 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:29:55,061,61 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:29:55,061,61 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:29:55,063,63 DEBUG [packsel.py:649] Do partial update refresh with below data in var mytable
2019-09-07 03:29:55,063,63 DEBUG [packsel.py:650] [{'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]
2019-09-07 03:29:55,063,63 DEBUG [plugin_fivesteps.py:271] Print result_order for def putordermonitoring before process function
2019-09-07 03:29:55,063,63 DEBUG [plugin_fivesteps.py:272] [{'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]
2019-09-07 03:29:55,063,63 DEBUG [plugin_fivesteps.py:337] !!! Now Monitor self.matchedordermonitor and print result_order in def putordermonitoring
2019-09-07 03:29:55,063,63 DEBUG [plugin_fivesteps.py:338] [{'orderno': '586266', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '891474'}]
2019-09-07 03:29:55,063,63 DEBUG [plugin_fivesteps.py:651] @@@ ordertomonitor sell after def order def order
2019-09-07 03:29:55,063,63 DEBUG [plugin_fivesteps.py:652] [{'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]
2019-09-07 03:29:55,063,63 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:29:55,063,63 DEBUG [plugin_fivesteps.py:607] 900
2019-09-07 03:29:55,064,64 DEBUG [plugin_fivesteps.py:630] --- summary sell price runvolidx,sellprice,buyprice,allvol,strprice
2019-09-07 03:29:55,064,64 DEBUG [plugin_fivesteps.py:631] 1
2019-09-07 03:29:55,064,64 DEBUG [plugin_fivesteps.py:632] 4.76
2019-09-07 03:29:55,064,64 DEBUG [plugin_fivesteps.py:633] 4.72
2019-09-07 03:29:55,064,64 DEBUG [plugin_fivesteps.py:634] 800
2019-09-07 03:29:55,064,64 DEBUG [plugin_fivesteps.py:635] 4.76
2019-09-07 03:29:55,064,64 DEBUG [plugin_fivesteps.py:348] ===== def order =====
2019-09-07 03:29:55,064,64 DEBUG [plugin_fivesteps.py:349] {'ordermode': 'sellbybot', 'firstbuy': 'no'}
2019-09-07 03:29:55,064,64 DEBUG [plugin_fivesteps.py:350] auto
2019-09-07 03:29:55,064,64 DEBUG [plugin_fivesteps.py:425] !!! print of orderdetail case sellbybot firstbuy==no before for order idx in def order 
2019-09-07 03:29:55,064,64 DEBUG [plugin_fivesteps.py:426] [{'price': '4.76', 'volume': '100', 'order': 'sell', 'monitorstock': 'WHA', 'referorderno': '891474', 'stockpin': '44444444'}]
2019-09-07 03:29:55,064,64 DEBUG [packsel.py:451] Order params def order
2019-09-07 03:29:55,064,64 DEBUG [packsel.py:452] {'price': '4.76', 'volume': '100', 'order': 'sell', 'monitorstock': 'WHA', 'referorderno': '891474', 'stockpin': '44444444'}
2019-09-07 03:29:55,289,289 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:29:55,618,618 DEBUG [tkconsole.py:890] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-09-07 03:29:55,618,618 DEBUG [tkconsole.py:891] {'qrefresh': 'refreshtk', 'doupdatetk': [{'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'matchedtime': 'matchtime', 'referorderno': 'None'}]}
2019-09-07 03:29:55,870,870 DEBUG [tkconsole.py:890] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-09-07 03:29:55,870,870 DEBUG [tkconsole.py:891] {'qrefresh': 'refreshtk', 'doupdatetk': [{'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'matchedtime': '03:29:53', 'referorderno': 'None', 'matcheddate': '2019-09-07'}]}
2019-09-07 03:29:56,290,290 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:29:56,499,499 DEBUG [packsel.py:603] Print tablerow before loop
2019-09-07 03:29:56,504,504 DEBUG [packsel.py:610]  	681193	03:29:55	WHA	S	4.76	100	0	0	0	Pending(S)
2019-09-07 03:29:56,515,515 DEBUG [packsel.py:610]  	586266	03:29:53	WHA	S	4.74	100	0	0	0	Pending(S)
2019-09-07 03:29:56,531,531 DEBUG [packsel.py:610]  	891474	03:29:38	WHA	B	4.72	1000	0	0	0	Matched(M)
2019-09-07 03:29:56,542,542 INFO [packsel.py:618] Number rows of Table Track = 3
2019-09-07 03:29:56,542,542 DEBUG [packsel.py:638] raw data for mytable before update to database in def refreshbtn
2019-09-07 03:29:56,542,542 DEBUG [packsel.py:639] [['681193', '03:29:55', 'WHA', 'S', '4.76', '100', '0', '0', '0', 'Pending(S)'], ['586266', '03:29:53', 'WHA', 'S', '4.74', '100', '0', '0', '0', 'Pending(S)'], ['891474', '03:29:38', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Matched(M)']]
2019-09-07 03:29:56,542,542 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:29:56,543,543 DEBUG [packsel_model.py:370] <QuerySet []>
2019-09-07 03:29:56,544,544 DEBUG [packsel_model.py:402] NO SQL Found Enter case checkorderno NOT existing and partial refresh
2019-09-07 03:29:56,689,689 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:29:56,689,689 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3685, 'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:29:56,691,691 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:29:56,691,691 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3685, 'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:29:56,692,692 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:29:56,693,693 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:29:56,694,694 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:29:56,694,694 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:29:56,695,695 DEBUG [packsel.py:649] Do partial update refresh with below data in var mytable
2019-09-07 03:29:56,696,696 DEBUG [packsel.py:650] [{'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]
2019-09-07 03:29:56,696,696 DEBUG [plugin_fivesteps.py:271] Print result_order for def putordermonitoring before process function
2019-09-07 03:29:56,696,696 DEBUG [plugin_fivesteps.py:272] [{'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]
2019-09-07 03:29:56,696,696 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:29:56,696,696 DEBUG [plugin_fivesteps.py:292] 681193
2019-09-07 03:29:56,696,696 DEBUG [plugin_fivesteps.py:293] 586266
2019-09-07 03:29:56,696,696 DEBUG [plugin_fivesteps.py:337] !!! Now Monitor self.matchedordermonitor and print result_order in def putordermonitoring
2019-09-07 03:29:56,696,696 DEBUG [plugin_fivesteps.py:338] [{'orderno': '586266', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '681193', 'price': '4.76', 'status': 'Pending(S)', 'referorderno': '891474'}]
2019-09-07 03:29:56,696,696 DEBUG [plugin_fivesteps.py:651] @@@ ordertomonitor sell after def order def order
2019-09-07 03:29:56,696,696 DEBUG [plugin_fivesteps.py:652] [{'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]
2019-09-07 03:29:56,696,696 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:29:56,696,696 DEBUG [plugin_fivesteps.py:607] 800
2019-09-07 03:29:56,697,697 DEBUG [plugin_fivesteps.py:630] --- summary sell price runvolidx,sellprice,buyprice,allvol,strprice
2019-09-07 03:29:56,697,697 DEBUG [plugin_fivesteps.py:631] 2
2019-09-07 03:29:56,697,697 DEBUG [plugin_fivesteps.py:632] 4.78
2019-09-07 03:29:56,697,697 DEBUG [plugin_fivesteps.py:633] 4.72
2019-09-07 03:29:56,697,697 DEBUG [plugin_fivesteps.py:634] 700
2019-09-07 03:29:56,697,697 DEBUG [plugin_fivesteps.py:635] 4.78
2019-09-07 03:29:56,697,697 DEBUG [plugin_fivesteps.py:348] ===== def order =====
2019-09-07 03:29:56,697,697 DEBUG [plugin_fivesteps.py:349] {'ordermode': 'sellbybot', 'firstbuy': 'no'}
2019-09-07 03:29:56,697,697 DEBUG [plugin_fivesteps.py:350] auto
2019-09-07 03:29:56,697,697 DEBUG [plugin_fivesteps.py:425] !!! print of orderdetail case sellbybot firstbuy==no before for order idx in def order 
2019-09-07 03:29:56,697,697 DEBUG [plugin_fivesteps.py:426] [{'price': '4.78', 'volume': '100', 'order': 'sell', 'monitorstock': 'WHA', 'referorderno': '891474', 'stockpin': '44444444'}]
2019-09-07 03:29:56,697,697 DEBUG [packsel.py:451] Order params def order
2019-09-07 03:29:56,697,697 DEBUG [packsel.py:452] {'price': '4.78', 'volume': '100', 'order': 'sell', 'monitorstock': 'WHA', 'referorderno': '891474', 'stockpin': '44444444'}
2019-09-07 03:29:57,293,293 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:29:57,622,622 DEBUG [tkconsole.py:890] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-09-07 03:29:57,623,623 DEBUG [tkconsole.py:891] {'qrefresh': 'refreshtk', 'doupdatetk': [{'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]}
2019-09-07 03:29:57,623,623 DEBUG [tkconsole.py:914] print repeatidx case of price == 0
2019-09-07 03:29:57,623,623 DEBUG [tkconsole.py:915] 0
2019-09-07 03:29:58,200,200 DEBUG [packsel.py:603] Print tablerow before loop
2019-09-07 03:29:58,205,205 DEBUG [packsel.py:610]  	117286	03:29:57	WHA	S	4.78	100	0	0	0	Pending(S)
2019-09-07 03:29:58,218,218 DEBUG [packsel.py:610]  	681193	03:29:55	WHA	S	4.76	100	0	0	0	Pending(S)
2019-09-07 03:29:58,229,229 DEBUG [packsel.py:610]  	586266	03:29:53	WHA	S	4.74	100	0	0	0	Pending(S)
2019-09-07 03:29:58,240,240 DEBUG [packsel.py:610]  	891474	03:29:38	WHA	B	4.72	1000	0	0	0	Matched(M)
2019-09-07 03:29:58,247,247 INFO [packsel.py:618] Number rows of Table Track = 4
2019-09-07 03:29:58,247,247 DEBUG [packsel.py:638] raw data for mytable before update to database in def refreshbtn
2019-09-07 03:29:58,247,247 DEBUG [packsel.py:639] [['117286', '03:29:57', 'WHA', 'S', '4.78', '100', '0', '0', '0', 'Pending(S)'], ['681193', '03:29:55', 'WHA', 'S', '4.76', '100', '0', '0', '0', 'Pending(S)'], ['586266', '03:29:53', 'WHA', 'S', '4.74', '100', '0', '0', '0', 'Pending(S)'], ['891474', '03:29:38', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Matched(M)']]
2019-09-07 03:29:58,247,247 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:29:58,248,248 DEBUG [packsel_model.py:370] <QuerySet []>
2019-09-07 03:29:58,249,249 DEBUG [packsel_model.py:402] NO SQL Found Enter case checkorderno NOT existing and partial refresh
2019-09-07 03:29:58,288,288 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:29:58,288,288 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3686, 'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:29:58,290,290 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:29:58,290,290 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3686, 'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:29:58,291,291 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:29:58,291,291 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3685, 'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:29:58,293,293 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:29:58,293,293 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3685, 'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:29:58,294,294 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:29:58,294,294 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:29:58,295,295 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:29:58,296,296 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:29:58,296,296 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:29:58,297,297 DEBUG [packsel.py:649] Do partial update refresh with below data in var mytable
2019-09-07 03:29:58,297,297 DEBUG [packsel.py:650] [{'orderno': '117286', 'time': '03:29:57', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]
2019-09-07 03:29:58,297,297 DEBUG [plugin_fivesteps.py:271] Print result_order for def putordermonitoring before process function
2019-09-07 03:29:58,297,297 DEBUG [plugin_fivesteps.py:272] [{'orderno': '117286', 'time': '03:29:57', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]
2019-09-07 03:29:58,298,298 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:29:58,298,298 DEBUG [plugin_fivesteps.py:292] 117286
2019-09-07 03:29:58,298,298 DEBUG [plugin_fivesteps.py:293] 586266
2019-09-07 03:29:58,298,298 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:29:58,298,298 DEBUG [plugin_fivesteps.py:292] 117286
2019-09-07 03:29:58,298,298 DEBUG [plugin_fivesteps.py:293] 681193
2019-09-07 03:29:58,298,298 DEBUG [plugin_fivesteps.py:337] !!! Now Monitor self.matchedordermonitor and print result_order in def putordermonitoring
2019-09-07 03:29:58,298,298 DEBUG [plugin_fivesteps.py:338] [{'orderno': '586266', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '681193', 'price': '4.76', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '117286', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '891474'}]
2019-09-07 03:29:58,298,298 DEBUG [plugin_fivesteps.py:651] @@@ ordertomonitor sell after def order def order
2019-09-07 03:29:58,298,298 DEBUG [plugin_fivesteps.py:652] [{'orderno': '117286', 'time': '03:29:57', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]
2019-09-07 03:29:58,298,298 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:29:58,298,298 DEBUG [plugin_fivesteps.py:607] 700
2019-09-07 03:29:58,298,298 DEBUG [plugin_fivesteps.py:630] --- summary sell price runvolidx,sellprice,buyprice,allvol,strprice
2019-09-07 03:29:58,298,298 DEBUG [plugin_fivesteps.py:631] 3
2019-09-07 03:29:58,298,298 DEBUG [plugin_fivesteps.py:632] 4.8
2019-09-07 03:29:58,299,299 DEBUG [plugin_fivesteps.py:633] 4.72
2019-09-07 03:29:58,299,299 DEBUG [plugin_fivesteps.py:634] 600
2019-09-07 03:29:58,299,299 DEBUG [plugin_fivesteps.py:635] 4.80
2019-09-07 03:29:58,299,299 DEBUG [plugin_fivesteps.py:348] ===== def order =====
2019-09-07 03:29:58,299,299 DEBUG [plugin_fivesteps.py:349] {'ordermode': 'sellbybot', 'firstbuy': 'no'}
2019-09-07 03:29:58,299,299 DEBUG [plugin_fivesteps.py:350] auto
2019-09-07 03:29:58,299,299 DEBUG [plugin_fivesteps.py:425] !!! print of orderdetail case sellbybot firstbuy==no before for order idx in def order 
2019-09-07 03:29:58,299,299 DEBUG [plugin_fivesteps.py:426] [{'price': '4.80', 'volume': '100', 'order': 'sell', 'monitorstock': 'WHA', 'referorderno': '891474', 'stockpin': '44444444'}]
2019-09-07 03:29:58,299,299 DEBUG [packsel.py:451] Order params def order
2019-09-07 03:29:58,299,299 DEBUG [packsel.py:452] {'price': '4.80', 'volume': '100', 'order': 'sell', 'monitorstock': 'WHA', 'referorderno': '891474', 'stockpin': '44444444'}
2019-09-07 03:29:59,298,298 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:29:59,633,633 DEBUG [tkconsole.py:890] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-09-07 03:29:59,633,633 DEBUG [tkconsole.py:891] {'qrefresh': 'refreshtk', 'doupdatetk': [{'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]}
2019-09-07 03:29:59,633,633 DEBUG [tkconsole.py:914] print repeatidx case of price == 0
2019-09-07 03:29:59,633,633 DEBUG [tkconsole.py:915] 0
2019-09-07 03:29:59,701,701 DEBUG [packsel.py:603] Print tablerow before loop
2019-09-07 03:29:59,706,706 DEBUG [packsel.py:610]  	803176	03:29:58	WHA	S	4.80	100	0	0	0	Pending(S)
2019-09-07 03:29:59,716,716 DEBUG [packsel.py:610]  	117286	03:29:57	WHA	S	4.78	100	0	0	0	Pending(S)
2019-09-07 03:29:59,727,727 DEBUG [packsel.py:610]  	681193	03:29:55	WHA	S	4.76	100	0	0	0	Pending(S)
2019-09-07 03:29:59,736,736 DEBUG [packsel.py:610]  	586266	03:29:53	WHA	S	4.74	100	0	0	0	Pending(S)
2019-09-07 03:29:59,748,748 DEBUG [packsel.py:610]  	891474	03:29:38	WHA	B	4.72	1000	0	0	0	Matched(M)
2019-09-07 03:29:59,755,755 INFO [packsel.py:618] Number rows of Table Track = 5
2019-09-07 03:29:59,755,755 DEBUG [packsel.py:638] raw data for mytable before update to database in def refreshbtn
2019-09-07 03:29:59,755,755 DEBUG [packsel.py:639] [['803176', '03:29:58', 'WHA', 'S', '4.80', '100', '0', '0', '0', 'Pending(S)'], ['117286', '03:29:57', 'WHA', 'S', '4.78', '100', '0', '0', '0', 'Pending(S)'], ['681193', '03:29:55', 'WHA', 'S', '4.76', '100', '0', '0', '0', 'Pending(S)'], ['586266', '03:29:53', 'WHA', 'S', '4.74', '100', '0', '0', '0', 'Pending(S)'], ['891474', '03:29:38', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Matched(M)']]
2019-09-07 03:29:59,756,756 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:29:59,756,756 DEBUG [packsel_model.py:370] <QuerySet []>
2019-09-07 03:29:59,757,757 DEBUG [packsel_model.py:402] NO SQL Found Enter case checkorderno NOT existing and partial refresh
2019-09-07 03:29:59,836,836 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:29:59,836,836 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3687, 'orderno': '117286', 'time': '03:29:57', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:29:59,838,838 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:29:59,838,838 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3687, 'orderno': '117286', 'time': '03:29:57', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:29:59,839,839 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:29:59,839,839 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3686, 'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:29:59,841,841 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:29:59,841,841 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3686, 'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:29:59,842,842 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:29:59,843,843 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3685, 'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:29:59,844,844 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:29:59,845,845 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3685, 'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:29:59,846,846 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:29:59,846,846 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:29:59,848,848 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:29:59,848,848 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:29:59,849,849 DEBUG [packsel.py:649] Do partial update refresh with below data in var mytable
2019-09-07 03:29:59,849,849 DEBUG [packsel.py:650] [{'orderno': '803176', 'time': '03:29:58', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]
2019-09-07 03:29:59,849,849 DEBUG [plugin_fivesteps.py:271] Print result_order for def putordermonitoring before process function
2019-09-07 03:29:59,849,849 DEBUG [plugin_fivesteps.py:272] [{'orderno': '803176', 'time': '03:29:58', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]
2019-09-07 03:29:59,849,849 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:29:59,850,850 DEBUG [plugin_fivesteps.py:292] 803176
2019-09-07 03:29:59,850,850 DEBUG [plugin_fivesteps.py:293] 586266
2019-09-07 03:29:59,850,850 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:29:59,850,850 DEBUG [plugin_fivesteps.py:292] 803176
2019-09-07 03:29:59,850,850 DEBUG [plugin_fivesteps.py:293] 681193
2019-09-07 03:29:59,850,850 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:29:59,850,850 DEBUG [plugin_fivesteps.py:292] 803176
2019-09-07 03:29:59,850,850 DEBUG [plugin_fivesteps.py:293] 117286
2019-09-07 03:29:59,850,850 DEBUG [plugin_fivesteps.py:337] !!! Now Monitor self.matchedordermonitor and print result_order in def putordermonitoring
2019-09-07 03:29:59,850,850 DEBUG [plugin_fivesteps.py:338] [{'orderno': '586266', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '681193', 'price': '4.76', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '117286', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '803176', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '891474'}]
2019-09-07 03:29:59,850,850 DEBUG [plugin_fivesteps.py:651] @@@ ordertomonitor sell after def order def order
2019-09-07 03:29:59,850,850 DEBUG [plugin_fivesteps.py:652] [{'orderno': '803176', 'time': '03:29:58', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]
2019-09-07 03:29:59,850,850 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:29:59,850,850 DEBUG [plugin_fivesteps.py:607] 600
2019-09-07 03:29:59,850,850 DEBUG [plugin_fivesteps.py:630] --- summary sell price runvolidx,sellprice,buyprice,allvol,strprice
2019-09-07 03:29:59,851,851 DEBUG [plugin_fivesteps.py:631] 4
2019-09-07 03:29:59,851,851 DEBUG [plugin_fivesteps.py:632] 4.82
2019-09-07 03:29:59,851,851 DEBUG [plugin_fivesteps.py:633] 4.72
2019-09-07 03:29:59,851,851 DEBUG [plugin_fivesteps.py:634] 500
2019-09-07 03:29:59,851,851 DEBUG [plugin_fivesteps.py:635] 4.82
2019-09-07 03:29:59,851,851 DEBUG [plugin_fivesteps.py:348] ===== def order =====
2019-09-07 03:29:59,851,851 DEBUG [plugin_fivesteps.py:349] {'ordermode': 'sellbybot', 'firstbuy': 'no'}
2019-09-07 03:29:59,851,851 DEBUG [plugin_fivesteps.py:350] auto
2019-09-07 03:29:59,851,851 DEBUG [plugin_fivesteps.py:425] !!! print of orderdetail case sellbybot firstbuy==no before for order idx in def order 
2019-09-07 03:29:59,851,851 DEBUG [plugin_fivesteps.py:426] [{'price': '4.82', 'volume': '100', 'order': 'sell', 'monitorstock': 'WHA', 'referorderno': '891474', 'stockpin': '44444444'}]
2019-09-07 03:29:59,851,851 DEBUG [packsel.py:451] Order params def order
2019-09-07 03:29:59,851,851 DEBUG [packsel.py:452] {'price': '4.82', 'volume': '100', 'order': 'sell', 'monitorstock': 'WHA', 'referorderno': '891474', 'stockpin': '44444444'}
2019-09-07 03:30:00,300,300 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:30:01,271,271 DEBUG [packsel.py:603] Print tablerow before loop
2019-09-07 03:30:01,276,276 DEBUG [packsel.py:610]  	612350	03:30:00	WHA	S	4.82	100	0	0	0	Pending(S)
2019-09-07 03:30:01,288,288 DEBUG [packsel.py:610]  	803176	03:29:58	WHA	S	4.80	100	0	0	0	Pending(S)
2019-09-07 03:30:01,299,299 DEBUG [packsel.py:610]  	117286	03:29:57	WHA	S	4.78	100	0	0	0	Pending(S)
2019-09-07 03:30:01,302,302 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:30:01,309,309 DEBUG [packsel.py:610]  	681193	03:29:55	WHA	S	4.76	100	0	0	0	Pending(S)
2019-09-07 03:30:01,319,319 DEBUG [packsel.py:610]  	586266	03:29:53	WHA	S	4.74	100	0	0	0	Pending(S)
2019-09-07 03:30:01,330,330 DEBUG [packsel.py:610]  	891474	03:29:38	WHA	B	4.72	1000	0	0	0	Matched(M)
2019-09-07 03:30:01,336,336 INFO [packsel.py:618] Number rows of Table Track = 6
2019-09-07 03:30:01,336,336 DEBUG [packsel.py:638] raw data for mytable before update to database in def refreshbtn
2019-09-07 03:30:01,336,336 DEBUG [packsel.py:639] [['612350', '03:30:00', 'WHA', 'S', '4.82', '100', '0', '0', '0', 'Pending(S)'], ['803176', '03:29:58', 'WHA', 'S', '4.80', '100', '0', '0', '0', 'Pending(S)'], ['117286', '03:29:57', 'WHA', 'S', '4.78', '100', '0', '0', '0', 'Pending(S)'], ['681193', '03:29:55', 'WHA', 'S', '4.76', '100', '0', '0', '0', 'Pending(S)'], ['586266', '03:29:53', 'WHA', 'S', '4.74', '100', '0', '0', '0', 'Pending(S)'], ['891474', '03:29:38', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Matched(M)']]
2019-09-07 03:30:01,337,337 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:01,337,337 DEBUG [packsel_model.py:370] <QuerySet []>
2019-09-07 03:30:01,338,338 DEBUG [packsel_model.py:402] NO SQL Found Enter case checkorderno NOT existing and partial refresh
2019-09-07 03:30:01,377,377 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:01,378,378 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3688, 'orderno': '803176', 'time': '03:29:58', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:01,379,379 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:01,379,379 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3688, 'orderno': '803176', 'time': '03:29:58', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:01,381,381 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:01,381,381 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3687, 'orderno': '117286', 'time': '03:29:57', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:01,382,382 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:01,382,382 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3687, 'orderno': '117286', 'time': '03:29:57', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:01,384,384 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:01,384,384 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3686, 'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:01,385,385 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:01,385,385 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3686, 'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:01,387,387 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:01,387,387 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3685, 'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:01,388,388 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:01,388,388 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3685, 'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:01,390,390 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:01,390,390 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:30:01,391,391 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:01,392,392 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:30:01,393,393 DEBUG [packsel.py:649] Do partial update refresh with below data in var mytable
2019-09-07 03:30:01,393,393 DEBUG [packsel.py:650] [{'orderno': '612350', 'time': '03:30:00', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]
2019-09-07 03:30:01,393,393 DEBUG [plugin_fivesteps.py:271] Print result_order for def putordermonitoring before process function
2019-09-07 03:30:01,393,393 DEBUG [plugin_fivesteps.py:272] [{'orderno': '612350', 'time': '03:30:00', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]
2019-09-07 03:30:01,393,393 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:01,394,394 DEBUG [plugin_fivesteps.py:292] 612350
2019-09-07 03:30:01,394,394 DEBUG [plugin_fivesteps.py:293] 586266
2019-09-07 03:30:01,394,394 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:01,394,394 DEBUG [plugin_fivesteps.py:292] 612350
2019-09-07 03:30:01,394,394 DEBUG [plugin_fivesteps.py:293] 681193
2019-09-07 03:30:01,394,394 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:01,394,394 DEBUG [plugin_fivesteps.py:292] 612350
2019-09-07 03:30:01,394,394 DEBUG [plugin_fivesteps.py:293] 117286
2019-09-07 03:30:01,394,394 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:01,394,394 DEBUG [plugin_fivesteps.py:292] 612350
2019-09-07 03:30:01,394,394 DEBUG [plugin_fivesteps.py:293] 803176
2019-09-07 03:30:01,394,394 DEBUG [plugin_fivesteps.py:337] !!! Now Monitor self.matchedordermonitor and print result_order in def putordermonitoring
2019-09-07 03:30:01,394,394 DEBUG [plugin_fivesteps.py:338] [{'orderno': '586266', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '681193', 'price': '4.76', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '117286', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '803176', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '612350', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '891474'}]
2019-09-07 03:30:01,394,394 DEBUG [plugin_fivesteps.py:651] @@@ ordertomonitor sell after def order def order
2019-09-07 03:30:01,394,394 DEBUG [plugin_fivesteps.py:652] [{'orderno': '612350', 'time': '03:30:00', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]
2019-09-07 03:30:01,395,395 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:01,395,395 DEBUG [plugin_fivesteps.py:607] 500
2019-09-07 03:30:01,395,395 DEBUG [plugin_fivesteps.py:630] --- summary sell price runvolidx,sellprice,buyprice,allvol,strprice
2019-09-07 03:30:01,395,395 DEBUG [plugin_fivesteps.py:631] 5
2019-09-07 03:30:01,395,395 DEBUG [plugin_fivesteps.py:632] 4.84
2019-09-07 03:30:01,395,395 DEBUG [plugin_fivesteps.py:633] 4.72
2019-09-07 03:30:01,395,395 DEBUG [plugin_fivesteps.py:634] 400
2019-09-07 03:30:01,395,395 DEBUG [plugin_fivesteps.py:635] 4.84
2019-09-07 03:30:01,395,395 DEBUG [plugin_fivesteps.py:348] ===== def order =====
2019-09-07 03:30:01,395,395 DEBUG [plugin_fivesteps.py:349] {'ordermode': 'sellbybot', 'firstbuy': 'no'}
2019-09-07 03:30:01,395,395 DEBUG [plugin_fivesteps.py:350] auto
2019-09-07 03:30:01,395,395 DEBUG [plugin_fivesteps.py:425] !!! print of orderdetail case sellbybot firstbuy==no before for order idx in def order 
2019-09-07 03:30:01,396,396 DEBUG [plugin_fivesteps.py:426] [{'price': '4.84', 'volume': '100', 'order': 'sell', 'monitorstock': 'WHA', 'referorderno': '891474', 'stockpin': '44444444'}]
2019-09-07 03:30:01,396,396 DEBUG [packsel.py:451] Order params def order
2019-09-07 03:30:01,396,396 DEBUG [packsel.py:452] {'price': '4.84', 'volume': '100', 'order': 'sell', 'monitorstock': 'WHA', 'referorderno': '891474', 'stockpin': '44444444'}
2019-09-07 03:30:01,641,641 DEBUG [tkconsole.py:890] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-09-07 03:30:01,642,642 DEBUG [tkconsole.py:891] {'qrefresh': 'refreshtk', 'doupdatetk': [{'orderno': '117286', 'time': '03:29:57', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]}
2019-09-07 03:30:01,642,642 DEBUG [tkconsole.py:914] print repeatidx case of price == 0
2019-09-07 03:30:01,642,642 DEBUG [tkconsole.py:915] 0
2019-09-07 03:30:02,303,303 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:30:02,802,802 DEBUG [packsel.py:603] Print tablerow before loop
2019-09-07 03:30:02,807,807 DEBUG [packsel.py:610]  	470526	03:30:01	WHA	S	4.84	100	0	0	0	Pending(S)
2019-09-07 03:30:02,820,820 DEBUG [packsel.py:610]  	612350	03:30:00	WHA	S	4.82	100	0	0	0	Pending(S)
2019-09-07 03:30:02,831,831 DEBUG [packsel.py:610]  	803176	03:29:58	WHA	S	4.80	100	0	0	0	Pending(S)
2019-09-07 03:30:02,843,843 DEBUG [packsel.py:610]  	117286	03:29:57	WHA	S	4.78	100	0	0	0	Pending(S)
2019-09-07 03:30:02,855,855 DEBUG [packsel.py:610]  	681193	03:29:55	WHA	S	4.76	100	0	0	0	Pending(S)
2019-09-07 03:30:02,866,866 DEBUG [packsel.py:610]  	586266	03:29:53	WHA	S	4.74	100	0	0	0	Pending(S)
2019-09-07 03:30:02,876,876 DEBUG [packsel.py:610]  	891474	03:29:38	WHA	B	4.72	1000	0	0	0	Matched(M)
2019-09-07 03:30:02,882,882 INFO [packsel.py:618] Number rows of Table Track = 7
2019-09-07 03:30:02,882,882 DEBUG [packsel.py:638] raw data for mytable before update to database in def refreshbtn
2019-09-07 03:30:02,882,882 DEBUG [packsel.py:639] [['470526', '03:30:01', 'WHA', 'S', '4.84', '100', '0', '0', '0', 'Pending(S)'], ['612350', '03:30:00', 'WHA', 'S', '4.82', '100', '0', '0', '0', 'Pending(S)'], ['803176', '03:29:58', 'WHA', 'S', '4.80', '100', '0', '0', '0', 'Pending(S)'], ['117286', '03:29:57', 'WHA', 'S', '4.78', '100', '0', '0', '0', 'Pending(S)'], ['681193', '03:29:55', 'WHA', 'S', '4.76', '100', '0', '0', '0', 'Pending(S)'], ['586266', '03:29:53', 'WHA', 'S', '4.74', '100', '0', '0', '0', 'Pending(S)'], ['891474', '03:29:38', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Matched(M)']]
2019-09-07 03:30:02,882,882 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:02,883,883 DEBUG [packsel_model.py:370] <QuerySet []>
2019-09-07 03:30:02,884,884 DEBUG [packsel_model.py:402] NO SQL Found Enter case checkorderno NOT existing and partial refresh
2019-09-07 03:30:02,936,936 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:02,936,936 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3689, 'orderno': '612350', 'time': '03:30:00', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:02,938,938 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:02,938,938 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3689, 'orderno': '612350', 'time': '03:30:00', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:02,939,939 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:02,939,939 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3688, 'orderno': '803176', 'time': '03:29:58', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:02,941,941 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:02,941,941 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3688, 'orderno': '803176', 'time': '03:29:58', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:02,942,942 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:02,942,942 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3687, 'orderno': '117286', 'time': '03:29:57', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:02,944,944 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:02,944,944 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3687, 'orderno': '117286', 'time': '03:29:57', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:02,945,945 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:02,946,946 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3686, 'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:02,947,947 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:02,947,947 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3686, 'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:02,948,948 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:02,948,948 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3685, 'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:02,950,950 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:02,950,950 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3685, 'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:02,951,951 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:02,952,952 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:30:02,953,953 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:02,953,953 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:30:02,954,954 DEBUG [packsel.py:649] Do partial update refresh with below data in var mytable
2019-09-07 03:30:02,954,954 DEBUG [packsel.py:650] [{'orderno': '470526', 'time': '03:30:01', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]
2019-09-07 03:30:02,955,955 DEBUG [plugin_fivesteps.py:271] Print result_order for def putordermonitoring before process function
2019-09-07 03:30:02,955,955 DEBUG [plugin_fivesteps.py:272] [{'orderno': '470526', 'time': '03:30:01', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]
2019-09-07 03:30:02,955,955 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:02,955,955 DEBUG [plugin_fivesteps.py:292] 470526
2019-09-07 03:30:02,955,955 DEBUG [plugin_fivesteps.py:293] 586266
2019-09-07 03:30:02,955,955 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:02,955,955 DEBUG [plugin_fivesteps.py:292] 470526
2019-09-07 03:30:02,955,955 DEBUG [plugin_fivesteps.py:293] 681193
2019-09-07 03:30:02,955,955 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:02,955,955 DEBUG [plugin_fivesteps.py:292] 470526
2019-09-07 03:30:02,955,955 DEBUG [plugin_fivesteps.py:293] 117286
2019-09-07 03:30:02,955,955 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:02,955,955 DEBUG [plugin_fivesteps.py:292] 470526
2019-09-07 03:30:02,955,955 DEBUG [plugin_fivesteps.py:293] 803176
2019-09-07 03:30:02,955,955 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:02,955,955 DEBUG [plugin_fivesteps.py:292] 470526
2019-09-07 03:30:02,955,955 DEBUG [plugin_fivesteps.py:293] 612350
2019-09-07 03:30:02,955,955 DEBUG [plugin_fivesteps.py:337] !!! Now Monitor self.matchedordermonitor and print result_order in def putordermonitoring
2019-09-07 03:30:02,956,956 DEBUG [plugin_fivesteps.py:338] [{'orderno': '586266', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '681193', 'price': '4.76', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '117286', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '803176', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '612350', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '470526', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '891474'}]
2019-09-07 03:30:02,956,956 DEBUG [plugin_fivesteps.py:651] @@@ ordertomonitor sell after def order def order
2019-09-07 03:30:02,956,956 DEBUG [plugin_fivesteps.py:652] [{'orderno': '470526', 'time': '03:30:01', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]
2019-09-07 03:30:02,956,956 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:02,956,956 DEBUG [plugin_fivesteps.py:607] 400
2019-09-07 03:30:02,956,956 DEBUG [plugin_fivesteps.py:630] --- summary sell price runvolidx,sellprice,buyprice,allvol,strprice
2019-09-07 03:30:02,956,956 DEBUG [plugin_fivesteps.py:631] 6
2019-09-07 03:30:02,956,956 DEBUG [plugin_fivesteps.py:632] 4.86
2019-09-07 03:30:02,956,956 DEBUG [plugin_fivesteps.py:633] 4.72
2019-09-07 03:30:02,956,956 DEBUG [plugin_fivesteps.py:634] 300
2019-09-07 03:30:02,956,956 DEBUG [plugin_fivesteps.py:635] 4.86
2019-09-07 03:30:02,956,956 DEBUG [plugin_fivesteps.py:348] ===== def order =====
2019-09-07 03:30:02,956,956 DEBUG [plugin_fivesteps.py:349] {'ordermode': 'sellbybot', 'firstbuy': 'no'}
2019-09-07 03:30:02,956,956 DEBUG [plugin_fivesteps.py:350] auto
2019-09-07 03:30:02,957,957 DEBUG [plugin_fivesteps.py:425] !!! print of orderdetail case sellbybot firstbuy==no before for order idx in def order 
2019-09-07 03:30:02,957,957 DEBUG [plugin_fivesteps.py:426] [{'price': '4.86', 'volume': '100', 'order': 'sell', 'monitorstock': 'WHA', 'referorderno': '891474', 'stockpin': '44444444'}]
2019-09-07 03:30:02,957,957 DEBUG [packsel.py:451] Order params def order
2019-09-07 03:30:02,957,957 DEBUG [packsel.py:452] {'price': '4.86', 'volume': '100', 'order': 'sell', 'monitorstock': 'WHA', 'referorderno': '891474', 'stockpin': '44444444'}
2019-09-07 03:30:03,305,305 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:30:03,401,401 DEBUG [tkconsole.py:890] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-09-07 03:30:03,402,402 DEBUG [tkconsole.py:891] {'qrefresh': 'refreshtk', 'doupdatetk': [{'orderno': '803176', 'time': '03:29:58', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]}
2019-09-07 03:30:03,402,402 DEBUG [tkconsole.py:914] print repeatidx case of price == 0
2019-09-07 03:30:03,402,402 DEBUG [tkconsole.py:915] 0
2019-09-07 03:30:04,306,306 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:30:04,402,402 DEBUG [packsel.py:603] Print tablerow before loop
2019-09-07 03:30:04,407,407 DEBUG [packsel.py:610]  	487885	03:30:03	WHA	S	4.86	100	0	0	0	Pending(S)
2019-09-07 03:30:04,420,420 DEBUG [packsel.py:610]  	470526	03:30:01	WHA	S	4.84	100	0	0	0	Pending(S)
2019-09-07 03:30:04,431,431 DEBUG [packsel.py:610]  	612350	03:30:00	WHA	S	4.82	100	0	0	0	Pending(S)
2019-09-07 03:30:04,441,441 DEBUG [packsel.py:610]  	803176	03:29:58	WHA	S	4.80	100	0	0	0	Pending(S)
2019-09-07 03:30:04,453,453 DEBUG [packsel.py:610]  	117286	03:29:57	WHA	S	4.78	100	0	0	0	Pending(S)
2019-09-07 03:30:04,465,465 DEBUG [packsel.py:610]  	681193	03:29:55	WHA	S	4.76	100	0	0	0	Pending(S)
2019-09-07 03:30:04,476,476 DEBUG [packsel.py:610]  	586266	03:29:53	WHA	S	4.74	100	0	0	0	Pending(S)
2019-09-07 03:30:04,487,487 DEBUG [packsel.py:610]  	891474	03:29:38	WHA	B	4.72	1000	0	0	0	Matched(M)
2019-09-07 03:30:04,494,494 INFO [packsel.py:618] Number rows of Table Track = 8
2019-09-07 03:30:04,494,494 DEBUG [packsel.py:638] raw data for mytable before update to database in def refreshbtn
2019-09-07 03:30:04,494,494 DEBUG [packsel.py:639] [['487885', '03:30:03', 'WHA', 'S', '4.86', '100', '0', '0', '0', 'Pending(S)'], ['470526', '03:30:01', 'WHA', 'S', '4.84', '100', '0', '0', '0', 'Pending(S)'], ['612350', '03:30:00', 'WHA', 'S', '4.82', '100', '0', '0', '0', 'Pending(S)'], ['803176', '03:29:58', 'WHA', 'S', '4.80', '100', '0', '0', '0', 'Pending(S)'], ['117286', '03:29:57', 'WHA', 'S', '4.78', '100', '0', '0', '0', 'Pending(S)'], ['681193', '03:29:55', 'WHA', 'S', '4.76', '100', '0', '0', '0', 'Pending(S)'], ['586266', '03:29:53', 'WHA', 'S', '4.74', '100', '0', '0', '0', 'Pending(S)'], ['891474', '03:29:38', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Matched(M)']]
2019-09-07 03:30:04,494,494 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:04,495,495 DEBUG [packsel_model.py:370] <QuerySet []>
2019-09-07 03:30:04,496,496 DEBUG [packsel_model.py:402] NO SQL Found Enter case checkorderno NOT existing and partial refresh
2019-09-07 03:30:04,534,534 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:04,534,534 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3690, 'orderno': '470526', 'time': '03:30:01', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:04,536,536 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:04,537,537 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3690, 'orderno': '470526', 'time': '03:30:01', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:04,538,538 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:04,538,538 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3689, 'orderno': '612350', 'time': '03:30:00', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:04,540,540 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:04,540,540 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3689, 'orderno': '612350', 'time': '03:30:00', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:04,541,541 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:04,542,542 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3688, 'orderno': '803176', 'time': '03:29:58', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:04,543,543 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:04,543,543 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3688, 'orderno': '803176', 'time': '03:29:58', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:04,544,544 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:04,545,545 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3687, 'orderno': '117286', 'time': '03:29:57', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:04,546,546 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:04,546,546 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3687, 'orderno': '117286', 'time': '03:29:57', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:04,548,548 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:04,548,548 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3686, 'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:04,549,549 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:04,549,549 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3686, 'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:04,550,550 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:04,551,551 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3685, 'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:04,552,552 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:04,552,552 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3685, 'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:04,553,553 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:04,553,553 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:30:04,555,555 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:04,555,555 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:30:04,556,556 DEBUG [packsel.py:649] Do partial update refresh with below data in var mytable
2019-09-07 03:30:04,556,556 DEBUG [packsel.py:650] [{'orderno': '487885', 'time': '03:30:03', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]
2019-09-07 03:30:04,556,556 DEBUG [plugin_fivesteps.py:271] Print result_order for def putordermonitoring before process function
2019-09-07 03:30:04,556,556 DEBUG [plugin_fivesteps.py:272] [{'orderno': '487885', 'time': '03:30:03', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]
2019-09-07 03:30:04,557,557 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:04,557,557 DEBUG [plugin_fivesteps.py:292] 487885
2019-09-07 03:30:04,557,557 DEBUG [plugin_fivesteps.py:293] 586266
2019-09-07 03:30:04,557,557 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:04,557,557 DEBUG [plugin_fivesteps.py:292] 487885
2019-09-07 03:30:04,557,557 DEBUG [plugin_fivesteps.py:293] 681193
2019-09-07 03:30:04,557,557 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:04,557,557 DEBUG [plugin_fivesteps.py:292] 487885
2019-09-07 03:30:04,557,557 DEBUG [plugin_fivesteps.py:293] 117286
2019-09-07 03:30:04,557,557 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:04,557,557 DEBUG [plugin_fivesteps.py:292] 487885
2019-09-07 03:30:04,557,557 DEBUG [plugin_fivesteps.py:293] 803176
2019-09-07 03:30:04,557,557 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:04,557,557 DEBUG [plugin_fivesteps.py:292] 487885
2019-09-07 03:30:04,557,557 DEBUG [plugin_fivesteps.py:293] 612350
2019-09-07 03:30:04,557,557 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:04,557,557 DEBUG [plugin_fivesteps.py:292] 487885
2019-09-07 03:30:04,558,558 DEBUG [plugin_fivesteps.py:293] 470526
2019-09-07 03:30:04,558,558 DEBUG [plugin_fivesteps.py:337] !!! Now Monitor self.matchedordermonitor and print result_order in def putordermonitoring
2019-09-07 03:30:04,558,558 DEBUG [plugin_fivesteps.py:338] [{'orderno': '586266', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '681193', 'price': '4.76', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '117286', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '803176', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '612350', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '470526', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '487885', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '891474'}]
2019-09-07 03:30:04,558,558 DEBUG [plugin_fivesteps.py:651] @@@ ordertomonitor sell after def order def order
2019-09-07 03:30:04,558,558 DEBUG [plugin_fivesteps.py:652] [{'orderno': '487885', 'time': '03:30:03', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]
2019-09-07 03:30:04,558,558 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:04,558,558 DEBUG [plugin_fivesteps.py:607] 300
2019-09-07 03:30:04,558,558 DEBUG [plugin_fivesteps.py:630] --- summary sell price runvolidx,sellprice,buyprice,allvol,strprice
2019-09-07 03:30:04,558,558 DEBUG [plugin_fivesteps.py:631] 7
2019-09-07 03:30:04,558,558 DEBUG [plugin_fivesteps.py:632] 4.88
2019-09-07 03:30:04,558,558 DEBUG [plugin_fivesteps.py:633] 4.72
2019-09-07 03:30:04,558,558 DEBUG [plugin_fivesteps.py:634] 200
2019-09-07 03:30:04,558,558 DEBUG [plugin_fivesteps.py:635] 4.88
2019-09-07 03:30:04,558,558 DEBUG [plugin_fivesteps.py:348] ===== def order =====
2019-09-07 03:30:04,558,558 DEBUG [plugin_fivesteps.py:349] {'ordermode': 'sellbybot', 'firstbuy': 'no'}
2019-09-07 03:30:04,559,559 DEBUG [plugin_fivesteps.py:350] auto
2019-09-07 03:30:04,559,559 DEBUG [plugin_fivesteps.py:425] !!! print of orderdetail case sellbybot firstbuy==no before for order idx in def order 
2019-09-07 03:30:04,559,559 DEBUG [plugin_fivesteps.py:426] [{'price': '4.88', 'volume': '100', 'order': 'sell', 'monitorstock': 'WHA', 'referorderno': '891474', 'stockpin': '44444444'}]
2019-09-07 03:30:04,559,559 DEBUG [packsel.py:451] Order params def order
2019-09-07 03:30:04,559,559 DEBUG [packsel.py:452] {'price': '4.88', 'volume': '100', 'order': 'sell', 'monitorstock': 'WHA', 'referorderno': '891474', 'stockpin': '44444444'}
2019-09-07 03:30:05,308,308 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:30:05,908,908 DEBUG [tkconsole.py:890] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-09-07 03:30:05,909,909 DEBUG [tkconsole.py:891] {'qrefresh': 'refreshtk', 'doupdatetk': [{'orderno': '612350', 'time': '03:30:00', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]}
2019-09-07 03:30:05,909,909 DEBUG [tkconsole.py:914] print repeatidx case of price == 0
2019-09-07 03:30:05,909,909 DEBUG [tkconsole.py:915] 0
2019-09-07 03:30:06,069,69 DEBUG [packsel.py:603] Print tablerow before loop
2019-09-07 03:30:06,074,74 DEBUG [packsel.py:610]  	369288	03:30:04	WHA	S	4.88	100	0	0	0	Pending(S)
2019-09-07 03:30:06,085,85 DEBUG [packsel.py:610]  	487885	03:30:03	WHA	S	4.86	100	0	0	0	Pending(S)
2019-09-07 03:30:06,101,101 DEBUG [packsel.py:610]  	470526	03:30:01	WHA	S	4.84	100	0	0	0	Pending(S)
2019-09-07 03:30:06,119,119 DEBUG [packsel.py:610]  	612350	03:30:00	WHA	S	4.82	100	0	0	0	Pending(S)
2019-09-07 03:30:06,130,130 DEBUG [packsel.py:610]  	803176	03:29:58	WHA	S	4.80	100	0	0	0	Pending(S)
2019-09-07 03:30:06,140,140 DEBUG [packsel.py:610]  	117286	03:29:57	WHA	S	4.78	100	0	0	0	Pending(S)
2019-09-07 03:30:06,154,154 DEBUG [packsel.py:610]  	681193	03:29:55	WHA	S	4.76	100	0	0	0	Pending(S)
2019-09-07 03:30:06,164,164 DEBUG [packsel.py:610]  	586266	03:29:53	WHA	S	4.74	100	0	0	0	Pending(S)
2019-09-07 03:30:06,174,174 DEBUG [packsel.py:610]  	891474	03:29:38	WHA	B	4.72	1000	0	0	0	Matched(M)
2019-09-07 03:30:06,181,181 INFO [packsel.py:618] Number rows of Table Track = 9
2019-09-07 03:30:06,181,181 DEBUG [packsel.py:638] raw data for mytable before update to database in def refreshbtn
2019-09-07 03:30:06,181,181 DEBUG [packsel.py:639] [['369288', '03:30:04', 'WHA', 'S', '4.88', '100', '0', '0', '0', 'Pending(S)'], ['487885', '03:30:03', 'WHA', 'S', '4.86', '100', '0', '0', '0', 'Pending(S)'], ['470526', '03:30:01', 'WHA', 'S', '4.84', '100', '0', '0', '0', 'Pending(S)'], ['612350', '03:30:00', 'WHA', 'S', '4.82', '100', '0', '0', '0', 'Pending(S)'], ['803176', '03:29:58', 'WHA', 'S', '4.80', '100', '0', '0', '0', 'Pending(S)'], ['117286', '03:29:57', 'WHA', 'S', '4.78', '100', '0', '0', '0', 'Pending(S)'], ['681193', '03:29:55', 'WHA', 'S', '4.76', '100', '0', '0', '0', 'Pending(S)'], ['586266', '03:29:53', 'WHA', 'S', '4.74', '100', '0', '0', '0', 'Pending(S)'], ['891474', '03:29:38', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Matched(M)']]
2019-09-07 03:30:06,181,181 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:06,182,182 DEBUG [packsel_model.py:370] <QuerySet []>
2019-09-07 03:30:06,183,183 DEBUG [packsel_model.py:402] NO SQL Found Enter case checkorderno NOT existing and partial refresh
2019-09-07 03:30:06,214,214 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:06,215,215 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3691, 'orderno': '487885', 'time': '03:30:03', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:06,216,216 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:06,216,216 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3691, 'orderno': '487885', 'time': '03:30:03', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:06,218,218 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:06,218,218 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3690, 'orderno': '470526', 'time': '03:30:01', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:06,219,219 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:06,220,220 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3690, 'orderno': '470526', 'time': '03:30:01', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:06,221,221 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:06,221,221 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3689, 'orderno': '612350', 'time': '03:30:00', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:06,222,222 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:06,223,223 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3689, 'orderno': '612350', 'time': '03:30:00', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:06,224,224 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:06,224,224 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3688, 'orderno': '803176', 'time': '03:29:58', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:06,225,225 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:06,226,226 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3688, 'orderno': '803176', 'time': '03:29:58', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:06,227,227 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:06,227,227 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3687, 'orderno': '117286', 'time': '03:29:57', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:06,229,229 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:06,229,229 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3687, 'orderno': '117286', 'time': '03:29:57', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:06,230,230 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:06,230,230 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3686, 'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:06,232,232 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:06,232,232 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3686, 'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:06,233,233 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:06,233,233 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3685, 'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:06,235,235 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:06,235,235 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3685, 'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:06,236,236 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:06,236,236 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:30:06,238,238 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:06,238,238 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:30:06,239,239 DEBUG [packsel.py:649] Do partial update refresh with below data in var mytable
2019-09-07 03:30:06,239,239 DEBUG [packsel.py:650] [{'orderno': '369288', 'time': '03:30:04', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]
2019-09-07 03:30:06,239,239 DEBUG [plugin_fivesteps.py:271] Print result_order for def putordermonitoring before process function
2019-09-07 03:30:06,239,239 DEBUG [plugin_fivesteps.py:272] [{'orderno': '369288', 'time': '03:30:04', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]
2019-09-07 03:30:06,239,239 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:06,239,239 DEBUG [plugin_fivesteps.py:292] 369288
2019-09-07 03:30:06,239,239 DEBUG [plugin_fivesteps.py:293] 586266
2019-09-07 03:30:06,239,239 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:06,240,240 DEBUG [plugin_fivesteps.py:292] 369288
2019-09-07 03:30:06,240,240 DEBUG [plugin_fivesteps.py:293] 681193
2019-09-07 03:30:06,240,240 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:06,240,240 DEBUG [plugin_fivesteps.py:292] 369288
2019-09-07 03:30:06,240,240 DEBUG [plugin_fivesteps.py:293] 117286
2019-09-07 03:30:06,240,240 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:06,240,240 DEBUG [plugin_fivesteps.py:292] 369288
2019-09-07 03:30:06,240,240 DEBUG [plugin_fivesteps.py:293] 803176
2019-09-07 03:30:06,240,240 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:06,240,240 DEBUG [plugin_fivesteps.py:292] 369288
2019-09-07 03:30:06,240,240 DEBUG [plugin_fivesteps.py:293] 612350
2019-09-07 03:30:06,240,240 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:06,240,240 DEBUG [plugin_fivesteps.py:292] 369288
2019-09-07 03:30:06,240,240 DEBUG [plugin_fivesteps.py:293] 470526
2019-09-07 03:30:06,240,240 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:06,240,240 DEBUG [plugin_fivesteps.py:292] 369288
2019-09-07 03:30:06,240,240 DEBUG [plugin_fivesteps.py:293] 487885
2019-09-07 03:30:06,240,240 DEBUG [plugin_fivesteps.py:337] !!! Now Monitor self.matchedordermonitor and print result_order in def putordermonitoring
2019-09-07 03:30:06,240,240 DEBUG [plugin_fivesteps.py:338] [{'orderno': '586266', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '681193', 'price': '4.76', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '117286', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '803176', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '612350', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '470526', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '487885', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '369288', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '891474'}]
2019-09-07 03:30:06,241,241 DEBUG [plugin_fivesteps.py:651] @@@ ordertomonitor sell after def order def order
2019-09-07 03:30:06,241,241 DEBUG [plugin_fivesteps.py:652] [{'orderno': '369288', 'time': '03:30:04', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]
2019-09-07 03:30:06,241,241 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:06,241,241 DEBUG [plugin_fivesteps.py:607] 200
2019-09-07 03:30:06,241,241 DEBUG [plugin_fivesteps.py:630] --- summary sell price runvolidx,sellprice,buyprice,allvol,strprice
2019-09-07 03:30:06,241,241 DEBUG [plugin_fivesteps.py:631] 8
2019-09-07 03:30:06,241,241 DEBUG [plugin_fivesteps.py:632] 4.9
2019-09-07 03:30:06,241,241 DEBUG [plugin_fivesteps.py:633] 4.72
2019-09-07 03:30:06,241,241 DEBUG [plugin_fivesteps.py:634] 100
2019-09-07 03:30:06,241,241 DEBUG [plugin_fivesteps.py:635] 4.90
2019-09-07 03:30:06,241,241 DEBUG [plugin_fivesteps.py:348] ===== def order =====
2019-09-07 03:30:06,241,241 DEBUG [plugin_fivesteps.py:349] {'ordermode': 'sellbybot', 'firstbuy': 'no'}
2019-09-07 03:30:06,241,241 DEBUG [plugin_fivesteps.py:350] auto
2019-09-07 03:30:06,241,241 DEBUG [plugin_fivesteps.py:425] !!! print of orderdetail case sellbybot firstbuy==no before for order idx in def order 
2019-09-07 03:30:06,242,242 DEBUG [plugin_fivesteps.py:426] [{'price': '4.90', 'volume': '100', 'order': 'sell', 'monitorstock': 'WHA', 'referorderno': '891474', 'stockpin': '44444444'}]
2019-09-07 03:30:06,242,242 DEBUG [packsel.py:451] Order params def order
2019-09-07 03:30:06,242,242 DEBUG [packsel.py:452] {'price': '4.90', 'volume': '100', 'order': 'sell', 'monitorstock': 'WHA', 'referorderno': '891474', 'stockpin': '44444444'}
2019-09-07 03:30:06,311,311 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:30:07,313,313 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:30:07,641,641 DEBUG [packsel.py:603] Print tablerow before loop
2019-09-07 03:30:07,646,646 DEBUG [packsel.py:610]  	145624	03:30:06	WHA	S	4.90	100	0	0	0	Pending(S)
2019-09-07 03:30:07,657,657 DEBUG [packsel.py:610]  	369288	03:30:04	WHA	S	4.88	100	0	0	0	Pending(S)
2019-09-07 03:30:07,667,667 DEBUG [packsel.py:610]  	487885	03:30:03	WHA	S	4.86	100	0	0	0	Pending(S)
2019-09-07 03:30:07,667,667 DEBUG [tkconsole.py:890] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-09-07 03:30:07,667,667 DEBUG [tkconsole.py:891] {'qrefresh': 'refreshtk', 'doupdatetk': [{'orderno': '470526', 'time': '03:30:01', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]}
2019-09-07 03:30:07,667,667 DEBUG [tkconsole.py:914] print repeatidx case of price == 0
2019-09-07 03:30:07,667,667 DEBUG [tkconsole.py:915] 0
2019-09-07 03:30:07,678,678 DEBUG [packsel.py:610]  	470526	03:30:01	WHA	S	4.84	100	0	0	0	Pending(S)
2019-09-07 03:30:07,691,691 DEBUG [packsel.py:610]  	612350	03:30:00	WHA	S	4.82	100	0	0	0	Pending(S)
2019-09-07 03:30:07,702,702 DEBUG [packsel.py:610]  	803176	03:29:58	WHA	S	4.80	100	0	0	0	Pending(S)
2019-09-07 03:30:07,712,712 DEBUG [packsel.py:610]  	117286	03:29:57	WHA	S	4.78	100	0	0	0	Pending(S)
2019-09-07 03:30:07,723,723 DEBUG [packsel.py:610]  	681193	03:29:55	WHA	S	4.76	100	0	0	0	Pending(S)
2019-09-07 03:30:07,734,734 DEBUG [packsel.py:610]  	586266	03:29:53	WHA	S	4.74	100	0	0	0	Pending(S)
2019-09-07 03:30:07,745,745 DEBUG [packsel.py:610]  	891474	03:29:38	WHA	B	4.72	1000	0	0	0	Matched(M)
2019-09-07 03:30:07,752,752 INFO [packsel.py:618] Number rows of Table Track = 10
2019-09-07 03:30:07,752,752 DEBUG [packsel.py:638] raw data for mytable before update to database in def refreshbtn
2019-09-07 03:30:07,752,752 DEBUG [packsel.py:639] [['145624', '03:30:06', 'WHA', 'S', '4.90', '100', '0', '0', '0', 'Pending(S)'], ['369288', '03:30:04', 'WHA', 'S', '4.88', '100', '0', '0', '0', 'Pending(S)'], ['487885', '03:30:03', 'WHA', 'S', '4.86', '100', '0', '0', '0', 'Pending(S)'], ['470526', '03:30:01', 'WHA', 'S', '4.84', '100', '0', '0', '0', 'Pending(S)'], ['612350', '03:30:00', 'WHA', 'S', '4.82', '100', '0', '0', '0', 'Pending(S)'], ['803176', '03:29:58', 'WHA', 'S', '4.80', '100', '0', '0', '0', 'Pending(S)'], ['117286', '03:29:57', 'WHA', 'S', '4.78', '100', '0', '0', '0', 'Pending(S)'], ['681193', '03:29:55', 'WHA', 'S', '4.76', '100', '0', '0', '0', 'Pending(S)'], ['586266', '03:29:53', 'WHA', 'S', '4.74', '100', '0', '0', '0', 'Pending(S)'], ['891474', '03:29:38', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Matched(M)']]
2019-09-07 03:30:07,752,752 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:07,753,753 DEBUG [packsel_model.py:370] <QuerySet []>
2019-09-07 03:30:07,754,754 DEBUG [packsel_model.py:402] NO SQL Found Enter case checkorderno NOT existing and partial refresh
2019-09-07 03:30:07,923,923 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:07,923,923 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3692, 'orderno': '369288', 'time': '03:30:04', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:07,925,925 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:07,925,925 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3692, 'orderno': '369288', 'time': '03:30:04', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:07,926,926 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:07,927,927 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3691, 'orderno': '487885', 'time': '03:30:03', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:07,928,928 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:07,928,928 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3691, 'orderno': '487885', 'time': '03:30:03', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:07,930,930 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:07,930,930 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3690, 'orderno': '470526', 'time': '03:30:01', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:07,931,931 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:07,931,931 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3690, 'orderno': '470526', 'time': '03:30:01', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:07,932,932 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:07,933,933 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3689, 'orderno': '612350', 'time': '03:30:00', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:07,934,934 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:07,934,934 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3689, 'orderno': '612350', 'time': '03:30:00', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:07,936,936 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:07,936,936 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3688, 'orderno': '803176', 'time': '03:29:58', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:07,937,937 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:07,937,937 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3688, 'orderno': '803176', 'time': '03:29:58', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:07,939,939 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:07,939,939 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3687, 'orderno': '117286', 'time': '03:29:57', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:07,940,940 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:07,941,941 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3687, 'orderno': '117286', 'time': '03:29:57', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:07,942,942 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:07,942,942 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3686, 'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:07,944,944 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:07,944,944 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3686, 'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:07,945,945 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:07,945,945 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3685, 'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:07,947,947 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:07,947,947 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3685, 'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:07,949,949 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:07,949,949 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:30:07,951,951 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:07,951,951 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:30:07,953,953 DEBUG [packsel.py:649] Do partial update refresh with below data in var mytable
2019-09-07 03:30:07,953,953 DEBUG [packsel.py:650] [{'orderno': '145624', 'time': '03:30:06', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]
2019-09-07 03:30:07,953,953 DEBUG [plugin_fivesteps.py:271] Print result_order for def putordermonitoring before process function
2019-09-07 03:30:07,953,953 DEBUG [plugin_fivesteps.py:272] [{'orderno': '145624', 'time': '03:30:06', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]
2019-09-07 03:30:07,953,953 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:07,953,953 DEBUG [plugin_fivesteps.py:292] 145624
2019-09-07 03:30:07,953,953 DEBUG [plugin_fivesteps.py:293] 586266
2019-09-07 03:30:07,953,953 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:07,954,954 DEBUG [plugin_fivesteps.py:292] 145624
2019-09-07 03:30:07,954,954 DEBUG [plugin_fivesteps.py:293] 681193
2019-09-07 03:30:07,954,954 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:07,954,954 DEBUG [plugin_fivesteps.py:292] 145624
2019-09-07 03:30:07,954,954 DEBUG [plugin_fivesteps.py:293] 117286
2019-09-07 03:30:07,954,954 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:07,954,954 DEBUG [plugin_fivesteps.py:292] 145624
2019-09-07 03:30:07,954,954 DEBUG [plugin_fivesteps.py:293] 803176
2019-09-07 03:30:07,954,954 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:07,954,954 DEBUG [plugin_fivesteps.py:292] 145624
2019-09-07 03:30:07,954,954 DEBUG [plugin_fivesteps.py:293] 612350
2019-09-07 03:30:07,954,954 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:07,954,954 DEBUG [plugin_fivesteps.py:292] 145624
2019-09-07 03:30:07,954,954 DEBUG [plugin_fivesteps.py:293] 470526
2019-09-07 03:30:07,954,954 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:07,954,954 DEBUG [plugin_fivesteps.py:292] 145624
2019-09-07 03:30:07,954,954 DEBUG [plugin_fivesteps.py:293] 487885
2019-09-07 03:30:07,954,954 DEBUG [plugin_fivesteps.py:291] ---Order No of linetable and matchcheck in def putordermonitoring
2019-09-07 03:30:07,954,954 DEBUG [plugin_fivesteps.py:292] 145624
2019-09-07 03:30:07,954,954 DEBUG [plugin_fivesteps.py:293] 369288
2019-09-07 03:30:07,955,955 DEBUG [plugin_fivesteps.py:337] !!! Now Monitor self.matchedordermonitor and print result_order in def putordermonitoring
2019-09-07 03:30:07,955,955 DEBUG [plugin_fivesteps.py:338] [{'orderno': '586266', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '681193', 'price': '4.76', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '117286', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '803176', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '612350', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '470526', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '487885', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '369288', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '145624', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '891474'}]
2019-09-07 03:30:07,955,955 DEBUG [plugin_fivesteps.py:651] @@@ ordertomonitor sell after def order def order
2019-09-07 03:30:07,955,955 DEBUG [plugin_fivesteps.py:652] [{'orderno': '145624', 'time': '03:30:06', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]
2019-09-07 03:30:07,955,955 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,955,955 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,955,955 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,955,955 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,955,955 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,955,955 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,955,955 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,955,955 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,955,955 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,955,955 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,955,955 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,956,956 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,956,956 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,956,956 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,956,956 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,956,956 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,956,956 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,956,956 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,956,956 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,956,956 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,956,956 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,956,956 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,956,956 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,956,956 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,956,956 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,956,956 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,956,956 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,956,956 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,956,956 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,956,956 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,956,956 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,957,957 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,957,957 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,957,957 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,957,957 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,957,957 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,957,957 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,957,957 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,957,957 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,957,957 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,957,957 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,957,957 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,957,957 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,957,957 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,957,957 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,957,957 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,957,957 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,957,957 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,957,957 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,957,957 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,957,957 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,958,958 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,958,958 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,958,958 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,958,958 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,958,958 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,958,958 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,958,958 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,958,958 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,958,958 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,958,958 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,958,958 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,958,958 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,958,958 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,958,958 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,958,958 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,958,958 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,958,958 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,958,958 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,958,958 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,958,958 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,958,958 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,959,959 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,959,959 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,959,959 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,959,959 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,959,959 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,959,959 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,959,959 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,959,959 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,959,959 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,959,959 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,959,959 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,959,959 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,959,959 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,959,959 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,959,959 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,959,959 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,959,959 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,959,959 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,959,959 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,959,959 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,959,959 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,960,960 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,960,960 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,960,960 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,960,960 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,960,960 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,960,960 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,960,960 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,960,960 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,960,960 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,960,960 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,960,960 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,960,960 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,960,960 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,960,960 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,960,960 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,960,960 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,960,960 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,960,960 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,960,960 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,960,960 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,961,961 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,961,961 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,961,961 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,961,961 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,961,961 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,961,961 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,961,961 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,961,961 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,961,961 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,961,961 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,961,961 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,961,961 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,961,961 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,961,961 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,961,961 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,962,962 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,962,962 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,962,962 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,962,962 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,962,962 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,962,962 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,962,962 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,962,962 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,962,962 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,962,962 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,962,962 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,963,963 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,963,963 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,963,963 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,963,963 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,963,963 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,963,963 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,963,963 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,963,963 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,963,963 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,963,963 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,963,963 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,964,964 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,964,964 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,964,964 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,964,964 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,964,964 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,964,964 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,964,964 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,964,964 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,964,964 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,964,964 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,964,964 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,964,964 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,965,965 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,965,965 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,965,965 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,965,965 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,965,965 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,965,965 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,965,965 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,965,965 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,965,965 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,965,965 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,965,965 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,966,966 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,966,966 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,966,966 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,966,966 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,966,966 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,966,966 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,966,966 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,966,966 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,966,966 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,966,966 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,966,966 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,967,967 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,967,967 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,967,967 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,967,967 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,967,967 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,967,967 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,967,967 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,967,967 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,967,967 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,967,967 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,967,967 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,967,967 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,968,968 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,968,968 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,968,968 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,968,968 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,968,968 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,968,968 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,968,968 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,968,968 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,968,968 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,968,968 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,968,968 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,969,969 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,969,969 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,969,969 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,969,969 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,969,969 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,969,969 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,969,969 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,969,969 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,969,969 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,969,969 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,969,969 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,970,970 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,970,970 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,970,970 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,970,970 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,970,970 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,970,970 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,970,970 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,970,970 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,970,970 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,970,970 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,970,970 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,970,970 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,971,971 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,971,971 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,971,971 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,971,971 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,971,971 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,971,971 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,971,971 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,971,971 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,971,971 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,971,971 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,971,971 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,972,972 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,972,972 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,972,972 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,972,972 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,972,972 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,972,972 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,972,972 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,972,972 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,972,972 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,972,972 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,972,972 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,972,972 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,973,973 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,973,973 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,973,973 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,973,973 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,973,973 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,973,973 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,973,973 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,973,973 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,973,973 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,973,973 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,973,973 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,973,973 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,973,973 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,974,974 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,974,974 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,974,974 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,974,974 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,974,974 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,974,974 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:07,974,974 DEBUG [plugin_fivesteps.py:606] !!! Loop to print allvol volume in def checkprocess2matchstatus
2019-09-07 03:30:07,974,974 DEBUG [plugin_fivesteps.py:607] 100
2019-09-07 03:30:08,314,314 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:30:09,204,204 DEBUG [packsel.py:603] Print tablerow before loop
2019-09-07 03:30:09,209,209 DEBUG [packsel.py:610]  	145624	03:30:06	WHA	S	4.90	100	0	0	0	Pending(S)
2019-09-07 03:30:09,221,221 DEBUG [packsel.py:610]  	369288	03:30:04	WHA	S	4.88	100	0	0	0	Pending(S)
2019-09-07 03:30:09,231,231 DEBUG [packsel.py:610]  	487885	03:30:03	WHA	S	4.86	100	0	0	0	Pending(S)
2019-09-07 03:30:09,241,241 DEBUG [packsel.py:610]  	470526	03:30:01	WHA	S	4.84	100	0	0	0	Pending(S)
2019-09-07 03:30:09,252,252 DEBUG [packsel.py:610]  	612350	03:30:00	WHA	S	4.82	100	0	0	0	Pending(S)
2019-09-07 03:30:09,263,263 DEBUG [packsel.py:610]  	803176	03:29:58	WHA	S	4.80	100	0	0	0	Pending(S)
2019-09-07 03:30:09,273,273 DEBUG [packsel.py:610]  	117286	03:29:57	WHA	S	4.78	100	0	0	0	Pending(S)
2019-09-07 03:30:09,285,285 DEBUG [packsel.py:610]  	681193	03:29:55	WHA	S	4.76	100	0	0	0	Pending(S)
2019-09-07 03:30:09,296,296 DEBUG [packsel.py:610]  	586266	03:29:53	WHA	S	4.74	100	0	0	0	Pending(S)
2019-09-07 03:30:09,307,307 DEBUG [packsel.py:610]  	891474	03:29:38	WHA	B	4.72	1000	0	0	0	Matched(M)
2019-09-07 03:30:09,313,313 INFO [packsel.py:618] Number rows of Table Track = 10
2019-09-07 03:30:09,313,313 DEBUG [packsel.py:638] raw data for mytable before update to database in def refreshbtn
2019-09-07 03:30:09,314,314 DEBUG [packsel.py:639] [['145624', '03:30:06', 'WHA', 'S', '4.90', '100', '0', '0', '0', 'Pending(S)'], ['369288', '03:30:04', 'WHA', 'S', '4.88', '100', '0', '0', '0', 'Pending(S)'], ['487885', '03:30:03', 'WHA', 'S', '4.86', '100', '0', '0', '0', 'Pending(S)'], ['470526', '03:30:01', 'WHA', 'S', '4.84', '100', '0', '0', '0', 'Pending(S)'], ['612350', '03:30:00', 'WHA', 'S', '4.82', '100', '0', '0', '0', 'Pending(S)'], ['803176', '03:29:58', 'WHA', 'S', '4.80', '100', '0', '0', '0', 'Pending(S)'], ['117286', '03:29:57', 'WHA', 'S', '4.78', '100', '0', '0', '0', 'Pending(S)'], ['681193', '03:29:55', 'WHA', 'S', '4.76', '100', '0', '0', '0', 'Pending(S)'], ['586266', '03:29:53', 'WHA', 'S', '4.74', '100', '0', '0', '0', 'Pending(S)'], ['891474', '03:29:38', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Matched(M)']]
2019-09-07 03:30:09,314,314 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:09,314,314 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3693, 'orderno': '145624', 'time': '03:30:06', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:09,316,316 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:09,316,316 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3693, 'orderno': '145624', 'time': '03:30:06', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:09,316,316 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:30:09,317,317 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:09,317,317 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3692, 'orderno': '369288', 'time': '03:30:04', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:09,319,319 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:09,319,319 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3692, 'orderno': '369288', 'time': '03:30:04', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:09,320,320 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:09,320,320 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3691, 'orderno': '487885', 'time': '03:30:03', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:09,322,322 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:09,322,322 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3691, 'orderno': '487885', 'time': '03:30:03', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:09,323,323 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:09,323,323 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3690, 'orderno': '470526', 'time': '03:30:01', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:09,325,325 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:09,325,325 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3690, 'orderno': '470526', 'time': '03:30:01', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:09,327,327 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:09,327,327 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3689, 'orderno': '612350', 'time': '03:30:00', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:09,328,328 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:09,329,329 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3689, 'orderno': '612350', 'time': '03:30:00', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:09,330,330 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:09,330,330 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3688, 'orderno': '803176', 'time': '03:29:58', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:09,332,332 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:09,332,332 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3688, 'orderno': '803176', 'time': '03:29:58', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:09,333,333 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:09,333,333 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3687, 'orderno': '117286', 'time': '03:29:57', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:09,335,335 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:09,335,335 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3687, 'orderno': '117286', 'time': '03:29:57', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:09,336,336 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:09,336,336 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3686, 'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:09,337,337 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:09,337,337 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3686, 'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:09,339,339 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:09,339,339 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3685, 'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:09,340,340 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:09,340,340 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3685, 'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:09,341,341 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:09,342,342 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:30:09,343,343 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:09,343,343 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:30:09,344,344 DEBUG [packsel.py:649] Do partial update refresh with below data in var mytable
2019-09-07 03:30:09,345,345 DEBUG [packsel.py:650] []
2019-09-07 03:30:09,345,345 DEBUG [plugin_fivesteps.py:454] print price_change from checkprocess2order to order next plugin_fivesteps.py line 239
2019-09-07 03:30:09,345,345 DEBUG [plugin_fivesteps.py:455] 4.62
2019-09-07 03:30:09,345,345 DEBUG [plugin_fivesteps.py:460] Print rt_table this value should be empty for first time buy
2019-09-07 03:30:09,345,345 DEBUG [plugin_fivesteps.py:461] []
2019-09-07 03:30:09,345,345 DEBUG [plugin_fivesteps.py:463] Print configval from def checkprocess2order before fist buy order
2019-09-07 03:30:09,345,345 DEBUG [plugin_fivesteps.py:464] {'planname': <tkinter.StringVar object at 0x03C526B0>, 'rangeselect': <tkinter.StringVar object at 0x03C529D0>, 'monitorstock': <tkinter.StringVar object at 0x03C52B10>, 'initinvest': <tkinter.StringVar object at 0x03C52BB0>, 'volumestep': <tkinter.StringVar object at 0x03C52B70>, 'profitstep': <tkinter.StringVar object at 0x03C526D0>, 'topvaluebuy': <tkinter.StringVar object at 0x03C52710>, 'startvaluebuy': <tkinter.StringVar object at 0x04FE3FD0>, 'stopvaluebuy': <tkinter.StringVar object at 0x04FE3E70>, 'floorvaluebuy': <tkinter.StringVar object at 0x04FEC5D0>, 'firstbuyflag': <tkinter.StringVar object at 0x04FEC650>, 'pluginfile': <tkinter.StringVar object at 0x04FEC250>, 'currentuseId': <tkinter.StringVar object at 0x04FEC1B0>, 'floorvaluerange': <tkinter.StringVar object at 0x04FEC0F0>, 'topvaluerange': <tkinter.StringVar object at 0x04FEC530>, 'commonvaluestep': <tkinter.StringVar object at 0x04FEC110>, 'runningmode': <tkinter.StringVar object at 0x04FEC7D0>, 'totalcostbuy': <tkinter.StringVar object at 0x04FEC690>, 'totalvolumebuy': <tkinter.StringVar object at 0x04FEC770>, 'stockpin': <tkinter.StringVar object at 0x04FEC6D0>, 'remaininvest': <tkinter.StringVar object at 0x04FEC910>}
2019-09-07 03:30:09,349,349 DEBUG [packsel.py:341] *** result from value of resultvaluemonitor def monitoring
2019-09-07 03:30:09,349,349 DEBUG [packsel.py:342] [{'orderno': '586266', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '681193', 'price': '4.76', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '117286', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '803176', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '612350', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '470526', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '487885', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '369288', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '145624', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '891474'}]
2019-09-07 03:30:09,349,349 DEBUG [packsel.py:366] Qrefresh is not empty
2019-09-07 03:30:09,349,349 DEBUG [packsel.py:367] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-09-07 03:30:09,424,424 DEBUG [tkconsole.py:890] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-09-07 03:30:09,424,424 DEBUG [tkconsole.py:891] {'qrefresh': 'refreshtk', 'doupdatetk': [{'orderno': '487885', 'time': '03:30:03', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]}
2019-09-07 03:30:09,425,425 DEBUG [tkconsole.py:914] print repeatidx case of price == 0
2019-09-07 03:30:09,425,425 DEBUG [tkconsole.py:915] 0
2019-09-07 03:30:10,471,471 DEBUG [packsel.py:603] Print tablerow before loop
2019-09-07 03:30:10,476,476 DEBUG [packsel.py:610]  	145624	03:30:06	WHA	S	4.90	100	0	0	0	Pending(S)
2019-09-07 03:30:10,491,491 DEBUG [packsel.py:610]  	369288	03:30:04	WHA	S	4.88	100	0	0	0	Pending(S)
2019-09-07 03:30:10,503,503 DEBUG [packsel.py:610]  	487885	03:30:03	WHA	S	4.86	100	0	0	0	Pending(S)
2019-09-07 03:30:10,516,516 DEBUG [packsel.py:610]  	470526	03:30:01	WHA	S	4.84	100	0	0	0	Pending(S)
2019-09-07 03:30:10,518,518 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:30:10,527,527 DEBUG [packsel.py:610]  	612350	03:30:00	WHA	S	4.82	100	0	0	0	Pending(S)
2019-09-07 03:30:10,538,538 DEBUG [packsel.py:610]  	803176	03:29:58	WHA	S	4.80	100	0	0	0	Pending(S)
2019-09-07 03:30:10,549,549 DEBUG [packsel.py:610]  	117286	03:29:57	WHA	S	4.78	100	0	0	0	Pending(S)
2019-09-07 03:30:10,559,559 DEBUG [packsel.py:610]  	681193	03:29:55	WHA	S	4.76	100	0	0	0	Pending(S)
2019-09-07 03:30:10,570,570 DEBUG [packsel.py:610]  	586266	03:29:53	WHA	S	4.74	100	0	0	0	Pending(S)
2019-09-07 03:30:10,581,581 DEBUG [packsel.py:610]  	891474	03:29:38	WHA	B	4.72	1000	0	0	0	Matched(M)
2019-09-07 03:30:10,588,588 INFO [packsel.py:618] Number rows of Table Track = 10
2019-09-07 03:30:10,588,588 DEBUG [packsel.py:638] raw data for mytable before update to database in def refreshbtn
2019-09-07 03:30:10,588,588 DEBUG [packsel.py:639] [['145624', '03:30:06', 'WHA', 'S', '4.90', '100', '0', '0', '0', 'Pending(S)'], ['369288', '03:30:04', 'WHA', 'S', '4.88', '100', '0', '0', '0', 'Pending(S)'], ['487885', '03:30:03', 'WHA', 'S', '4.86', '100', '0', '0', '0', 'Pending(S)'], ['470526', '03:30:01', 'WHA', 'S', '4.84', '100', '0', '0', '0', 'Pending(S)'], ['612350', '03:30:00', 'WHA', 'S', '4.82', '100', '0', '0', '0', 'Pending(S)'], ['803176', '03:29:58', 'WHA', 'S', '4.80', '100', '0', '0', '0', 'Pending(S)'], ['117286', '03:29:57', 'WHA', 'S', '4.78', '100', '0', '0', '0', 'Pending(S)'], ['681193', '03:29:55', 'WHA', 'S', '4.76', '100', '0', '0', '0', 'Pending(S)'], ['586266', '03:29:53', 'WHA', 'S', '4.74', '100', '0', '0', '0', 'Pending(S)'], ['891474', '03:29:38', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Matched(M)']]
2019-09-07 03:30:10,589,589 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:10,589,589 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3693, 'orderno': '145624', 'time': '03:30:06', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:10,590,590 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:10,590,590 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3693, 'orderno': '145624', 'time': '03:30:06', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:10,592,592 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:10,592,592 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3692, 'orderno': '369288', 'time': '03:30:04', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:10,593,593 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:10,593,593 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3692, 'orderno': '369288', 'time': '03:30:04', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:10,594,594 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:10,595,595 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3691, 'orderno': '487885', 'time': '03:30:03', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:10,596,596 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:10,596,596 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3691, 'orderno': '487885', 'time': '03:30:03', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:10,598,598 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:10,598,598 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3690, 'orderno': '470526', 'time': '03:30:01', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:10,599,599 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:10,600,600 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3690, 'orderno': '470526', 'time': '03:30:01', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:10,601,601 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:10,601,601 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3689, 'orderno': '612350', 'time': '03:30:00', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:10,603,603 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:10,603,603 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3689, 'orderno': '612350', 'time': '03:30:00', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:10,604,604 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:10,604,604 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3688, 'orderno': '803176', 'time': '03:29:58', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:10,606,606 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:10,606,606 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3688, 'orderno': '803176', 'time': '03:29:58', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:10,607,607 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:10,607,607 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3687, 'orderno': '117286', 'time': '03:29:57', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:10,609,609 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:10,609,609 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3687, 'orderno': '117286', 'time': '03:29:57', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:10,610,610 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:10,610,610 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3686, 'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:10,611,611 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:10,611,611 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3686, 'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:10,613,613 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:10,613,613 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3685, 'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:10,614,614 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:10,615,615 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3685, 'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:10,616,616 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:10,616,616 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:30:10,617,617 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:10,618,618 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:30:10,619,619 DEBUG [packsel.py:649] Do partial update refresh with below data in var mytable
2019-09-07 03:30:10,619,619 DEBUG [packsel.py:650] []
2019-09-07 03:30:10,619,619 DEBUG [plugin_fivesteps.py:504] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-09-07 03:30:10,619,619 DEBUG [plugin_fivesteps.py:505] []
2019-09-07 03:30:10,619,619 DEBUG [plugin_fivesteps.py:506] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-09-07 03:30:10,619,619 DEBUG [plugin_fivesteps.py:507] [{'orderno': '586266', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '681193', 'price': '4.76', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '117286', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '803176', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '612350', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '470526', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '487885', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '369288', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '145624', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '891474'}]
2019-09-07 03:30:11,433,433 DEBUG [tkconsole.py:890] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-09-07 03:30:11,433,433 DEBUG [tkconsole.py:891] {'qrefresh': 'refreshtk', 'doupdatetk': [{'orderno': '369288', 'time': '03:30:04', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]}
2019-09-07 03:30:11,433,433 DEBUG [tkconsole.py:914] print repeatidx case of price == 0
2019-09-07 03:30:11,433,433 DEBUG [tkconsole.py:915] 0
2019-09-07 03:30:11,520,520 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:30:11,938,938 DEBUG [packsel.py:603] Print tablerow before loop
2019-09-07 03:30:11,943,943 DEBUG [packsel.py:610]  	145624	03:30:06	WHA	S	4.90	100	0	0	0	Pending(S)
2019-09-07 03:30:11,956,956 DEBUG [packsel.py:610]  	369288	03:30:04	WHA	S	4.88	100	0	0	0	Pending(S)
2019-09-07 03:30:11,970,970 DEBUG [packsel.py:610]  	487885	03:30:03	WHA	S	4.86	100	0	0	0	Pending(S)
2019-09-07 03:30:11,982,982 DEBUG [packsel.py:610]  	470526	03:30:01	WHA	S	4.84	100	0	0	0	Pending(S)
2019-09-07 03:30:11,994,994 DEBUG [packsel.py:610]  	612350	03:30:00	WHA	S	4.82	100	0	0	0	Pending(S)
2019-09-07 03:30:12,007,7 DEBUG [packsel.py:610]  	803176	03:29:58	WHA	S	4.80	100	0	0	0	Pending(S)
2019-09-07 03:30:12,020,20 DEBUG [packsel.py:610]  	117286	03:29:57	WHA	S	4.78	100	0	0	0	Pending(S)
2019-09-07 03:30:12,036,36 DEBUG [packsel.py:610]  	681193	03:29:55	WHA	S	4.76	100	0	0	0	Pending(S)
2019-09-07 03:30:12,051,51 DEBUG [packsel.py:610]  	586266	03:29:53	WHA	S	4.74	100	0	0	0	Pending(S)
2019-09-07 03:30:12,064,64 DEBUG [packsel.py:610]  	891474	03:29:38	WHA	B	4.72	1000	0	0	0	Matched(M)
2019-09-07 03:30:12,072,72 INFO [packsel.py:618] Number rows of Table Track = 10
2019-09-07 03:30:12,072,72 DEBUG [packsel.py:638] raw data for mytable before update to database in def refreshbtn
2019-09-07 03:30:12,072,72 DEBUG [packsel.py:639] [['145624', '03:30:06', 'WHA', 'S', '4.90', '100', '0', '0', '0', 'Pending(S)'], ['369288', '03:30:04', 'WHA', 'S', '4.88', '100', '0', '0', '0', 'Pending(S)'], ['487885', '03:30:03', 'WHA', 'S', '4.86', '100', '0', '0', '0', 'Pending(S)'], ['470526', '03:30:01', 'WHA', 'S', '4.84', '100', '0', '0', '0', 'Pending(S)'], ['612350', '03:30:00', 'WHA', 'S', '4.82', '100', '0', '0', '0', 'Pending(S)'], ['803176', '03:29:58', 'WHA', 'S', '4.80', '100', '0', '0', '0', 'Pending(S)'], ['117286', '03:29:57', 'WHA', 'S', '4.78', '100', '0', '0', '0', 'Pending(S)'], ['681193', '03:29:55', 'WHA', 'S', '4.76', '100', '0', '0', '0', 'Pending(S)'], ['586266', '03:29:53', 'WHA', 'S', '4.74', '100', '0', '0', '0', 'Pending(S)'], ['891474', '03:29:38', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Matched(M)']]
2019-09-07 03:30:12,073,73 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:12,073,73 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3693, 'orderno': '145624', 'time': '03:30:06', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:12,075,75 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:12,075,75 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3693, 'orderno': '145624', 'time': '03:30:06', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:12,076,76 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:12,076,76 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3692, 'orderno': '369288', 'time': '03:30:04', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:12,078,78 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:12,078,78 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3692, 'orderno': '369288', 'time': '03:30:04', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:12,079,79 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:12,080,80 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3691, 'orderno': '487885', 'time': '03:30:03', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:12,082,82 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:12,082,82 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3691, 'orderno': '487885', 'time': '03:30:03', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:12,084,84 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:12,084,84 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3690, 'orderno': '470526', 'time': '03:30:01', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:12,085,85 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:12,086,86 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3690, 'orderno': '470526', 'time': '03:30:01', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:12,087,87 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:12,087,87 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3689, 'orderno': '612350', 'time': '03:30:00', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:12,088,88 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:12,088,88 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3689, 'orderno': '612350', 'time': '03:30:00', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:12,090,90 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:12,090,90 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3688, 'orderno': '803176', 'time': '03:29:58', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:12,091,91 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:12,091,91 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3688, 'orderno': '803176', 'time': '03:29:58', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:12,093,93 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:12,093,93 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3687, 'orderno': '117286', 'time': '03:29:57', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:12,094,94 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:12,094,94 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3687, 'orderno': '117286', 'time': '03:29:57', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:12,096,96 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:12,096,96 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3686, 'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:12,097,97 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:12,097,97 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3686, 'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:12,099,99 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:12,099,99 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3685, 'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:12,101,101 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:12,101,101 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3685, 'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:12,102,102 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:12,103,103 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:30:12,104,104 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:12,104,104 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:30:12,105,105 DEBUG [packsel.py:649] Do partial update refresh with below data in var mytable
2019-09-07 03:30:12,105,105 DEBUG [packsel.py:650] []
2019-09-07 03:30:12,105,105 DEBUG [plugin_fivesteps.py:454] print price_change from checkprocess2order to order next plugin_fivesteps.py line 239
2019-09-07 03:30:12,106,106 DEBUG [plugin_fivesteps.py:455] 4.58
2019-09-07 03:30:12,106,106 DEBUG [plugin_fivesteps.py:460] Print rt_table this value should be empty for first time buy
2019-09-07 03:30:12,106,106 DEBUG [plugin_fivesteps.py:461] []
2019-09-07 03:30:12,106,106 DEBUG [plugin_fivesteps.py:463] Print configval from def checkprocess2order before fist buy order
2019-09-07 03:30:12,106,106 DEBUG [plugin_fivesteps.py:464] {'planname': <tkinter.StringVar object at 0x03C526B0>, 'rangeselect': <tkinter.StringVar object at 0x03C529D0>, 'monitorstock': <tkinter.StringVar object at 0x03C52B10>, 'initinvest': <tkinter.StringVar object at 0x03C52BB0>, 'volumestep': <tkinter.StringVar object at 0x03C52B70>, 'profitstep': <tkinter.StringVar object at 0x03C526D0>, 'topvaluebuy': <tkinter.StringVar object at 0x03C52710>, 'startvaluebuy': <tkinter.StringVar object at 0x04FE3FD0>, 'stopvaluebuy': <tkinter.StringVar object at 0x04FE3E70>, 'floorvaluebuy': <tkinter.StringVar object at 0x04FEC5D0>, 'firstbuyflag': <tkinter.StringVar object at 0x04FEC650>, 'pluginfile': <tkinter.StringVar object at 0x04FEC250>, 'currentuseId': <tkinter.StringVar object at 0x04FEC1B0>, 'floorvaluerange': <tkinter.StringVar object at 0x04FEC0F0>, 'topvaluerange': <tkinter.StringVar object at 0x04FEC530>, 'commonvaluestep': <tkinter.StringVar object at 0x04FEC110>, 'runningmode': <tkinter.StringVar object at 0x04FEC7D0>, 'totalcostbuy': <tkinter.StringVar object at 0x04FEC690>, 'totalvolumebuy': <tkinter.StringVar object at 0x04FEC770>, 'stockpin': <tkinter.StringVar object at 0x04FEC6D0>, 'remaininvest': <tkinter.StringVar object at 0x04FEC910>}
2019-09-07 03:30:12,110,110 DEBUG [packsel.py:341] *** result from value of resultvaluemonitor def monitoring
2019-09-07 03:30:12,110,110 DEBUG [packsel.py:342] [{'orderno': '586266', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '681193', 'price': '4.76', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '117286', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '803176', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '612350', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '470526', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '487885', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '369288', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '145624', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '891474'}]
2019-09-07 03:30:12,111,111 DEBUG [packsel.py:366] Qrefresh is not empty
2019-09-07 03:30:12,111,111 DEBUG [packsel.py:367] {'qrefresh': 'refreshdb', 'refreshtype': 'partial'}
2019-09-07 03:30:13,238,238 DEBUG [packsel.py:603] Print tablerow before loop
2019-09-07 03:30:13,243,243 DEBUG [packsel.py:610]  	145624	03:30:06	WHA	S	4.90	100	0	0	0	Pending(S)
2019-09-07 03:30:13,254,254 DEBUG [packsel.py:610]  	369288	03:30:04	WHA	S	4.88	100	0	0	0	Pending(S)
2019-09-07 03:30:13,265,265 DEBUG [packsel.py:610]  	487885	03:30:03	WHA	S	4.86	100	0	0	0	Pending(S)
2019-09-07 03:30:13,276,276 DEBUG [packsel.py:610]  	470526	03:30:01	WHA	S	4.84	100	0	0	0	Pending(S)
2019-09-07 03:30:13,288,288 DEBUG [packsel.py:610]  	612350	03:30:00	WHA	S	4.82	100	0	0	0	Pending(S)
2019-09-07 03:30:13,306,306 DEBUG [packsel.py:610]  	803176	03:29:58	WHA	S	4.80	100	0	0	0	Pending(S)
2019-09-07 03:30:13,322,322 DEBUG [packsel.py:610]  	117286	03:29:57	WHA	S	4.78	100	0	0	0	Pending(S)
2019-09-07 03:30:13,322,322 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:30:13,332,332 DEBUG [packsel.py:610]  	681193	03:29:55	WHA	S	4.76	100	0	0	0	Pending(S)
2019-09-07 03:30:13,343,343 DEBUG [packsel.py:610]  	586266	03:29:53	WHA	S	4.74	100	0	0	0	Pending(S)
2019-09-07 03:30:13,358,358 DEBUG [packsel.py:610]  	891474	03:29:38	WHA	B	4.72	1000	0	0	0	Matched(M)
2019-09-07 03:30:13,365,365 INFO [packsel.py:618] Number rows of Table Track = 10
2019-09-07 03:30:13,365,365 DEBUG [packsel.py:638] raw data for mytable before update to database in def refreshbtn
2019-09-07 03:30:13,365,365 DEBUG [packsel.py:639] [['145624', '03:30:06', 'WHA', 'S', '4.90', '100', '0', '0', '0', 'Pending(S)'], ['369288', '03:30:04', 'WHA', 'S', '4.88', '100', '0', '0', '0', 'Pending(S)'], ['487885', '03:30:03', 'WHA', 'S', '4.86', '100', '0', '0', '0', 'Pending(S)'], ['470526', '03:30:01', 'WHA', 'S', '4.84', '100', '0', '0', '0', 'Pending(S)'], ['612350', '03:30:00', 'WHA', 'S', '4.82', '100', '0', '0', '0', 'Pending(S)'], ['803176', '03:29:58', 'WHA', 'S', '4.80', '100', '0', '0', '0', 'Pending(S)'], ['117286', '03:29:57', 'WHA', 'S', '4.78', '100', '0', '0', '0', 'Pending(S)'], ['681193', '03:29:55', 'WHA', 'S', '4.76', '100', '0', '0', '0', 'Pending(S)'], ['586266', '03:29:53', 'WHA', 'S', '4.74', '100', '0', '0', '0', 'Pending(S)'], ['891474', '03:29:38', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Matched(M)']]
2019-09-07 03:30:13,365,365 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:13,365,365 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3693, 'orderno': '145624', 'time': '03:30:06', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:13,367,367 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:13,367,367 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3693, 'orderno': '145624', 'time': '03:30:06', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:13,368,368 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:13,368,368 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3692, 'orderno': '369288', 'time': '03:30:04', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:13,370,370 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:13,370,370 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3692, 'orderno': '369288', 'time': '03:30:04', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:13,371,371 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:13,372,372 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3691, 'orderno': '487885', 'time': '03:30:03', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:13,373,373 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:13,373,373 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3691, 'orderno': '487885', 'time': '03:30:03', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:13,374,374 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:13,375,375 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3690, 'orderno': '470526', 'time': '03:30:01', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:13,376,376 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:13,376,376 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3690, 'orderno': '470526', 'time': '03:30:01', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:13,378,378 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:13,378,378 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3689, 'orderno': '612350', 'time': '03:30:00', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:13,379,379 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:13,379,379 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3689, 'orderno': '612350', 'time': '03:30:00', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:13,381,381 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:13,381,381 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3688, 'orderno': '803176', 'time': '03:29:58', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:13,383,383 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:13,383,383 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3688, 'orderno': '803176', 'time': '03:29:58', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:13,385,385 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:13,385,385 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3687, 'orderno': '117286', 'time': '03:29:57', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:13,386,386 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:13,386,386 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3687, 'orderno': '117286', 'time': '03:29:57', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:13,388,388 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:13,388,388 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3686, 'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:13,389,389 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:13,389,389 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3686, 'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:13,391,391 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:13,391,391 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3685, 'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:13,392,392 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:13,392,392 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3685, 'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:13,394,394 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:13,394,394 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:30:13,395,395 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:13,395,395 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:30:13,397,397 DEBUG [packsel.py:649] Do partial update refresh with below data in var mytable
2019-09-07 03:30:13,397,397 DEBUG [packsel.py:650] []
2019-09-07 03:30:13,397,397 DEBUG [plugin_fivesteps.py:504] === Print check_params , self.matchedordermonitor in def checkprocess2matchstatus
2019-09-07 03:30:13,397,397 DEBUG [plugin_fivesteps.py:505] []
2019-09-07 03:30:13,397,397 DEBUG [plugin_fivesteps.py:506] === Print self.matchedordermonitor , self.matchedordermonitor in def checkprocess2matchstatus
2019-09-07 03:30:13,397,397 DEBUG [plugin_fivesteps.py:507] [{'orderno': '586266', 'price': '4.74', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '681193', 'price': '4.76', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '117286', 'price': '4.78', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '803176', 'price': '4.80', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '612350', 'price': '4.82', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '470526', 'price': '4.84', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '487885', 'price': '4.86', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '369288', 'price': '4.88', 'status': 'Pending(S)', 'referorderno': '891474'}, {'orderno': '145624', 'price': '4.90', 'status': 'Pending(S)', 'referorderno': '891474'}]
2019-09-07 03:30:13,441,441 DEBUG [tkconsole.py:890] Do update refresh GUI tk according to queue with qrefresh qrefresh=refreshtk and chkrefresh != None
2019-09-07 03:30:13,441,441 DEBUG [tkconsole.py:891] {'qrefresh': 'refreshtk', 'doupdatetk': [{'orderno': '145624', 'time': '03:30:06', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'matchedtime': 'matchtime', 'referorderno': '891474'}]}
2019-09-07 03:30:13,441,441 DEBUG [tkconsole.py:914] print repeatidx case of price == 0
2019-09-07 03:30:13,441,441 DEBUG [tkconsole.py:915] 0
2019-09-07 03:30:14,367,367 DEBUG [tkconsole.py:370] Refresh time for partial with put into queue for refreshdb
2019-09-07 03:30:14,556,556 DEBUG [packsel.py:603] Print tablerow before loop
2019-09-07 03:30:14,561,561 DEBUG [packsel.py:610]  	145624	03:30:06	WHA	S	4.90	100	0	0	0	Pending(S)
2019-09-07 03:30:14,572,572 DEBUG [packsel.py:610]  	369288	03:30:04	WHA	S	4.88	100	0	0	0	Pending(S)
2019-09-07 03:30:14,584,584 DEBUG [packsel.py:610]  	487885	03:30:03	WHA	S	4.86	100	0	0	0	Pending(S)
2019-09-07 03:30:14,597,597 DEBUG [packsel.py:610]  	470526	03:30:01	WHA	S	4.84	100	0	0	0	Pending(S)
2019-09-07 03:30:14,610,610 DEBUG [packsel.py:610]  	612350	03:30:00	WHA	S	4.82	100	0	0	0	Pending(S)
2019-09-07 03:30:14,623,623 DEBUG [packsel.py:610]  	803176	03:29:58	WHA	S	4.80	100	0	0	0	Pending(S)
2019-09-07 03:30:14,635,635 DEBUG [packsel.py:610]  	117286	03:29:57	WHA	S	4.78	100	0	0	0	Pending(S)
2019-09-07 03:30:14,647,647 DEBUG [packsel.py:610]  	681193	03:29:55	WHA	S	4.76	100	0	0	0	Pending(S)
2019-09-07 03:30:14,660,660 DEBUG [packsel.py:610]  	586266	03:29:53	WHA	S	4.74	100	0	0	0	Pending(S)
2019-09-07 03:30:14,672,672 DEBUG [packsel.py:610]  	891474	03:29:38	WHA	B	4.72	1000	0	0	0	Matched(M)
2019-09-07 03:30:14,679,679 INFO [packsel.py:618] Number rows of Table Track = 10
2019-09-07 03:30:14,679,679 DEBUG [packsel.py:638] raw data for mytable before update to database in def refreshbtn
2019-09-07 03:30:14,679,679 DEBUG [packsel.py:639] [['145624', '03:30:06', 'WHA', 'S', '4.90', '100', '0', '0', '0', 'Pending(S)'], ['369288', '03:30:04', 'WHA', 'S', '4.88', '100', '0', '0', '0', 'Pending(S)'], ['487885', '03:30:03', 'WHA', 'S', '4.86', '100', '0', '0', '0', 'Pending(S)'], ['470526', '03:30:01', 'WHA', 'S', '4.84', '100', '0', '0', '0', 'Pending(S)'], ['612350', '03:30:00', 'WHA', 'S', '4.82', '100', '0', '0', '0', 'Pending(S)'], ['803176', '03:29:58', 'WHA', 'S', '4.80', '100', '0', '0', '0', 'Pending(S)'], ['117286', '03:29:57', 'WHA', 'S', '4.78', '100', '0', '0', '0', 'Pending(S)'], ['681193', '03:29:55', 'WHA', 'S', '4.76', '100', '0', '0', '0', 'Pending(S)'], ['586266', '03:29:53', 'WHA', 'S', '4.74', '100', '0', '0', '0', 'Pending(S)'], ['891474', '03:29:38', 'WHA', 'B', '4.72', '1000', '0', '0', '0', 'Matched(M)']]
2019-09-07 03:30:14,679,679 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:14,679,679 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3693, 'orderno': '145624', 'time': '03:30:06', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:14,681,681 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:14,681,681 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3693, 'orderno': '145624', 'time': '03:30:06', 'symbole': 'WHA', 'side': 'S', 'price': '4.90', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:14,682,682 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:14,683,683 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3692, 'orderno': '369288', 'time': '03:30:04', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:14,684,684 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:14,684,684 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3692, 'orderno': '369288', 'time': '03:30:04', 'symbole': 'WHA', 'side': 'S', 'price': '4.88', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:14,686,686 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:14,686,686 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3691, 'orderno': '487885', 'time': '03:30:03', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:14,687,687 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:14,687,687 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3691, 'orderno': '487885', 'time': '03:30:03', 'symbole': 'WHA', 'side': 'S', 'price': '4.86', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:14,689,689 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:14,689,689 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3690, 'orderno': '470526', 'time': '03:30:01', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:14,691,691 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:14,691,691 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3690, 'orderno': '470526', 'time': '03:30:01', 'symbole': 'WHA', 'side': 'S', 'price': '4.84', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:14,692,692 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:14,692,692 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3689, 'orderno': '612350', 'time': '03:30:00', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:14,694,694 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:14,694,694 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3689, 'orderno': '612350', 'time': '03:30:00', 'symbole': 'WHA', 'side': 'S', 'price': '4.82', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:14,695,695 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:14,696,696 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3688, 'orderno': '803176', 'time': '03:29:58', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:14,697,697 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:14,697,697 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3688, 'orderno': '803176', 'time': '03:29:58', 'symbole': 'WHA', 'side': 'S', 'price': '4.80', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:14,699,699 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:14,699,699 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3687, 'orderno': '117286', 'time': '03:29:57', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:14,701,701 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:14,701,701 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3687, 'orderno': '117286', 'time': '03:29:57', 'symbole': 'WHA', 'side': 'S', 'price': '4.78', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:14,702,702 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:14,702,702 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3686, 'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:14,704,704 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:14,704,704 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3686, 'orderno': '681193', 'time': '03:29:55', 'symbole': 'WHA', 'side': 'S', 'price': '4.76', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:14,705,705 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:14,705,705 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3685, 'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:14,707,707 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:14,707,707 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3685, 'orderno': '586266', 'time': '03:29:53', 'symbole': 'WHA', 'side': 'S', 'price': '4.74', 'volume': '100', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Pending(S)', 'date': datetime.date(2019, 9, 7), 'matchedtime': 'matchtime', 'referorderno': '891474'}]>
2019-09-07 03:30:14,708,708 DEBUG [packsel_model.py:369] Result from query database filter by orderno
2019-09-07 03:30:14,708,708 DEBUG [packsel_model.py:370] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:30:14,710,710 DEBUG [packsel_model.py:414] SQL Found Enter case checkorderno.existing and partial refresh order below
2019-09-07 03:30:14,710,710 DEBUG [packsel_model.py:415] <QuerySet [{'id': 3684, 'orderno': '891474', 'time': '03:29:38', 'symbole': 'WHA', 'side': 'B', 'price': '4.72', 'volume': '1000', 'matched': '0', 'balance': '0', 'cancelled': '0', 'status': 'Matched(M)', 'date': datetime.date(2019, 9, 7), 'matchedtime': '03:29:53', 'referorderno': 'None'}]>
2019-09-07 03:30:14,711,711 DEBUG [packsel.py:649] Do partial update refresh with below data in var mytable
2019-09-07 03:30:14,711,711 DEBUG [packsel.py:650] []
2019-09-07 03:30:14,711,711 DEBUG [plugin_fivesteps.py:454] print price_change from checkprocess2order to order next plugin_fivesteps.py line 239
2019-09-07 03:30:14,711,711 DEBUG [plugin_fivesteps.py:455] 4.56
2019-09-07 03:30:14,711,711 DEBUG [plugin_fivesteps.py:460] Print rt_table this value should be empty for first time buy
2019-09-07 03:30:14,711,711 DEBUG [plugin_fivesteps.py:461] []
2019-09-07 03:30:14,711,711 DEBUG [plugin_fivesteps.py:463] Print configval from def checkprocess2order before fist buy order
2019-09-07 03:30:14,711,711 DEBUG [plugin_fivesteps.py:464] {'planname': <tkinter.StringVar object at 0x03C526B0>, 'rangeselect': <tkinter.StringVar object at 0x03C529D0>, 'monitorstock': <tkinter.StringVar object at 0x03C52B10>, 'initinvest': <tkinter.StringVar object at 0x03C52BB0>, 'volumestep': <tkinter.StringVar object at 0x03C52B70>, 'profitstep': <tkinter.StringVar object at 0x03C526D0>, 'topvaluebuy': <tkinter.StringVar object at 0x03C52710>, 'startvaluebuy': <tkinter.StringVar object at 0x04FE3FD0>, 'stopvaluebuy': <tkinter.StringVar object at 0x04FE3E70>, 'floorvaluebuy': <tkinter.StringVar object at 0x04FEC5D0>, 'firstbuyflag': <tkinter.StringVar object at 0x04FEC650>, 'pluginfile': <tkinter.StringVar object at 0x04FEC250>, 'currentuseId': <tkinter.StringVar object at 0x04FEC1B0>, 'floorvaluerange': <tkinter.StringVar object at 0x04FEC0F0>, 'topvaluerange': <tkinter.StringVar object at 0x04FEC530>, 'commonvaluestep': <tkinter.StringVar object at 0x04FEC110>, 'runningmode': <tkinter.StringVar object at 0x04FEC7D0>, 'totalcostbuy': <tkinter.StringVar object at 0x04FEC690>, 'totalvolumebuy': <tkinter.StringVar object at 0x04FEC770>, 'stockpin': <tkinter.StringVar object at 0x04FEC6D0>, 'remaininvest': <tkinter.StringVar object at 0x04FEC910>}
